{"version":3,"file":"ui_packages_copy-to-clipboard_index_ts-ui_packages_react-core_use-feature-flag_ts-ui_packages-9fa6b6-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copy-to-clipboard/copy.ts","ui/packages/get-scrollable-parent/get-scrollable-parent.ts","ui/packages/react-core/use-feature-flag.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/code-view-shared/components/SharedMarkdownContent.tsx","ui/packages/code-view-shared/utilities/fragment-target.ts","ui/packages/copy-to-clipboard/CopyToClipboardButton.tsx","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/portal-tooltip/ControlledTooltip.tsx","ui/packages/portal-tooltip/PortalTooltip.tsx","ui/packages/portal-tooltip/hooks/UsePortalTooltip.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["function createNode(text: string): Element {\n  const node = document.createElement('pre')\n  node.style.width = '1px'\n  node.style.height = '1px'\n  node.style.position = 'fixed'\n  node.style.top = '5px'\n  node.textContent = text\n  return node\n}\n\nfunction copyNode(node: Element): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(node.textContent || '')\n  }\n\n  const selection = getSelection()\n  if (selection == null) {\n    return Promise.reject(new Error())\n  }\n\n  selection.removeAllRanges()\n\n  const range = document.createRange()\n  range.selectNodeContents(node)\n  selection.addRange(range)\n\n  document.execCommand('copy')\n  selection.removeAllRanges()\n  return Promise.resolve()\n}\n\nexport function copyText(text: string): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(text)\n  }\n\n  const body = document.body\n  if (!body) {\n    return Promise.reject(new Error())\n  }\n\n  const node = createNode(text)\n  body.appendChild(node)\n  copyNode(node)\n  body.removeChild(node)\n  return Promise.resolve()\n}\n","const hasScrollableParent = (node: Element) => {\n  const computedStyle = getComputedStyle(node, null)\n  return ['overflow', 'overflow-y', 'overflow-x'].some(overflow => {\n    const value = computedStyle.getPropertyValue(overflow)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nconst collectParents = (node: Node | null, ps: Node[]): Node[] => {\n  if (!node || node.parentNode === null) {\n    return ps\n  }\n  return collectParents(node.parentNode, ps.concat([node]))\n}\n\n/**\n * Traverse the DOM tree up to find the first scrollable parent of a given element,\n * returning `document.scrollingElement` or `document.documentElement` if none is found\n */\nexport function getScrollableParent(node: HTMLElement | SVGElement) {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return\n  }\n\n  const ps = collectParents(node.parentNode, [])\n\n  for (const item of ps) {\n    if ((item instanceof HTMLElement || item instanceof SVGElement) && hasScrollableParent(item)) {\n      return item\n    }\n  }\n\n  return document.scrollingElement || document.documentElement\n}\n","import {useAppPayload} from './use-app-payload'\n\nexport type AppPayloadWithFeatureFlags = {enabled_features?: EnabledFeatures}\nexport type EnabledFeatures = {[key: string]: boolean | undefined}\n\n/**\n * Fetches all client side feature flags.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlags = () => useAppPayload<AppPayloadWithFeatureFlags>()?.enabled_features ?? {}\n\n/**\n * Fetches a specific client side feature flag.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlag = (featureName: string) => !!useFeatureFlags()[featureName]\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useCurrentRepository} from '@github-ui/current-repository'\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {SafeHTMLBox, type SafeHTMLString} from '@github-ui/safe-html'\nimport {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport type React from 'react'\nimport {forwardRef, useEffect, useImperativeHandle, useRef} from 'react'\n\nimport {useLocation} from 'react-router-dom'\n\nimport {decodeFragmentValue, findElementByFragmentName} from '../utilities/fragment-target'\n\nexport interface SharedMarkdownContentProps {\n  onAnchorClick?: (event: React.MouseEvent) => void\n  richText: SafeHTMLString\n  stickyHeaderHeight?: number\n  sx?: React.ComponentProps<typeof SafeHTMLBox>['sx']\n  suppressHydrationWarning?: boolean\n}\n\nexport const SharedMarkdownContent = forwardRef<HTMLDivElement, SharedMarkdownContentProps>(\n  function SharedMarkdownContent(\n    {onAnchorClick, richText, stickyHeaderHeight, sx, suppressHydrationWarning}: SharedMarkdownContentProps,\n    ref,\n  ) {\n    const {hash} = useLocation()\n    const currentRepo = useCurrentRepository()\n    const navigate = useNavigate()\n    const markdownContainerRef = useRef<HTMLDivElement>(null)\n\n    useImperativeHandle(ref, () => markdownContainerRef.current as HTMLDivElement)\n\n    useEffect(() => {\n      const hashChange = () => {\n        onHashChange(window.location.hash, stickyHeaderHeight)\n      }\n\n      window.addEventListener('load', hashChange)\n      window.addEventListener('hashchange', hashChange)\n      return () => {\n        window.removeEventListener('load', hashChange)\n        window.removeEventListener('hashchange', hashChange)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useLayoutEffect(() => {\n      if (markdownContainerRef?.current) {\n        onHashChange(window.location.hash, stickyHeaderHeight)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hash])\n\n    return (\n      <SafeHTMLBox\n        ref={markdownContainerRef}\n        className=\"js-snippet-clipboard-copy-unpositioned\"\n        html={richText}\n        sx={sx}\n        suppressHydrationWarning={suppressHydrationWarning}\n        data-hpc\n        onClick={event => {\n          // don't soft navigate if the user cmd/ctrl + click\n          // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n          const isCmdClick = event.metaKey || event.ctrlKey\n          const anchor = (event.target as HTMLElement).closest('a')\n          if (anchor && anchor.href) {\n            if (!isCmdClick) {\n              const href = anchor.href\n              const url = new URL(href, window.location.origin)\n\n              if (isHashNavigation(window.location.href, href)) {\n                onHashChange(url.hash, stickyHeaderHeight)\n                if (window.location.hash === url.hash) {\n                  event.preventDefault()\n                }\n              } else if (href.startsWith(`${window.location.origin}/${currentRepo.ownerLogin}/${currentRepo.name}/`)) {\n                navigate(url.pathname + url.search + url.hash)\n                event.preventDefault()\n              }\n            }\n            onAnchorClick?.(event)\n          }\n        }}\n      />\n    )\n  },\n)\n\n// 125px is the blob sticky header height\nexport function onHashChange(hash: string, stickyHeaderHeight: number = 125) {\n  if (!hash) {\n    return\n  }\n\n  const targetId = decodeFragmentValue(hash).toLowerCase()\n  // a user can generate their own hash links that already include the prefix (typically for cross document links)\n  // the majority of targetIds provided to the helper will exclude the prefix\n  const normalizedTarget = targetId.startsWith('user-content-') ? targetId : `user-content-${targetId}`\n  const target = findElementByFragmentName(document, normalizedTarget) as HTMLElement | null\n  if (target && document && document.defaultView) {\n    // On Soft Nav, this scrollTo and focus loginc can run essentialy one tick after it's called to ensure elements are in the DOM\n    setTimeout(() => {\n      window.requestAnimationFrame(() => {\n        const targetScroll =\n          target.getBoundingClientRect().top - document.body.getBoundingClientRect().top - stickyHeaderHeight\n        window.scrollTo({top: targetScroll})\n        const focusElement = target.closest<HTMLElement>('h1,h2,h3,h4,h5,h6,li,span')\n        if (focusElement) {\n          focusElement.focus()\n          // Set this attribute so soft-navs will autofocus\n          focusElement.setAttribute('data-react-autofocus', 'true')\n        }\n      })\n    }, 1)\n  }\n}\n\ntry{ SharedMarkdownContent.displayName ||= 'SharedMarkdownContent' } catch {}\ntry{ SharedMarkdownContent.displayName ||= 'SharedMarkdownContent' } catch {}","// Find element within document matching location hash.\nexport function findFragmentTarget(document: Document, hash: string = location.hash): Element | null {\n  return findElementByFragmentName(document, decodeFragmentValue(hash))\n}\n\n// Find element within document matching id or name.\nexport function findElementByFragmentName(document: Document, name: string): Element | null {\n  if (name === '') return null\n  return document.getElementById(name) || document.getElementsByName(name)[0] || null\n}\n\n// Decode location hash.\nexport function decodeFragmentValue(hash: string): string {\n  try {\n    return decodeURIComponent(hash.slice(1))\n  } catch {\n    return ''\n  }\n}\n","import {usePortalTooltip, type PortalTooltipProps} from '@github-ui/portal-tooltip/use-portal-tooltip'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport type {Icon} from '@primer/octicons-react'\nimport {CheckIcon, CopyIcon} from '@primer/octicons-react'\nimport type {SxProp, TooltipProps} from '@primer/react'\nimport {IconButton, Octicon} from '@primer/react'\nimport React from 'react'\nimport {clsx} from 'clsx'\nimport {Tooltip} from '@primer/react/next'\nimport {announce} from '@github-ui/aria-live'\n\nimport {copyText} from './copy'\n\nconst copyConfirmationMsDelay = 2000\n\nexport interface CopyToClipboardButtonProps extends SxProp {\n  /**\n   * Octicon that is displayed on the copy button\n   *\n   * @default CopyIcon\n   */\n  icon?: Icon\n  /**\n   * Size of the button, passed to IconButton\n   */\n  size?: 'small' | 'medium' | 'large'\n  /**\n   * Optional callback that is invoked when the user clicks the copy button\n   */\n  onCopy?: () => void\n  /**\n   * Text that will be copied to the clipboard\n   */\n  textToCopy: string\n  /**\n   * Props that will be applied to tooltips\n   */\n  tooltipProps?: TooltipProps | PortalTooltipProps\n  /**\n   * Text that will be displayed in the tooltip\n   */\n  ariaLabel?: string | null\n  /**\n   * If the button should be accessible or not\n   */\n  accessibleButton?: boolean\n  /**\n   * Whether or not to use the portal tooltip\n   */\n  hasPortalTooltip?: boolean\n  /**\n   * Whether or not to avoid using styled-components when rendering a portalled tooltip button\n   * If true, underlying icon button will be rendered with <button> + Primer CSS\n   * If false, underlying icon button will be rendered with Primer's <IconButton>\n   * Providing a custom sx prop will override this behavior and use styled-components\n   * @default false\n   */\n  avoidStyledComponent?: boolean\n  /**\n   * Apply Primer CSS utility classes to button\n   * See https://primer.style/foundations/css-utilities\n   */\n  className?: string\n}\n\nexport function CopyToClipboardButton({\n  icon = CopyIcon,\n  size = 'medium',\n  onCopy,\n  sx,\n  textToCopy,\n  tooltipProps,\n  ariaLabel,\n  accessibleButton,\n  hasPortalTooltip = false,\n  avoidStyledComponent = false,\n  className,\n}: CopyToClipboardButtonProps) {\n  const [copied, setCopied] = React.useState(false)\n  const isMounted = useIsMounted()\n  const onClickCopy = () => {\n    setCopied(true)\n    announce('Copied!')\n    void copyText(textToCopy)\n    onCopy?.()\n    setTimeout(() => isMounted() && setCopied(false), copyConfirmationMsDelay)\n  }\n\n  const label = ariaLabel ?? `Copy ${textToCopy} to clipboard`\n  const visibleTooltipText = copied ? 'Copied!' : label\n\n  // We are adding `aria-hidden=\"true\"` to the tooltip because the button has an accessible name.\n  // We don't want to override that when the visible text updates to \"Copied!\" because\n  // our screen reader announcement will let the user know their action was successful in the most\n  // consistent way across browsers and assistive technology.\n  tooltipProps = {...tooltipProps, 'aria-hidden': 'true'}\n\n  if (hasPortalTooltip) {\n    return (\n      <PortalTooltipCopyButton\n        label={label}\n        size={size}\n        textToCopy={textToCopy}\n        copied={copied}\n        onClickCopy={onClickCopy}\n        tooltipProps={tooltipProps}\n        text={visibleTooltipText}\n        avoidStyledComponent={avoidStyledComponent}\n        sx={sx}\n        className={className}\n      />\n    )\n  }\n  return (\n    <Tooltip\n      className=\"position-absolute\"\n      text={visibleTooltipText}\n      aria-label={label}\n      type={'label'}\n      {...tooltipProps}\n    >\n      {/* @ts-expect-error aria-labelledby is automatically added at runtime */}\n      <IconButton\n        icon={copied ? CheckIcon : icon}\n        variant=\"invisible\"\n        size={size}\n        tabIndex={accessibleButton === false ? -1 : 0}\n        className={clsx(copied ? 'color-fg-success' : undefined, className)}\n        sx={{...sx}}\n        onClick={onClickCopy}\n      />\n    </Tooltip>\n  )\n}\n\ninterface PortalTooltipCopyButtonProps extends CopyToClipboardButtonProps {\n  /**\n   * Text that will be displayed in the tooltip\n   */\n  label: string\n  /**\n   * Copy state\n   */\n  copied: boolean\n  /**\n   * Function to call when copy button is clicked\n   */\n  onClickCopy: () => void\n  /**\n   * Text that should be passed in for the visible label when it is different than the aria-label\n   */\n  text?: string\n}\n\nfunction PortalTooltipCopyButton({\n  icon = CopyIcon,\n  size = 'medium',\n  label,\n  accessibleButton,\n  copied,\n  onClickCopy,\n  text,\n  tooltipProps,\n  sx,\n  avoidStyledComponent = false,\n  className,\n}: PortalTooltipCopyButtonProps) {\n  const contentRef = React.useRef<HTMLDivElement>(null)\n  const [buttonContentProps, buttonTooltipElement] = usePortalTooltip({\n    contentRef,\n    'aria-label': label,\n    text,\n    ...tooltipProps,\n  })\n\n  return (\n    <div ref={contentRef} {...buttonContentProps}>\n      <PortalCopyIconButton\n        icon={icon}\n        size={size}\n        label={label}\n        copied={copied}\n        onClickCopy={onClickCopy}\n        accessibleButton={accessibleButton}\n        avoidStyledComponent={avoidStyledComponent}\n        className={className}\n        sx={sx}\n      />\n      {buttonTooltipElement}\n    </div>\n  )\n}\n\ntype CopyIconButtonProps = Pick<\n  PortalTooltipCopyButtonProps,\n  | 'icon'\n  | 'size'\n  | 'label'\n  | 'accessibleButton'\n  | 'copied'\n  | 'onClickCopy'\n  | 'sx'\n  | 'avoidStyledComponent'\n  | 'className'\n>\n\nfunction PortalCopyIconButton({\n  icon = CopyIcon,\n  size = 'medium',\n  label,\n  accessibleButton,\n  copied,\n  onClickCopy,\n  sx,\n  avoidStyledComponent = false,\n  className,\n}: CopyIconButtonProps) {\n  if (avoidStyledComponent && !sx) {\n    return (\n      <button\n        aria-label={label}\n        tabIndex={accessibleButton === false ? -1 : 0}\n        className={clsx(\n          `Button Button--iconOnly Button--invisible Button--${size} ${copied ? 'color-fg-success' : ''}`,\n          className,\n        )}\n        onClick={onClickCopy}\n      >\n        {copied ? <CheckIcon /> : <Octicon icon={icon} />}\n      </button>\n    )\n  }\n\n  return (\n    // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n    <IconButton\n      unsafeDisableTooltip={true}\n      aria-label={label}\n      icon={copied ? CheckIcon : icon}\n      variant=\"invisible\"\n      size={size}\n      tabIndex={accessibleButton === false ? -1 : 0}\n      className={copied ? 'color-fg-success' : undefined}\n      sx={{...sx}}\n      onClick={onClickCopy}\n    />\n  )\n}\n\ntry{ CopyToClipboardButton.displayName ||= 'CopyToClipboardButton' } catch {}\ntry{ PortalTooltipCopyButton.displayName ||= 'PortalTooltipCopyButton' } catch {}\ntry{ PortalCopyIconButton.displayName ||= 'PortalCopyIconButton' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {Portal, type PortalProps, sx, type SxProp, themeGet, type TooltipProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {forwardRef, useSyncExternalStore} from 'react'\nimport styled from 'styled-components'\n\n/**\n * This file is a copy of the file at: {@link https://github.com/primer/react/blob/main/src/Tooltip.tsx} with\n * some modifications to allow the tooltip to be controlled by the parent component.\n */\n\nconst TooltipBase = styled.span<SxProp>`\n  &::after {\n    position: absolute;\n    z-index: 1000000;\n    display: none;\n    /* stylelint-disable-next-line primer/spacing */\n    padding: 0.5em 0.75em;\n    font: normal normal 11px/1.5 ${themeGet('fonts.normal')};\n    -webkit-font-smoothing: subpixel-antialiased;\n    color: ${themeGet('colors.fg.onEmphasis')};\n    text-align: center;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: break-word;\n    white-space: pre;\n    pointer-events: none;\n    content: attr(data-visible-text);\n    background: ${themeGet('colors.neutral.emphasisPlus')};\n    border-radius: ${themeGet('radii.2')};\n    opacity: 0;\n  }\n  /* delay animation for tooltip */\n  @keyframes tooltip-appear {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  &.tooltipped-open,\n  &:hover,\n  &:active,\n  &:focus {\n    &::after {\n      display: inline-block;\n      text-decoration: none;\n      animation-name: tooltip-appear;\n      animation-duration: 0.1s;\n      animation-fill-mode: forwards;\n      animation-timing-function: ease-in;\n      animation-delay: 0s;\n    }\n  }\n\n  &.tooltipped-no-delay.tooltipped-open,\n  &.tooltipped-no-delay:hover,\n  &.tooltipped-no-delay:active,\n  &.tooltipped-no-delay:focus {\n    &::after {\n      animation-delay: 0s;\n    }\n  }\n\n  /* Tooltipped south */\n  &.tooltipped-s,\n  &.tooltipped-se,\n  &.tooltipped-sw {\n    &::after {\n      top: 100%;\n      right: 50%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-top: 6px;\n    }\n  }\n  &.tooltipped-se {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -${themeGet('space.3')};\n    }\n  }\n  &.tooltipped-sw::after {\n    margin-right: -${themeGet('space.3')};\n  }\n  /* Tooltips above the object */\n  &.tooltipped-n,\n  &.tooltipped-ne,\n  &.tooltipped-nw {\n    &::after {\n      right: 50%;\n      bottom: 100%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-bottom: 6px;\n    }\n  }\n  &.tooltipped-ne {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -${themeGet('space.3')};\n    }\n  }\n  &.tooltipped-nw::after {\n    margin-right: -${themeGet('space.3')};\n  }\n  /* Move the tooltip body to the center of the object. */\n  &.tooltipped-s::after,\n  &.tooltipped-n::after {\n    transform: translateX(50%);\n  }\n  /* Tooltipped to the left */\n  &.tooltipped-w {\n    &::after {\n      right: 100%;\n      bottom: 50%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-right: 6px;\n      transform: translateY(50%);\n    }\n  }\n  /* tooltipped to the right */\n  &.tooltipped-e {\n    &::after {\n      bottom: 50%;\n      left: 100%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-left: 6px;\n      transform: translateY(50%);\n    }\n  }\n  &.tooltipped-align-right-2::after {\n    right: 0;\n    margin-right: 0;\n  }\n  &.tooltipped-align-left-2::after {\n    left: 0;\n    margin-left: 0;\n  }\n  ${sx};\n`\n\nexport type ControlledTooltipProps = Omit<TooltipProps, 'children'> & {\n  /**\n   * Whether the tooltip is open or closed\n   */\n  open?: boolean\n  /**\n   * Props passed into the portal\n   */\n  portalProps?: PortalProps\n}\n\nconst noop = () => () => undefined\nconst getServerSideState = () => false\nconst getClientSideState = () => true\n/**\n * An extended `@primer/react` tooltip (based on version 35.21 and prior) which allows for external control\n * using an `open` prop\n */\nexport const ControlledTooltip = forwardRef<HTMLSpanElement, ControlledTooltipProps>(function ControlledPortalTooltip(\n  {direction = 'n', className, text, noDelay, align, wrap, open = false, portalProps = {}, ...rest},\n  ref,\n) {\n  const isClientRender = useSyncExternalStore(noop, getClientSideState, getServerSideState)\n  const classes = clsx(\n    className,\n    `tooltipped-${direction}`,\n    align && `tooltipped-align-${align}-2`,\n    noDelay && 'tooltipped-no-delay',\n    wrap && 'tooltipped-multiline',\n    open && 'tooltipped-open',\n  )\n  if (!isClientRender) return null\n  return (\n    <Portal {...portalProps}>\n      <TooltipBase\n        ref={ref}\n        role=\"tooltip\"\n        aria-label={text}\n        data-visible-text={text || rest['aria-label']}\n        {...rest}\n        sx={{\n          position: 'fixed',\n          zIndex: 1,\n          ...rest.sx,\n        }}\n        className={classes}\n      />\n    </Portal>\n  )\n})\n\ntry{ ControlledTooltip.displayName ||= 'ControlledTooltip' } catch {}","import {getAnchoredPosition, type PositionSettings} from '@primer/behaviors'\nimport {forwardRef, useCallback, useImperativeHandle, useRef, useSyncExternalStore} from 'react'\n\nimport {ControlledTooltip, type ControlledTooltipProps} from './ControlledTooltip'\nimport {getScrollableParent} from '@github-ui/get-scrollable-parent'\n\nexport interface PortalTooltipProps extends ControlledTooltipProps {\n  /**\n   * A ref to the element that the tooltip should be positioned relative to\n   */\n  contentRef: React.RefObject<HTMLElement>\n  anchoredPositionAlignment?: PositionSettings['align']\n  anchorSide?: PositionSettings['side']\n  anchorOffset?: number\n  alignmentOffset?: number\n  allowOutOfBounds?: boolean\n  includeAriaAttributes?: boolean\n}\n\n/**\n * A tooltip that portals an uses absolute positioning to position itself relative to the contentRef\n *\n * it tricks scroll in the nearest scrollable parent to the contentRef to reposition itself.\n *\n * For now this uses the aria-label prop similar to the primer tooltip, but a more complete implementation\n * would allow for using children to tooltip rich content\n */\nexport const PortalTooltip = forwardRef<HTMLSpanElement, PortalTooltipProps & {id: string}>(function PortalTooltip(\n  {contentRef, open, anchoredPositionAlignment, anchorSide, anchorOffset, alignmentOffset, allowOutOfBounds, ...props},\n  forwardedRef,\n) {\n  const ref = useRef<HTMLSpanElement>(null)\n  useImperativeHandle<HTMLSpanElement | null, HTMLSpanElement | null>(forwardedRef, () => ref.current)\n\n  const positionCache = useRef<{left: number; top: number}>({left: 0, top: 0})\n  const position = useSyncExternalStore(\n    useCallback(\n      notify => {\n        if (!ref.current || !contentRef.current || !open) {\n          return () => undefined\n        }\n        const scrollableParent = getScrollableParent(contentRef.current)\n        // eslint-disable-next-line github/prefer-observers\n        scrollableParent?.addEventListener('scroll', notify)\n        return () => {\n          scrollableParent?.removeEventListener('scroll', notify)\n        }\n      },\n      [contentRef, open],\n    ),\n    useCallback(() => {\n      if (!ref.current || !contentRef.current) {\n        return positionCache.current\n      }\n      const nextPosition = getAnchoredPosition(ref.current, contentRef.current, {\n        align: anchoredPositionAlignment ?? 'center',\n        side: anchorSide ?? 'outside-top',\n        alignmentOffset: alignmentOffset ?? 0,\n        anchorOffset: anchorOffset ?? 0,\n        allowOutOfBounds,\n      })\n      if (nextPosition.left !== positionCache.current.left || nextPosition.top !== positionCache.current.top) {\n        positionCache.current = nextPosition\n      }\n      return positionCache.current\n    }, [contentRef, alignmentOffset, anchorOffset, anchoredPositionAlignment, anchorSide, allowOutOfBounds]),\n    useCallback(() => positionCache.current, []),\n  )\n\n  return (\n    <ControlledTooltip\n      {...props}\n      ref={ref}\n      open={open}\n      style={{\n        position: 'absolute',\n        ...position,\n        ...props.style,\n      }}\n    />\n  )\n})\n\ntry{ PortalTooltip.displayName ||= 'PortalTooltip' } catch {}","import {useCallback, useId, useState} from 'react'\n\nimport {PortalTooltip, type PortalTooltipProps} from '../PortalTooltip'\n\nexport type {PortalTooltipProps}\n\n/**\n * A hook that returns a set of props for controlling a portal tooltip from a parent element, as well as the\n * portalled element\n *\n * This provides a simple, base case usage, without having to configure much directly, automatically generating an id and using\n * that for aria-describedby when not given an id to use instead.\n */\nexport function usePortalTooltip({includeAriaAttributes = true, ...props}: PortalTooltipProps) {\n  const id = useId()\n  const [open, setOpen] = useState(false)\n  const isOpen = props.open ?? open\n  const actualId = props.id ?? id\n  const ariaAttributes = includeAriaAttributes\n    ? {\n        'aria-describedby': actualId,\n      }\n    : {}\n\n  const onSetOpen = useCallback(() => setOpen(true), [])\n  const onSetClose = useCallback(() => setOpen(false), [])\n\n  return [\n    {\n      ...ariaAttributes,\n      onPointerEnter: onSetOpen,\n      onPointerLeave: onSetClose,\n      onFocus: onSetOpen,\n      onBlur: onSetClose,\n    },\n    <PortalTooltip key=\"portal-tooltip\" {...props} open={isOpen} id={actualId} />,\n  ] as const\n}\n","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["copyText","text","navigator","clipboard","writeText","body","document","Promise","reject","node","createNode","createElement","style","width","height","position","top","textContent","appendChild","copyNode","selection","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","resolve","removeChild","hasScrollableParent","computedStyle","getComputedStyle","some","overflow","value","getPropertyValue","collectParents","ps","parentNode","concat","getScrollableParent","HTMLElement","SVGElement","item","scrollingElement","documentElement","useFeatureFlags","useAppPayload","enabled_features","useFeatureFlag","featureName","verifiedFetch","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","JSON","stringify","undefined","reactFetch","reactFetchJSON","SharedMarkdownContent","forwardRef","onAnchorClick","richText","stickyHeaderHeight","sx","suppressHydrationWarning","ref","hash","useLocation","currentRepo","useCurrentRepository","navigate","useNavigate","markdownContainerRef","useRef","useImperativeHandle","current","useEffect","hashChange","onHashChange","addEventListener","removeEventListener","useLayoutEffect","SafeHTMLBox","className","html","data-hpc","onClick","event","isCmdClick","metaKey","ctrlKey","anchor","target","closest","href","isHashNavigation","preventDefault","startsWith","ownerLogin","name","pathname","search","targetId","decodeFragmentValue","decodeURIComponent","slice","toLowerCase","getElementById","getElementsByName","defaultView","setTimeout","requestAnimationFrame","targetScroll","getBoundingClientRect","scrollTo","focusElement","focus","setAttribute","displayName","CopyToClipboardButton","icon","CopyIcon","size","onCopy","textToCopy","tooltipProps","ariaLabel","accessibleButton","hasPortalTooltip","avoidStyledComponent","copied","setCopied","React","isMounted","useIsMounted","onClickCopy","announce","label","visibleTooltipText","PortalTooltipCopyButton","Tooltip","aria-label","type","IconButton","CheckIcon","variant","tabIndex","clsx","contentRef","buttonContentProps","buttonTooltipElement","usePortalTooltip","div","PortalCopyIconButton","button","Octicon","unsafeDisableTooltip","GitHubAvatar","src","otherProps","avatarUrl","useMemo","ssrSafeLocation","searchParams","has","set","String","Number","toString","Avatar","data-testid","TooltipBase","styled","span","themeGet","noop","getServerSideState","getClientSideState","ControlledTooltip","direction","noDelay","align","wrap","open","portalProps","rest","isClientRender","useSyncExternalStore","classes","Portal","role","data-visible-text","zIndex","PortalTooltip","anchoredPositionAlignment","anchorSide","anchorOffset","alignmentOffset","allowOutOfBounds","props","forwardedRef","positionCache","left","useCallback","notify","scrollableParent","nextPosition","getAnchoredPosition","side","includeAriaAttributes","id","useId","setOpen","useState","isOpen","actualId","ariaAttributes","onSetOpen","onSetClose","onPointerEnter","onPointerLeave","onFocus","onBlur","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","safeHTML","unverifiedHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","withSafeHTML","Box","SafeHTMLText","Text","Component","dangerouslySetInnerHTML","__html","SafeHTMLDiv"],"sourceRoot":""}