<tracking-block
  data-id="<%= id %>"
  <% if readonly? %>data-readonly<% end %>
  <% if hierarchy_query_type %>data-query-type="<%= hierarchy_query_type %>"<% end %>
  <% if hierarchy_response_source_type %>data-response-source-type="<%= hierarchy_response_source_type %>"<% end %>
  <% if hierarchy_completion %>data-completion-completed="<%= hierarchy_completion.completed %>" data-completion-total="<%= hierarchy_completion.total %>"<% end %>
  <% if is_precache? %>data-precache<% end %>
  >
  <div class="TrackingBlock border color-border-subtle rounded-2 mb-3 pb-2"
    data-target="tracking-block.contentWrapper"
    data-action="tracking-block-omnibar-append:tracking-block tasklist-block-title-update:tracking-block change:tracking-block click:tracking-block"
  >
    <%= render(Primer::Alpha::Banner.new(scheme: :danger, hidden: true, mx: 3, mt: 3, "data-target": "tracking-block.staleBanner")) { "The content you are editing has changed. Please copy your edits and refresh the page." } %>
    <div class="mx-3 mt-3 d-flex flex-justify-between mb-1 gap-2">
      <%= render(TrackingBlocks::TasklistBlockTitleComponent.new(
          title: trimmed_title,
          safe_title: safe_title,
          title_tag: title_tag,
          readonly: readonly?,
          is_completed: is_completed?,
          is_precache: is_precache?,
          parent_issue: parent_issue,
        )) %>

      <%= render(Primer::Box.new(display: :flex, classes: "flex-items-center flex-justify-between")) do %>
        <%= render(Primer::Beta::Label.new(scheme: :success)) { "Beta" } %>
        <% if is_precache? %>
          <%= current_viewer_reference_wrapper(employee: true) do |wrapper| %>
            <% wrapper.authorized do %>
              <% feedback_link(EMPLOYEE_FEEDBACK_URL) %>
            <% end %>
            <% wrapper.unauthorized do %>
              <% feedback_link(PUBLIC_FEEDBACK_URL) %>
            <% end %>
          <% end %>
        <% else %>
          <%= feedback_link(feedback_url) %>
        <% end %>

        <% unless readonly? %>
          <% if is_precache? && parent_issue %>
            <%= repository_resource_reference_wrapper(parent_issue, check_type: :write) do |wrapper| %>
              <% wrapper.authorized do %>
                <% render Primer::Alpha::ActionMenu.new(menu_id: "tracking-block-dropdown-menu-#{id}", "data-target": "tracking-block-main.dropdownMenu", classes: "tracking-block-list-item-dropdown-menu") do |c| %>
                  <% c.with_show_button(bg: :transparent, size: :small, p: 1, m: 0, position: :relative, icon: :"kebab-horizontal", scheme: :invisible, classes: "Truncate tracking-block-menu-btn", "aria-label": "Tasklist #{title}, more options", test_selector: "tracking-block-kebab", data: { targets: "tracking-block.dropdownMenu"}) %>
                  <% c.with_item(tag: :button, type: :button,
                      data: {
                        action: "click:tracking-block#showTitleEditMode",
                        **analytics_click_attributes(
                          category: "Tasklist Block",
                          action: "rename"
                        )
                      },
                      test_selector: "tasklist-block-rename-title-button"
                  ) do %>
                    <%= render(Primer::Beta::Octicon.new(:pencil)) %>
                    <span>Rename</span>
                  <% end %>
                  <% hydro_tracking_attributes = hierarchy_hydro_click_tracking_attributes(tasklist_block_id: id, actor: current_user, action: "copy-markdown") %>
                  <% c.with_item(tag: :button, type: :button,
                    data: {
                      action: "click:tracking-block#copyBlockMarkdown",
                      **analytics_click_attributes(
                        category: "Tasklist Block",
                        action: "copy markdown"
                      ),
                    },
                  ) do %>
                    <%= render(Primer::Beta::Octicon.new(:copy)) %>
                    <span class="copy-markdown-button"
                      data-hydro-click-payload= "<%= hydro_tracking_attributes["hydro-click"] %>"
                      data-hydro-click-hmac="<%= hydro_tracking_attributes["hydro-click-hmac"] %>"
                    >
                      Copy markdown
                    </span>
                  <% end %>
                  <% c.with_item(
                    tag: :button,
                    type: :button,
                    content_arguments: { "data-show-dialog-id": "delete-tasklist-dialog-#{id}" },
                    id: "delete-tasklist-button-#{id}",
                  ) do %>
                    <%= render(Primer::Beta::Octicon.new(icon: :trash, color: :danger)) %>
                    <span>Delete tasklist</span>
                  <% end %>
                <% end %>
              <% end %>
              <% wrapper.authorized do %>
                <% render(Primer::Alpha::Dialog.new(
                  title: "Delete tasklist",
                  id: "delete-tasklist-dialog-#{id}",
                  size: :medium,
                  visually_hide_title: :true,
                  width: :full,
                )) do |dialog| %>
                  <% dialog.with_header(font: "SF Pro Display", font_weight: :bold, font_size: 2, color: :default) { "Delete tasklist block?" } %>
                  <% dialog.with_body(color: :muted) { "Are you sure? All relationships in this tasklist will be removed." } %>
                  <% dialog.with_footer do %>
                    <%= render(Primer::Beta::Button.new(type: :submit, display: :inline_block, data: { "close-dialog-id": "delete-tasklist-dialog-#{id}" }).with_content("Cancel")) %>
                    <%= render(Primer::Beta::Button.new(scheme: :danger, type: :submit, display: :inline_block, data: { action: "click:tracking-block#removeTasklistBlock" }).with_content("Delete")) %>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
          <% else %>
            <%= render Primer::Alpha::ActionMenu.new(menu_id: "tracking-block-dropdown-menu-#{id}", "data-target": "tracking-block-main.dropdownMenu", classes: "tracking-block-list-item-dropdown-menu") do |c| %>
              <% c.with_show_button(bg: :transparent, size: :small, p: 1, m: 0, position: :relative, icon: :"kebab-horizontal", scheme: :invisible, classes: "Truncate tracking-block-menu-btn", "aria-label": "Tasklist #{title}, more options", test_selector: "tracking-block-kebab", data: { targets: "tracking-block.dropdownMenu"}) %>
              <% c.with_item(tag: :button, type: :button,
                  data: {
                    action: "click:tracking-block#showTitleEditMode",
                    **analytics_click_attributes(
                      category: "Tasklist Block",
                      action: "rename"
                    )
                  },
                  test_selector: "tasklist-block-rename-title-button"
              ) do %>
                <%= render(Primer::Beta::Octicon.new(:pencil)) %>
                <span>Rename</span>
              <% end %>
              <% hydro_tracking_attributes = hierarchy_hydro_click_tracking_attributes(tasklist_block_id: id, actor: current_user, action: "copy-markdown") %>
              <% c.with_item(tag: :button, type: :button,
                data: {
                  action: "click:tracking-block#copyBlockMarkdown",
                  **analytics_click_attributes(
                    category: "Tasklist Block",
                    action: "copy markdown"
                  ),
                },
              ) do %>
                <%= render(Primer::Beta::Octicon.new(:copy)) %>
                <span class="copy-markdown-button"
                  data-hydro-click-payload= "<%= hydro_tracking_attributes["hydro-click"] %>"
                  data-hydro-click-hmac="<%= hydro_tracking_attributes["hydro-click-hmac"] %>"
                >
                  Copy markdown
                </span>
              <% end %>
              <% c.with_item(
                tag: :button,
                type: :button,
                content_arguments: { "data-show-dialog-id": "delete-tasklist-dialog-#{id}" },
                id: "delete-tasklist-button-#{id}",
              ) do %>
                <%= render(Primer::Beta::Octicon.new(icon: :trash, color: :danger)) %>
                <span>Delete tasklist</span>
              <% end %>
            <% end %>

            <%= render(Primer::Alpha::Dialog.new(
              title: "Delete tasklist",
              id: "delete-tasklist-dialog-#{id}",
              size: :medium,
              visually_hide_title: :true,
              width: :full,
            )) do |dialog| %>
              <% dialog.with_header(font: "SF Pro Display", font_weight: :bold, font_size: 2, color: :default) { "Delete tasklist block?" } %>
              <% dialog.with_body(color: :muted) { "Are you sure? All relationships in this tasklist will be removed." } %>
              <% dialog.with_footer do %>
                <%= render(Primer::Beta::Button.new(type: :submit, display: :inline_block, data: { "close-dialog-id": "delete-tasklist-dialog-#{id}" }).with_content("Cancel")) %>
                <%= render(Primer::Beta::Button.new(scheme: :danger, type: :submit, display: :inline_block, data: { action: "click:tracking-block#removeTasklistBlock" }).with_content("Delete")) %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </div>
    <% unless @validation_msg.nil? %>
      <%= render(TrackingBlocks::TrackingBlockErrorComponent.new(error_type: @validation_msg, is_precache: is_precache?)) %>
    <% end %>
    <% if items&.empty? || (items.nil? && content.blank?) %>
      <div class="d-flex py-1 ml-3">
        <span style="font-weight: normal" class="color-fg-muted">No tasks being tracked yet.</span>
      </div>
    <% end %>

    <ol dir="auto" class="TrackingBlock-list mb-0 list-style-none" data-target="tracking-block.list">
      <% if is_precache? %>
        <%= content %>
      <% else %>
        <% items.each do |item| %>
          <%= render(TrackingBlocks::TasklistBlockItemComponent.new(
            **item,
            tasklist_block_id: id,
            readonly: readonly?,
            current_viewer_write_access: render_context.current_viewer_write_access,
            render_context: items_render_context,
            current_user: current_user)
          ) %>
        <% end %>
      <% end %>

      <%# Empty item template %>
      <% if tasklist_block_markdown_at_rest_enabled %>
        <li hidden tabindex="0" class="TrackingBlock-item js-template d-flex mt-0 px-3 py-1 gap-2 flex-justify-between position-relative js-tasklist-draggable-issue border-bottom" data-target="tracking-block.emptyItemTemplate" data-draft-issue>
          <div class="tasklist-issue-handle js-tasklist-drag-handle draft-handle flex-self-start">
            <%= primer_octicon(:grabber, classes: "dragger-icon") %>
          </div>
          <div class="d-flex Truncate tasklist-flex-grow">
            <label class="tasklist-checkbox">
              <input
                data-action="change:tracking-block"
                data-targets="tracking-block.inputs"
                class="mr-2"
                type="checkbox"
              >
              <span class="sr-only tasklist-draft"></span>
            </label>

            <div data-tracking-block-draft-title class="tasklist-flex-grow d-flex" >
              <%= render Primer::Box.new(hidden: true, classes: "js-title-text-field-wrapper tasklist-textarea-container", w: :full, data: {"morpheus-ignore": "hidden"} ) do %>
                <textarea class="js-size-to-fit" aria-label="Draft title" data-action="change:tracking-block keydown:tracking-block focusout:tracking-block#draftTitleInputOutFocus" rows="1"></textarea>
              <% end %>

              <%= render Primer::Box.new(
                display: :flex,
                align_items: :center,
                data: {targets: "tracking-block.renderedTitles", action: "click:tracking-block#handleDraftTitleClick", "morpheus-ignore": "hidden"},
                classes: "js-draft-title tasklist-draft-title-container empty-template-title", w: :full ) do %>
                <%= render(Primer::Beta::Text.new(word_break: :break_word)) { '' } %>
              <% end %>
            </div>
          </div>
          <div data-targets="tracking-block.itemMenus">
            <%= render Primer::Alpha::ActionMenu.new(menu_id: "tracking-block-list-item-dropdown-menu-1234-1", anchor_align: :end, classes: "tracking-block-list-item-dropdown-menu") do |c| %>
              <% c.with_show_button(bg: :transparent, style: "max-height:24px", size: :small, p: 1, m: 0, position: :relative, icon: :"kebab-horizontal", scheme: :invisible, classes: "Truncate", "aria-label": "Options", test_selector: "tracking-block-item-kebab", data: { targets: "tracking-block.dropdownMenu"}) %>
              <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, "data-tracking-block-convert-button": "") do %>
                <%= render(
                  Primer::Box.new(
                    display: :flex,
                    align_items: :center,
                    justify_content: :space_between,)
                  ) do %>
                    <%= render(Primer::Beta::Text.new) { "Convert to issue" } %>
                <%end%>
              <% end %>
              <% c.with_item(tag: :button, type: "button", color: :default, data: { action: "click:tracking-block#handleMarkAsDone" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Toggle completion" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleRename" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Rename" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", scheme: :danger, display: :flex, "data-tracking-block-remove-button": "") do %>
              <%= render(
                  Primer::Box.new(
                    display: :flex,
                    align_items: :center,
                    justify_content: :space_between,)
                  ) do %>
                    <%= render(Primer::Beta::Text.new) { "Remove" } %>
                <%end%>
            <% end %>
            <% end %>
          </div>
        </li>
        <li hidden class="TrackingBlock-item js-template d-flex mt-0 px-3 py-1 gap-2 flex-justify-between position-relative js-tasklist-draggable-issue" data-target="tracking-block.emptyIssueTemplate" data-issue>
          <div class="tasklist-issue-handle js-tasklist-drag-handle draft-handle">
            <%= primer_octicon(:grabber, classes: "dragger-icon") %>
          </div>
          <div class="d-flex js-item-title flex-items-center">
            <div class="js-issue-template-content"></div>
          </div>
          <%= render Primer::Box.new(style: "flex-grow: 1") %>
        </li>
      <% end %>
    </ol>

    <% unless readonly? %>
      <% if is_precache? && parent_issue %>
        <%= repository_resource_reference_wrapper(parent_issue, check_type: :write) do |wrapper| %>
          <% wrapper.authorized do %>
            <% unless disable_add_tasks_button? %>
              <% render(TrackingBlocks::TasklistBlockOmnibarComponent.new(
                render_context: render_context,
                title: safe_title,
                tasklist_block_id: id,
                options: options
              )) %>
            <% end %>
          <% end %>

          <% wrapper.authorized do %>
            <% form_tag(
                form_tracking_block_update_endpoint,
                method: "put",
                remote: true,
                "data-form-tracking-block-update": "") do
              end
            %>
          <% end %>
        <% end %>
      <% else %>
        <% unless disable_add_tasks_button? %>
          <%= render(TrackingBlocks::TasklistBlockOmnibarComponent.new(
            render_context: render_context,
            title: safe_title,
            tasklist_block_id: id,
            options: options
          )) %>
        <% end %>

        <%= form_tag(
            form_tracking_block_update_endpoint,
            method: "put",
            remote: true,
            "data-form-tracking-block-update": "") do
          end
        %>
      <% end %>
    <% end %>
  </div>
</tracking-block>
