<%
  has_backup_sms = current_user.two_factor_backup_sms_registration?
  primary_disable_path = settings_user_two_factor_authentication_disable_factor_path(type: factor_type)
  fallback_sms_disable_path = settings_user_2fa_destroy_backup_path
  disable_path = factor_type == "fallback_sms" ? fallback_sms_disable_path : primary_disable_path
%>

<%#
  when do we show a warning dialog to the users:
    1. user has a primary SMS and fallback SMS and they want to disable their primary SMS,
      we will show a dialog telling them that their fallback SMS will be promoted to their primary.
    2. when we no longer support adding a fallback SMS, users who already have a fallback SMS will be grandfathered in.
      However, when the user tries to remove their fallback, we will show a dialog letting them know they cannot add
      a fallback SMS anymore.
%>
<%
  disable_fallback_sms_support = factor_type == "fallback_sms"
  has_both_sms = has_backup_sms && factor_type == "sms"
%>
<% if disable_fallback_sms_support || has_both_sms %>
  <%= render Primer::Beta::Button.new(
    scheme: :link,
    tag: :button,
    color: :danger,
    underline: false,
    style: "width: 100%; padding: 6px 8px;",
    align_content: :start,
    data: {
      "show-dialog-id": "disable_#{factor_type}_method_dialog",
      target: "modal-dialog.show-button",
  }) do %>
    <%= disable_label %>
  <% end %>
<% else %>
  <%= form_tag disable_path, method: :delete do %>
    <%= render Primer::Beta::Button.new(
      scheme: :link,
      tag: :button,
      type: :submit,
      color: :danger,
      underline: false,
      style: "width: 100%; padding: 6px 8px;",
      align_content: :start,
      data: {
        "sudo-required": "#{edit_sudo_required}",
      }) do %>
      <%= disable_label %>
    <% end %>
  <% end %>
<% end %>
