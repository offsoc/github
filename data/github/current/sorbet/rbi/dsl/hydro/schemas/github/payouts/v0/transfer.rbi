# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Payouts::V0::Transfer`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Payouts::V0::Transfer`.

class Hydro::Schemas::Github::Payouts::V0::Transfer
  sig do
    params(
      account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      destination_account_id: T.nilable(Google::Protobuf::StringValue),
      destination_account_type: T.nilable(T.any(Symbol, Integer)),
      match_amount_in_cents: T.nilable(Integer),
      matched: T.nilable(T::Boolean),
      payment_gateway: T.nilable(T.any(Symbol, Integer)),
      sponsorship_amount_in_cents: T.nilable(Integer),
      total_transfer_amount_in_cents: T.nilable(Integer)
    ).void
  end
  def initialize(account: nil, destination_account_id: nil, destination_account_type: nil, match_amount_in_cents: nil, matched: nil, payment_gateway: nil, sponsorship_amount_in_cents: nil, total_transfer_amount_in_cents: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def account=(value); end

  sig { void }
  def clear_account; end

  sig { void }
  def clear_destination_account_id; end

  sig { void }
  def clear_destination_account_type; end

  sig { void }
  def clear_match_amount_in_cents; end

  sig { void }
  def clear_matched; end

  sig { void }
  def clear_payment_gateway; end

  sig { void }
  def clear_sponsorship_amount_in_cents; end

  sig { void }
  def clear_total_transfer_amount_in_cents; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def destination_account_id; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def destination_account_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def destination_account_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def destination_account_type=(value); end

  sig { returns(Integer) }
  def match_amount_in_cents; end

  sig { params(value: Integer).void }
  def match_amount_in_cents=(value); end

  sig { returns(T::Boolean) }
  def matched; end

  sig { params(value: T::Boolean).void }
  def matched=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def payment_gateway; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def payment_gateway=(value); end

  sig { returns(Integer) }
  def sponsorship_amount_in_cents; end

  sig { params(value: Integer).void }
  def sponsorship_amount_in_cents=(value); end

  sig { returns(Integer) }
  def total_transfer_amount_in_cents; end

  sig { params(value: Integer).void }
  def total_transfer_amount_in_cents=(value); end
end
