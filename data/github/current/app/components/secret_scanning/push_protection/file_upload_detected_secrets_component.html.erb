<%= form_with url: repo_uploads_add_secret_scanning_push_protection_bypass_path(base_branch: @base_branch, upload_directory: @upload_directory), method: :post, id: "file-upload-bypass-form" %>
<bypass-reason-selector>
<%= render Primer::Alpha::Dialog.new(
  title: "Secret detected",
  visually_hide_title: true,
  size: :medium_portrait,
  id: "file-upload-detected-secret-dialog-id",
  classes: "js-file-upload-detected-secret-dialog",
  test_selector: "file-upload-detected-secret-component"
) do |d| %>
  <% d.with_body do %>
    <div class="d-flex flex-column flex-auto width-full p-1" style="text-align: left;" <%= test_selector "secret-scanning-push-protection-bypass-component" %>>
      <% unless secret.nil? %>
        <%= render(Primer::Alpha::Banner.new(scheme: :danger, mb: 3, p: 1, display: :flex, tag: :div, test_selector: "secret-scanning-push-protection-file-upload-bypass-flash")) do |component| %>
          <%= render(Primer::Beta::Text.new(font_size: 5)) do %>
            <%= render(Primer::Beta::Link.new(
              href: push_protection_url,
              underline: true)) { "Secret scanning" } %>
            found a
            <% if is_custom_pattern? %>
              custom pattern named <%= render(Primer::Beta::Text.new(font_weight: :bold)) { token_type_label } %>, defined by your admins,
            <% else %>
              <%= render(Primer::Beta::Text.new(font_weight: :bold)) { token_type_label } %> secret
            <% end %>
            on <%= render(Primer::Beta::Text.new(font_weight: :bold)) { file_name } %>
          <% end %>
        <% end %>
        <div class="ml-2">
          Allowing this secret risks exposure. Instead,
          <% if push_protection_custom_msg.present? %>
            <%= render(Primer::Beta::Link.new(
            href: push_protection_custom_msg.message,
            target: "_blank",
            underline: true)) { "review guidance" } %>
            from your <%= push_protection_custom_msg.owner_type %>, <%= render(Primer::Beta::Text.new(font_weight: :bold)) { push_protection_custom_msg.owner_name } %>, and
          <% end %>
          consider
          <%= render(Primer::Beta::Link.new(
            href: "#{GitHub.help_url}/code-security/secret-scanning/protecting-pushes-with-secret-scanning",
            target: "_blank",
            underline: true)) { "removing the secret from your file" } %>.
        </div>
        <div class="ml-2 mt-3">
          Exposing this secret can allow someone to:
          <ul class="ml-3">
            <% unless is_custom_pattern? %>
              <li>Verify the identity of this <%= render(Primer::Beta::Text.new(font_weight: :bold)) { token_type_label } %> secret.</li>
            <% end %>
            <li>Know which resources this secret can access</li>
            <li>Act on behalf of the secret's owner</li>
            <% if repo_has_secret_scanning_experience? %>
              <li>Push this secret to this repository without being blocked</li>
            <% end %>
          </ul>
        </div>
        <% if limited_user_bypass_experience_only %>
          <%= render(Primer::Beta::Text.new(mt: 3, ml: 1, font_size: :small)) do %>
            Push protection is enabled for your account. To disable, visit your
            <%= render(Primer::Beta::Link.new(href: "/settings/security_analysis", target: "_blank", underline: true)) { 'code security and analysis settings' } %>.
          <% end %>
        <% else %>
          <ul class="px-2 py-2" role="radiogroup">
            <%= render(SecretScanning::PushProtection::BypassReasonOptionComponent.new(SecretScanning::Models::BypassReason::USED_IN_TESTS, "It's used in tests", "The secret poses no risk. If anyone finds it, they cannot do any damage or gain access to sensitive information.", "file-upload-bypass-form")) %>
            <li class="dropdown-divider ml-4" role="none"></li>
            <%= render(SecretScanning::PushProtection::BypassReasonOptionComponent.new(SecretScanning::Models::BypassReason::FALSE_POSITIVE, "It's a false positive", "The detected string is not a secret.", "file-upload-bypass-form")) %>
            <li class="dropdown-divider ml-4" role="none"></li>
            <%= render(SecretScanning::PushProtection::BypassReasonOptionComponent.new(SecretScanning::Models::BypassReason::WILL_FIX_LATER, "I'll fix it later",
              content_tag(:span, safe_join([
                "The secret is real, ",
                content_tag(:span, "I understand the risk.", class: "text-bold"),
                " This will open a security alert and notify admins."
              ])), "file-upload-bypass-form"))
            %>
          </ul>
        <% end %>
        <%= hidden_field_tag('token_type', secret.type, form: "file-upload-bypass-form") %>
        <%= hidden_field_tag('token_signature', secret.fingerprint, form: "file-upload-bypass-form") %>
        <%= hidden_field_tag('bypass_placeholder_ksuid', secret.bypass_placeholder_ksuid, form: "file-upload-bypass-form") %>
      <% end %>
    </div>
  <% end %>
  <% d.with_footer do %>
    <%= render(Primer::Beta::Button.new(
      scheme: :secondary,
      type: :submit,
      name: "cancel",
      form: "file-upload-bypass-form",
      mb: 1,
      float: :right)) { "Cancel" } %>
    <%= render(Primer::Beta::Button.new(
      scheme: :primary,
      type: :submit,
      form: "file-upload-bypass-form",
      disabled: !limited_user_bypass_experience_only,
      mb: 1,
      float: :right,
      data: { "target": "bypass-reason-selector.submitBtn" })) { "Allow Secret" } %>
  <% end %>
<% end %>
</bypass-reason-selector>

