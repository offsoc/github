# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `wikicloth` gem.
# Please instead update this file by running `bin/tapioca gem wikicloth`.

# source://wikicloth//lib/wikicloth/core_ext.rb#37
module ExtendedString
  # source://wikicloth//lib/wikicloth/core_ext.rb#43
  def addslashes; end

  # source://wikicloth//lib/wikicloth/core_ext.rb#51
  def auto_link; end

  # @return [Boolean]
  #
  # source://wikicloth//lib/wikicloth/core_ext.rb#39
  def blank?; end

  # source://wikicloth//lib/wikicloth/core_ext.rb#59
  def dump; end

  # source://wikicloth//lib/wikicloth/core_ext.rb#55
  def last(n); end

  # source://wikicloth//lib/wikicloth/core_ext.rb#65
  def smart_split(char); end

  # source://wikicloth//lib/wikicloth/core_ext.rb#47
  def to_slug; end
end

# source://wikicloth//lib/wikicloth/core_ext.rb#29
module Math
  class << self
    # source://wikicloth//lib/wikicloth/core_ext.rb#30
    def eval(expression); end
  end
end

# source://wikicloth//lib/wikicloth/core_ext.rb#26
READ_MODE = T.let(T.unsafe(nil), String)

class String
  include ::Comparable
  include ::MessagePack::CoreExt
  include ::JSON::Ext::Generator::GeneratorMethods::String
  include ::ExtendedString
  extend ::JSON::Ext::Generator::GeneratorMethods::String::Extend
end

# source://wikicloth//lib/wikicloth/version.rb#1
module WikiCloth; end

# source://wikicloth//lib/wikicloth/extension.rb#2
class WikiCloth::Extension
  # @return [Extension] a new instance of Extension
  #
  # source://wikicloth//lib/wikicloth/extension.rb#4
  def initialize(options = T.unsafe(nil)); end

  class << self
    # source://wikicloth//lib/wikicloth/extension.rb#18
    def element(*args, &block); end

    # @return [Boolean]
    #
    # source://wikicloth//lib/wikicloth/extension.rb#36
    def element_exists?(elem); end

    # source://wikicloth//lib/wikicloth/extension.rb#40
    def function(name, &block); end

    # @return [Boolean]
    #
    # source://wikicloth//lib/wikicloth/extension.rb#44
    def function_exists?(name); end

    # source://wikicloth//lib/wikicloth/extension.rb#14
    def functions; end

    # source://wikicloth//lib/wikicloth/extension.rb#10
    def html_elements; end

    # @return [Boolean]
    #
    # source://wikicloth//lib/wikicloth/extension.rb#31
    def run_globals?(elem); end

    # @return [Boolean]
    #
    # source://wikicloth//lib/wikicloth/extension.rb#26
    def skip_html?(elem); end

    protected

    # source://wikicloth//lib/wikicloth/extension.rb#53
    def functions=(val); end

    # source://wikicloth//lib/wikicloth/extension.rb#49
    def html_elements=(val); end
  end
end

# source://wikicloth//lib/wikicloth/parser.rb#3
class WikiCloth::Parser < ::WikiCloth::WikiLinkHandler
  # @return [Parser] a new instance of Parser
  #
  # source://wikicloth//lib/wikicloth/parser.rb#5
  def initialize(options = T.unsafe(nil)); end

  # Get the section, along with any sub-section of the document
  #
  # source://wikicloth//lib/wikicloth/parser.rb#108
  def get_section(id); end

  # source://wikicloth//lib/wikicloth/parser.rb#93
  def method_missing(method, *args); end

  # Replace a section, along with any sub-section in the document
  #
  # source://wikicloth//lib/wikicloth/parser.rb#102
  def put_section(id, data); end

  # source://wikicloth//lib/wikicloth/parser.rb#112
  def to_wiki; end

  # source://wikicloth//lib/wikicloth/parser.rb#116
  def to_wikitext; end

  class << self
    # source://wikicloth//lib/wikicloth/parser.rb#86
    def cache(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#42
    def external_link(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#36
    def function(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#24
    def image_url_for(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#48
    def include_resource(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#80
    def link_attributes_for(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#74
    def link_for(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#61
    def link_for_resource(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#68
    def section_link(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#55
    def template(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#30
    def toc(&block); end

    # source://wikicloth//lib/wikicloth/parser.rb#18
    def url_for(&block); end
  end
end

# source://wikicloth//lib/wikicloth/extensions/poem.rb#2
class WikiCloth::PoemExtension < ::WikiCloth::Extension; end

# source://wikicloth//lib/wikicloth/extensions/references.rb#2
class WikiCloth::ReferencesExtension < ::WikiCloth::Extension; end

# source://wikicloth//lib/wikicloth/section.rb#3
class WikiCloth::Section < ::String
  # @return [Section] a new instance of Section
  #
  # source://wikicloth//lib/wikicloth/section.rb#5
  def initialize(title = T.unsafe(nil), id = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/section.rb#21
  def auto_toc=(val); end

  # source://wikicloth//lib/wikicloth/section.rb#13
  def children; end

  # source://wikicloth//lib/wikicloth/section.rb#45
  def depth; end

  # source://wikicloth//lib/wikicloth/section.rb#49
  def get_section(id); end

  # source://wikicloth//lib/wikicloth/section.rb#17
  def id; end

  # source://wikicloth//lib/wikicloth/section.rb#70
  def render(opt = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/section.rb#25
  def template=(val); end

  # source://wikicloth//lib/wikicloth/section.rb#41
  def title; end

  # source://wikicloth//lib/wikicloth/section.rb#29
  def title=(val); end

  # source://wikicloth//lib/wikicloth/section.rb#58
  def wikitext(opt = T.unsafe(nil)); end
end

# source://wikicloth//lib/wikicloth/extensions/source.rb#2
class WikiCloth::SourceExtension < ::WikiCloth::Extension; end

# source://wikicloth//lib/wikicloth/version.rb#2
WikiCloth::VERSION = T.let(T.unsafe(nil), String)

# source://wikicloth//lib/wikicloth/wiki_buffer.rb#2
class WikiCloth::WikiBuffer
  # @return [WikiBuffer] a new instance of WikiBuffer
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#4
  def initialize(data, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#151
  def add_char(c); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#128
  def add_word(w); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#62
  def buffer_type; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#27
  def buffers; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#70
  def check_globals; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#39
  def data; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#19
  def debug; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#134
  def eof; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#47
  def get_param(name, default = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#55
  def in_template?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#43
  def params; end

  # @return [Boolean]
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#23
  def run_globals?; end

  # @return [Boolean]
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#31
  def skip_html?; end

  # @return [Boolean]
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#35
  def skip_links?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#66
  def to_html; end

  protected

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#243
  def behavior_switch_key_name(name); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#291
  def buffer_type=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#303
  def current_char; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#299
  def current_char=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#319
  def current_line; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#315
  def current_line=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#279
  def current_param=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#295
  def data=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#259
  def gen_heading(hnum, title); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#267
  def get_id_for(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#446
  def list_inner_tag_for(tag); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#437
  def list_tag_for(tag); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#275
  def name_current_param; end

  # only executed in the default state
  #
  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#172
  def new_char; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#287
  def params=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#311
  def previous_char; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#307
  def previous_char=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#361
  def render_bold_italic; end

  # source://wikicloth//lib/wikicloth/wiki_buffer.rb#389
  def render_list_data; end
end

# source://wikicloth//lib/wikicloth/wiki_buffer.rb#323
WikiCloth::WikiBuffer::BOLD_ITALIC_MAP = T.let(T.unsafe(nil), Hash)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#5
class WikiCloth::WikiBuffer::HTMLElement < ::WikiCloth::WikiBuffer
  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#17
  def initialize(d, options = T.unsafe(nil), check = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#26
  def debug; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#106
  def element_attributes; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#119
  def element_content; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#115
  def element_name; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#101
  def get_attribute_by_name(name); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#44
  def run_globals?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#39
  def skip_html?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#51
  def to_html; end

  protected

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#148
  def elem; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#156
  def element_content=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#152
  def element_name=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#125
  def escape_char(c); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#160
  def in_quotes?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#164
  def new_char; end
end

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#10
WikiCloth::WikiBuffer::HTMLElement::ALLOWED_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#7
WikiCloth::WikiBuffer::HTMLElement::ALLOWED_ELEMENTS = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#15
WikiCloth::WikiBuffer::HTMLElement::DISABLE_GLOBALS_FOR = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#12
WikiCloth::WikiBuffer::HTMLElement::ESCAPED_TAGS = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#14
WikiCloth::WikiBuffer::HTMLElement::NO_NEED_TO_CLOSE = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/html_element.rb#13
WikiCloth::WikiBuffer::HTMLElement::SHORT_TAGS = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#3
class WikiCloth::WikiBuffer::Link < ::WikiCloth::WikiBuffer
  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#5
  def initialize(data, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#40
  def eof; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#11
  def internal_link; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#15
  def to_html; end

  protected

  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#45
  def internal_link=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/link.rb#49
  def new_char; end
end

# source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#3
class WikiCloth::WikiBuffer::Table < ::WikiCloth::WikiBuffer
  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#5
  def initialize(data, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#23
  def rows; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#14
  def table_caption; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#19
  def table_caption_attributes; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#27
  def to_html; end

  protected

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#105
  def new_char; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#96
  def next_cell(type = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#91
  def next_row; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#48
  def parse_attributes(data); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#77
  def rows=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#86
  def table_caption=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/table.rb#81
  def table_caption_attributes=(val); end
end

# source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#7
class WikiCloth::WikiBuffer::Var < ::WikiCloth::WikiBuffer
  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#9
  def initialize(data, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#112
  def default_functions(name, params); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#43
  def function_name; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#232
  def is_function?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#228
  def is_param?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#224
  def localise_ns(name, lang = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#31
  def skip_html?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#27
  def skip_links?; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#19
  def tag_size; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#23
  def tag_size=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#35
  def tag_start; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#39
  def tag_start=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#47
  def to_html; end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#102
  def will_not_be_rendered; end

  protected

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#237
  def function_name=(val); end

  # source://wikicloth//lib/wikicloth/wiki_buffer/var.rb#241
  def new_char; end
end

# source://wikicloth//lib/wikicloth.rb#27
class WikiCloth::WikiCloth
  # @return [WikiCloth] a new instance of WikiCloth
  #
  # source://wikicloth//lib/wikicloth.rb#29
  def initialize(opt = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth.rb#120
  def link_handler; end

  # source://wikicloth//lib/wikicloth.rb#38
  def load(data, p = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth.rb#132
  def method_missing(method, *args); end

  # source://wikicloth//lib/wikicloth.rb#128
  def options; end

  # source://wikicloth//lib/wikicloth.rb#124
  def params; end

  # source://wikicloth//lib/wikicloth.rb#70
  def render(opt = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth.rb#112
  def sections; end

  # source://wikicloth//lib/wikicloth.rb#116
  def to_html(opt = T.unsafe(nil)); end

  protected

  # source://wikicloth//lib/wikicloth.rb#141
  def add_current_char(buffer, c); end

  # source://wikicloth//lib/wikicloth.rb#155
  def get_id_for(val); end

  # source://wikicloth//lib/wikicloth.rb#163
  def options=(val); end

  # source://wikicloth//lib/wikicloth.rb#167
  def params=(val); end

  # source://wikicloth//lib/wikicloth.rb#151
  def sections=(val); end
end

# source://wikicloth//lib/wikicloth/wiki_link_handler.rb#4
class WikiCloth::WikiLinkHandler < ::WikiCloth::WikiNamespaces
  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#27
  def cache(item); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#87
  def categories; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#101
  def categories=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#117
  def external_link(url, text = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#75
  def external_links; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#122
  def external_links=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#91
  def find_reference_by_name(n); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#23
  def function(name, params); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#134
  def image_url_for(image); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#149
  def include_resource(resource, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#166
  def included_templates; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#79
  def internal_links; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#126
  def internal_links=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#83
  def languages; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#105
  def languages=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#138
  def link_attributes_for(page); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#142
  def link_for(page, text); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#174
  def link_for_resource(prefix, resource, options = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#19
  def params; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#113
  def params=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#96
  def reference_index(h); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#11
  def references; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#109
  def references=(val); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#15
  def section_link(section); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#31
  def section_list(root = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#170
  def template(template); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#43
  def toc(sections, toc_numbered = T.unsafe(nil)); end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#130
  def url_for(page); end

  protected

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#241
  def elem; end

  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#192
  def pipe_trick(page); end

  # this code needs some work... lots of work
  #
  # source://wikicloth//lib/wikicloth/wiki_link_handler.rb#199
  def wiki_image(resource, options, prefix = T.unsafe(nil)); end
end

# source://wikicloth//lib/wikicloth/wiki_link_handler.rb#8
WikiCloth::WikiLinkHandler::CATEGORY_NAMESPACES = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_link_handler.rb#6
WikiCloth::WikiLinkHandler::FILE_NAMESPACES = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_link_handler.rb#9
WikiCloth::WikiLinkHandler::LANGUAGE_NAMESPACES = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/wiki_link_handler.rb#7
WikiCloth::WikiLinkHandler::MEDIA_NAMESPACES = T.let(T.unsafe(nil), Array)

# source://wikicloth//lib/wikicloth/namespaces.rb#3
class WikiCloth::WikiNamespaces
  class << self
    # source://wikicloth//lib/wikicloth/namespaces.rb#49
    def get_namespace_names_for(name); end

    # source://wikicloth//lib/wikicloth/namespaces.rb#12
    def language_name(ns, locale = T.unsafe(nil)); end

    # source://wikicloth//lib/wikicloth/namespaces.rb#8
    def language_namespace_names; end

    # source://wikicloth//lib/wikicloth/namespaces.rb#20
    def localise_ns(name, locale = T.unsafe(nil)); end

    # source://wikicloth//lib/wikicloth/namespaces.rb#38
    def method_missing(method, *args); end

    # source://wikicloth//lib/wikicloth/namespaces.rb#32
    def namespace_type(name); end
  end
end
