# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::Types::Selectors::V1::ForkPushSelector`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::Types::Selectors::V1::ForkPushSelector`.

class GitHub::Spokes::Proto::Types::Selectors::V1::ForkPushSelector
  sig do
    params(
      base_repository: T.nilable(GitHub::Spokes::Proto::Types::V1::Repository),
      reference_updates: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::Types::V1::ReferenceUpdate], T::Array[GitHub::Spokes::Proto::Types::V1::ReferenceUpdate]))
    ).void
  end
  def initialize(base_repository: nil, reference_updates: T.unsafe(nil)); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::Repository)) }
  def base_repository; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::Repository)).void }
  def base_repository=(value); end

  sig { void }
  def clear_base_repository; end

  sig { void }
  def clear_reference_updates; end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::Types::V1::ReferenceUpdate]) }
  def reference_updates; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::Types::V1::ReferenceUpdate]).void }
  def reference_updates=(value); end
end
