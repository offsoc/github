{"version":3,"file":"keyboard-shortcuts-dialog-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/keyboard-shortcuts-dialog/components/ShortcutsGroupList.tsx","ui/packages/keyboard-shortcuts-dialog/strings.ts","ui/packages/keyboard-shortcuts-dialog/components/ShortcutsDialog.tsx","ui/packages/keyboard-shortcuts-dialog/KeyboardShortcutsDialog.tsx","ui/packages/keyboard-shortcuts-dialog/keyboard-shortcuts-dialog.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/use-layout-effect/use-layout-effect.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {Box} from '@primer/react'\nimport {KeyboardKey} from '@github-ui/keyboard-key'\nimport {Fragment, useId} from 'react'\nimport type {ShortcutsGroup} from '../types'\n\ninterface ShortcutsGroupListProps {\n  group: ShortcutsGroup\n}\n\nexport function ShortcutsGroupList({\n  group: {\n    service: {name: serviceName},\n    commands,\n  },\n}: ShortcutsGroupListProps) {\n  const labelId = useId()\n\n  return (\n    <Box\n      sx={{\n        borderRadius: 2,\n        border: '1px solid',\n        borderColor: 'border.default',\n        overflow: 'hidden',\n      }}\n    >\n      <Box as=\"h3\" id={labelId} sx={{bg: 'canvas.subtle', fontWeight: 'bold', py: 2, px: 3, fontSize: 1}}>\n        {serviceName}\n      </Box>\n\n      <Box as=\"ul\" role=\"list\" aria-labelledby={labelId} sx={{listStyleType: 'none'}}>\n        {commands.map(({id, name, keybinding}) => (\n          <Box\n            as=\"li\"\n            key={id}\n            sx={{\n              borderTop: '1px solid',\n              borderColor: 'border.default',\n              py: 2,\n              px: 3,\n              display: 'flex',\n              gap: 2,\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div>{name}</div>\n            <Box sx={{textAlign: 'right'}}>\n              {(Array.isArray(keybinding) ? keybinding : [keybinding]).map((keys, i) => (\n                <Fragment key={keys}>\n                  {i > 0 && ' or '}\n                  <KeyboardKey keys={keys} />\n                </Fragment>\n              ))}\n            </Box>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\ntry{ ShortcutsGroupList.displayName ||= 'ShortcutsGroupList' } catch {}","export default {\n  keyboardShortcuts: 'Keyboard shortcuts',\n  siteWideShortcuts: 'Site-wide shortcuts',\n  loading: 'Loading',\n}\n","import {Box, Button, Spinner, type SxProp} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {useState, type PropsWithChildren, useEffect} from 'react'\nimport {ShortcutsGroupList} from './ShortcutsGroupList'\nimport strings from '../strings'\nimport type {ShortcutsGroup} from '../types'\nimport {getAllRegisteredCommands, type UICommandGroup} from '@github-ui/ui-commands/internal'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {normalizeSequence} from '@github-ui/hotkey'\n\ntype APIShortcuts = {\n  commands: {\n    global: UICommandGroup\n    [key: string]: UICommandGroup\n  }\n}\ninterface ShortcutsDialogProps {\n  visible: boolean\n  onVisibleChange: (visible: boolean) => void\n  docsUrl: string\n}\n\nconst LoadingState = () => (\n  <Box role=\"status\" sx={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n    <Spinner size=\"large\" />\n    <span className=\"sr-only\">{strings.loading}</span>\n  </Box>\n)\n\nconst parseShortcut = (keybinding?: string | string[]) => {\n  return Array.isArray(keybinding) ? keybinding.map(kb => normalizeSequence(kb)) : normalizeSequence(keybinding ?? '')\n}\n\nconst Columns = ({children}: PropsWithChildren) => (\n  <Box sx={{display: 'flex', flexDirection: 'row', gap: 2, flexWrap: 'wrap'}}>{children}</Box>\n)\n\nconst Column = ({children}: PropsWithChildren & SxProp) => (\n  <Box sx={{flex: '250px', display: 'flex', flexDirection: 'column', gap: 2}}>{children}</Box>\n)\n\nexport const ShortcutsDialog = ({visible, onVisibleChange, docsUrl}: ShortcutsDialogProps) => {\n  const [siteWideShortcuts, setSiteWideShortcuts] = useState<ShortcutsGroup>({\n    service: {id: 'global', name: 'Global'},\n    commands: [],\n  })\n  const [shortcutGroups, setShortcutGroups] = useState<ShortcutsGroup[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Fetch keyboard shortcuts from the server\n  useEffect(() => {\n    const uiCommandGroups = getAllRegisteredCommands()\n    const fetchShortcuts = async () => {\n      setIsLoading(true)\n      const metaKeyboardShortcuts = document.querySelector<HTMLMetaElement>('meta[name=github-keyboard-shortcuts]')\n      if (!metaKeyboardShortcuts) throw new Error('The \"github-keyboard-shortcuts\" meta tag must be present')\n      const options = {contexts: metaKeyboardShortcuts.content}\n      const url = `/site/keyboard_shortcuts?${new URLSearchParams(options).toString()}`\n      const resp = await verifiedFetchJSON(url, {method: 'GET'})\n      if (resp.ok) {\n        const shortcuts: APIShortcuts = await resp.json()\n        const {global, ...rest} = shortcuts.commands\n        setSiteWideShortcuts({\n          service: {\n            id: 'global',\n            name: strings.siteWideShortcuts,\n          },\n          commands: [\n            ...global.commands,\n            ...(uiCommandGroups.find(uiCommandGroup => uiCommandGroup.service.id === 'global')?.commands ?? []),\n          ].map(command => {\n            return {\n              ...command,\n              keybinding: parseShortcut(command.keybinding),\n            }\n          }),\n        })\n\n        const transformedGroups = [...Object.values(rest), ...uiCommandGroups].map(group => {\n          return {\n            ...group,\n            commands: group.commands.map(command => {\n              return {\n                ...command,\n                keybinding: parseShortcut(command.keybinding),\n              }\n            }),\n          }\n        })\n\n        setShortcutGroups(transformedGroups)\n      } else {\n        setShortcutGroups(\n          uiCommandGroups.map(group => {\n            return {\n              ...group,\n              commands: group.commands.map(command => {\n                return {\n                  ...command,\n                  keybinding: parseShortcut(command.keybinding),\n                }\n              }),\n            }\n          }),\n        )\n      }\n      setIsLoading(false)\n    }\n\n    if (visible) fetchShortcuts()\n  }, [visible])\n\n  if (!visible) return null\n  return (\n    <Dialog\n      title={strings.keyboardShortcuts}\n      aria-modal=\"true\"\n      width=\"xlarge\"\n      height=\"large\"\n      onClose={() => onVisibleChange(false)}\n      sx={{color: 'fg.default'}}\n    >\n      {isLoading ? (\n        <LoadingState />\n      ) : (\n        <Columns>\n          <Column>\n            {shortcutGroups.map(group => (\n              <ShortcutsGroupList group={group} key={group.service.id} />\n            ))}\n          </Column>\n\n          <Column>\n            <ShortcutsGroupList group={siteWideShortcuts} key={siteWideShortcuts.service.id} />\n            <Button as=\"a\" href={docsUrl} sx={{width: '100%'}}>\n              View all keyboard shortcuts\n            </Button>\n          </Column>\n        </Columns>\n      )}\n    </Dialog>\n  )\n}\n\ntry{ LoadingState.displayName ||= 'LoadingState' } catch {}\ntry{ Columns.displayName ||= 'Columns' } catch {}\ntry{ Column.displayName ||= 'Column' } catch {}\ntry{ ShortcutsDialog.displayName ||= 'ShortcutsDialog' } catch {}","import {useState} from 'react'\nimport {GlobalCommands} from '@github-ui/ui-commands'\nimport {ShortcutsDialog} from './components/ShortcutsDialog'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\ninterface KeyboardShortcutsDialog {\n  docsUrl: string\n}\n\nexport function KeyboardShortcutsDialog({docsUrl}: KeyboardShortcutsDialog) {\n  const [isVisible, setVisible] = useState(false)\n\n  // Need to return a fragment or react partials get mad about the return type being undefined\n  if (!isFeatureEnabled('react_keyboard_shortcuts_dialog')) return <></>\n\n  return (\n    <>\n      <GlobalCommands commands={{'keyboard-shortcuts-dialog:show-dialog': () => setVisible(true)}} />\n      <ShortcutsDialog visible={isVisible} onVisibleChange={setVisible} docsUrl={docsUrl} />\n    </>\n  )\n}\n\ntry{ KeyboardShortcutsDialog.displayName ||= 'KeyboardShortcutsDialog' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {KeyboardShortcutsDialog} from './KeyboardShortcutsDialog'\n\nregisterReactPartial('keyboard-shortcuts-dialog', {\n  Component: KeyboardShortcutsDialog,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useEffect, useLayoutEffect as unsafe_useLayoutEffect} from 'react'\n\n/**\n * Provides a safe version of `useLayoutEffect` that calls to `useEffect` on the server.\n * This is useful for components that use `useLayoutEffect` but are rendered on the server,\n * since useLayoutEffect cannot run on the server and warns in that environment\n */\nexport const useLayoutEffect =\n  typeof ssrSafeWindow?.document?.createElement !== 'undefined' ? unsafe_useLayoutEffect : useEffect\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["ShortcutsGroupList","group","service","name","serviceName","commands","labelId","useId","Box","sx","borderRadius","border","borderColor","overflow","as","id","bg","fontWeight","py","px","fontSize","role","aria-labelledby","listStyleType","map","keybinding","borderTop","display","gap","justifyContent","alignItems","div","textAlign","Array","isArray","keys","i","Fragment","KeyboardKey","displayName","keyboardShortcuts","siteWideShortcuts","loading","LoadingState","height","Spinner","size","span","className","strings","parseShortcut","kb","normalizeSequence","Columns","children","flexDirection","flexWrap","Column","flex","ShortcutsDialog","visible","onVisibleChange","docsUrl","setSiteWideShortcuts","useState","shortcutGroups","setShortcutGroups","isLoading","setIsLoading","useEffect","uiCommandGroups","getAllRegisteredCommands","fetchShortcuts","metaKeyboardShortcuts","document","querySelector","options","contexts","content","url","URLSearchParams","toString","resp","verifiedFetchJSON","method","ok","global","rest","shortcuts","json","find","uiCommandGroup","command","Object","values","Dialog","title","aria-modal","width","onClose","color","Button","href","KeyboardShortcutsDialog","isVisible","setVisible","isFeatureEnabled","GlobalCommands","registerReactPartial","Component","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","onClick","useCallback","current","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","useLayoutEffect","ssrSafeWindow","createElement","unsafe_useLayoutEffect","verifiedFetch","path","init","assertRelativePathOrSameOrigin","URL","window","location","origin","headers","fetch","Accept","body","JSON","stringify","undefined","reactFetch","reactFetchJSON","PartialRouter","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","error","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join","type","value","target"],"sourceRoot":""}