# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Actions::Core::V1::CheckActionsPolicyRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Actions::Core::V1::CheckActionsPolicyRequest`.

class MonolithTwirp::Actions::Core::V1::CheckActionsPolicyRequest
  sig do
    params(
      actions: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      include_local_only_actions: T.nilable(T::Boolean),
      repository_id: T.nilable(MonolithTwirp::Actions::Core::V1::Identity),
      should_ignore_repo_policies: T.nilable(T::Boolean)
    ).void
  end
  def initialize(actions: T.unsafe(nil), include_local_only_actions: nil, repository_id: nil, should_ignore_repo_policies: nil); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def actions; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def actions=(value); end

  sig { void }
  def clear_actions; end

  sig { void }
  def clear_include_local_only_actions; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_should_ignore_repo_policies; end

  sig { returns(T::Boolean) }
  def include_local_only_actions; end

  sig { params(value: T::Boolean).void }
  def include_local_only_actions=(value); end

  sig { returns(T.nilable(MonolithTwirp::Actions::Core::V1::Identity)) }
  def repository_id; end

  sig { params(value: T.nilable(MonolithTwirp::Actions::Core::V1::Identity)).void }
  def repository_id=(value); end

  sig { returns(T::Boolean) }
  def should_ignore_repo_policies; end

  sig { params(value: T::Boolean).void }
  def should_ignore_repo_policies=(value); end
end
