{"version":3,"file":"wiki-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/behaviors/hash-change.ts","app/assets/modules/github/fragment-target.ts","app/assets/modules/github/sso.ts","app/assets/modules/github/wiki/wiki-edit.ts","app/assets/modules/github/wiki/gollum.ts","app/assets/modules/github/wiki/legacy.ts","app/assets/modules/github/wiki/gollum-dialog.ts","app/assets/modules/github/wiki/editor/gollum-editor.ts","app/assets/modules/wiki.ts","app/assets/modules/github/wiki/editor/langs/asciidoc.ts","app/assets/modules/github/wiki/editor/langs/markdown.ts","app/assets/modules/github/wiki/editor/langs/org.ts","app/assets/modules/github/wiki/editor/langs/pod.ts","app/assets/modules/github/wiki/editor/langs/textile.ts","app/assets/modules/github/wiki/editor/langs/creole.ts","app/assets/modules/github/wiki/editor/langs/rdoc.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/client-env/client-env.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/document-ready/document-ready.ts","ui/packages/failbot/failbot.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/states.ts","ui/packages/soft-nav/utils.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/visible/visible.ts"],"sourcesContent":["// Variant on the native `hashchange` event with extra features:\n//\n// * Guarantees that handlers run on DOMContentLoaded, or immediately if page has\n//   already loaded;\n// * If the anchor references an element by id, the `data.target` property of the\n//   argument passed to handlers will be a reference to that DOM element.\n//\n// Each handler will be invoked with a `data` object containing properties:\n//\n// * `oldURL` - String URL prior to the hash change, or `null` on initial page load;\n// * `newURL` - String URL after hash change, or current page URL;\n// * `target` - DOM element whose id matches the anchor value, or `null`.\n//\n// Examples\n//\n// ```js\n// // Redirect old anchor issue urls\n// hashChange((data) => {\n//   const m = data.newURL.match(/\\/issues#issue\\/(\\d+)$/)\n//   if (m) window.location = data.newURL.replace(/\\/?#issue\\/.+/, \"/#{m[1]}\")\n// })\n//\n// // Ensure that the referenced comment's parent container is visible\n// hashChange((data) => {\n//   const container = data.target && data.target.closest('.js-comments-container')\n//   if (container) container.classList.remove('d-none')\n// })\n// ```\n\nimport {ready} from '@github-ui/document-ready'\nimport {SOFT_NAV_STATE} from '@github-ui/soft-nav/states'\n\nconst handlers: HashChangeListener[] = []\nlet ran = 0\n\ntype HashChangeListener = (opts: {oldURL: string | null; newURL: string; target?: Element | null}) => unknown\n\nexport default function hashChange(handler: HashChangeListener) {\n  ;(async function () {\n    handlers.push(handler)\n    await ready\n    runRemainingHandlers()\n  })()\n}\n\nhashChange.clear = () => {\n  handlers.length = ran = 0\n}\n\nfunction runRemainingHandlers() {\n  const index = ran\n  ran = handlers.length\n  runHandlers(handlers.slice(index), null, window.location.href)\n}\n\nfunction runHandlers(handlersToRun: HashChangeListener[], oldURL: string | null, newURL: string) {\n  const id = window.location.hash.slice(1)\n  const target = id ? document.getElementById(id) : null\n  const data = {oldURL, newURL, target}\n\n  for (const fn of handlersToRun) {\n    fn.call(null, data)\n  }\n}\n\n// Track ieOldURL manually to work around an open IE bug where the hashchange\n// event does not have oldURL or newURL attributes. See\n// https://connect.microsoft.com/IE/feedback/details/828283/implement-hashchangeevent-oldurl-and-newurl\nlet ieOldURL = window.location.href\nwindow.addEventListener('popstate', function () {\n  ieOldURL = window.location.href\n})\n\nwindow.addEventListener('hashchange', function (event) {\n  const newURL = window.location.href\n  try {\n    runHandlers(handlers, event.oldURL || ieOldURL, newURL)\n  } finally {\n    ieOldURL = newURL\n  }\n})\n\nlet softNavOldURL: string | null = null\n\ndocument.addEventListener(SOFT_NAV_STATE.START, function () {\n  softNavOldURL = window.location.href\n})\n\ndocument.addEventListener(SOFT_NAV_STATE.SUCCESS, function () {\n  runHandlers(handlers, softNavOldURL, window.location.href)\n})\n","// Find element within document matching location hash.\nexport function findFragmentTarget(document: Document, hash: string = location.hash): Element | null {\n  return findElementByFragmentName(document, decodeFragmentValue(hash))\n}\n\n// Find element within document matching id or name.\nexport function findElementByFragmentName(document: Document, name: string): Element | null {\n  if (name === '') return null\n  return document.getElementById(name) || document.getElementsByName(name)[0]!\n}\n\n// Decode location hash.\nexport function decodeFragmentValue(hash: string): string {\n  try {\n    return decodeURIComponent(hash.slice(1))\n  } catch {\n    return ''\n  }\n}\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\nfunction waitForDialogClose(dialogEl: HTMLElement): Promise<unknown> {\n  return new Promise(resolve => {\n    dialogEl.addEventListener('dialog:remove', resolve, {once: true})\n  })\n}\n\nfunction setModalStatus(success: boolean) {\n  const modal = document.querySelector('.sso-modal')\n  if (!modal) return\n\n  modal.classList.remove('success', 'error')\n\n  if (success) modal.classList.add('success')\n  else modal.classList.add('error')\n}\n\nfunction updateExpiresAroundTag(expiresAround: string) {\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n  if (expiryTag) expiryTag.setAttribute('content', expiresAround)\n}\n\n// Asks the user to perform single sign-on for the current organization. SSO\n// take place in a new window so we'll need to set up a way for the other window\n// to tell us when SSO is complete and whether or not it was successful.\nasync function ssoPrompt() {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sso-modal]')!\n  const prompt = await dialog({content: fetchSafeDocumentFragment(document, link.href), dialogClass: 'sso-modal'})\n\n  let sso = null\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, compat/compat\n  const external: any = window.external\n\n  // Expose callback method for the SSO window to invoke with its status when complete.\n  external.ssoComplete = function (data: {error: boolean; expiresAround: string}) {\n    if (data.error) {\n      sso = false\n      setModalStatus(sso)\n    } else {\n      sso = true\n      setModalStatus(sso)\n      updateExpiresAroundTag(data.expiresAround)\n      window.focus()\n    }\n\n    // Remove the external function now that it's served its purpose\n    external.ssoComplete = null\n  }\n\n  await waitForDialogClose(prompt)\n\n  if (!sso) {\n    throw new Error('sso prompt canceled')\n  }\n}\n\n// Watch for modal complete elements. This is shown as the final step of the\n// single sign-on process that happens in a separate window. Once we see this\n// we know SSO is complete and we can try to tell the original window what the\n// status is before closing the SSO window.\nobserve('.js-sso-modal-complete', function (el) {\n  if (window.opener && window.opener.external.ssoComplete) {\n    const error = el.getAttribute('data-error')\n    const expiresAround = el.getAttribute('data-expires-around')\n\n    window.opener.external.ssoComplete({\n      error,\n      expiresAround,\n    })\n    window.close()\n  } else {\n    const fallback = el.getAttribute('data-fallback-url')\n    if (fallback) window.location.href = fallback\n  }\n})\n\nfunction expiresSoon(expiresTag: Element | null): boolean {\n  if (!(expiresTag instanceof HTMLMetaElement)) return true\n\n  const expiresAround = parseInt(expiresTag.content)\n  const now = new Date().getTime() / 1000\n\n  return now > expiresAround\n}\n\n// Remotely checks the single-sign on status for the current page. If the link tags are\n// not present in the <head>, the current page is not enforced and the status is considered good.\nasync function fetchSsoStatus(): Promise<boolean> {\n  const sessionTag = document.querySelector('link[rel=sso-session]')\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n\n  if (!(sessionTag instanceof HTMLLinkElement)) return true // No SSO enforcement head tags. SSO not enforced.\n  if (!expiresSoon(expiryTag)) return true // Don't bother checking unless we're nearing SSO session expiry\n\n  const url = sessionTag.href\n  const response = await fetch(url, {headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'}})\n  const result: boolean = await response.json()\n  return result\n}\n\nlet activeSsoPrompt: Promise<void> | null = null\n\nfunction clearActiveSsoPrompt() {\n  activeSsoPrompt = null\n}\n\n// Checks to see if the user has a valid single sign-on session for the current\n// page. If not and the page is enforced, it blocks the callback until the user\n// renews their SSO session.\n/* eslint-disable-next-line import/no-anonymous-default-export */\nexport default async function () {\n  const sso = await fetchSsoStatus()\n\n  if (!sso) {\n    if (!activeSsoPrompt) {\n      activeSsoPrompt = ssoPrompt()\n        /* eslint-disable-next-line github/no-then */\n        .then(clearActiveSsoPrompt)\n        /* eslint-disable-next-line github/no-then */\n        .catch(clearActiveSsoPrompt)\n    }\n\n    await activeSsoPrompt\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport verifySsoSession from '../sso'\n\nlet formSubmitted = false\nlet timeout: number | undefined\n\nfunction queueCheck(el: HTMLInputElement) {\n  timeout = window.setTimeout(checkHeadCommit, 5000, el)\n}\n\nasync function checkHeadCommit(el: HTMLInputElement) {\n  const currentVersion = el.value\n  const url = el.getAttribute('data-url')!\n  await verifySsoSession()\n\n  const response = await fetch(url, {headers: {'X-Requested-With': 'XMLHttpRequest'}})\n  const headSha = await response.text()\n\n  if (currentVersion === headSha) {\n    queueCheck(el)\n  } else if (!formSubmitted) {\n    const submit = document.querySelector('#gollum-editor-submit')\n    if (submit instanceof HTMLButtonElement) {\n      submit.disabled = true\n      /* eslint-disable-next-line github/no-d-none */\n      document.querySelector<HTMLElement>('#gollum-error-message')!.classList.remove('d-none')\n    }\n  }\n}\n\nobserve('#wiki-current-version', {\n  constructor: HTMLInputElement,\n  initialize(el) {\n    queueCheck(el)\n  },\n  remove() {\n    clearTimeout(timeout)\n  },\n})\n\non('click', '#gollum-editor-submit', function () {\n  formSubmitted = true\n})\n","// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\ntype NodeSelector = {\n  node1: HTMLElement | null\n  node2: HTMLElement | null\n  nodeComesAfter: (node1: HTMLElement, node2: HTMLElement) => boolean\n  selectNodeRange: () => void\n  checkNode: (node: HTMLInputElement) => void\n}\n\nconst nodeSelector: NodeSelector = {\n  node1: null,\n  node2: null,\n\n  selectNodeRange() {\n    const {node1, node2} = nodeSelector\n    if (node1 && node2) {\n      // swap the nodes around if they went in reverse\n      if (nodeSelector.nodeComesAfter(node1, node2)) {\n        const n = nodeSelector.node1\n        nodeSelector.node1 = nodeSelector.node2\n        nodeSelector.node2 = n\n      }\n\n      let nextNode = node1.nextElementSibling\n      while (nextNode) {\n        if (nextNode === node2) {\n          break\n        }\n        nextNode = nextNode.nextElementSibling\n      }\n    }\n  },\n\n  nodeComesAfter(node1, node2) {\n    let el = node1.previousElementSibling\n    while (el) {\n      if (el === node2) {\n        return true\n      }\n      el = el.previousElementSibling\n    }\n    return false\n  },\n\n  checkNode(nodeCheckbox) {\n    const node = nodeCheckbox.closest<HTMLElement>('.js-wiki-history-revision')!\n    // if we're unchecking\n    if (!nodeCheckbox.checked) {\n      // no longer track this\n      if (nodeSelector.node1 && node === nodeSelector.node1) {\n        nodeSelector.node1 = null\n        if (nodeSelector.node2) {\n          nodeSelector.node1 = nodeSelector.node2\n          nodeSelector.node2 = null\n        }\n      } else if (nodeSelector.node2 && node === nodeSelector.node2) {\n        nodeSelector.node2 = null\n      }\n    } else {\n      if (!nodeSelector.node1) {\n        nodeSelector.node1 = node\n      } else if (!nodeSelector.node2) {\n        // okay, we don't have a node 2 but have a node1\n        nodeSelector.node2 = node\n        nodeSelector.selectNodeRange()\n      } else {\n        // we have two selected already\n        nodeCheckbox.checked = false\n      }\n    }\n  },\n}\n\nobserve('.js-wiki-history-checkbox', function (el) {\n  if (!(el instanceof HTMLInputElement)) return\n  if (el.checked) {\n    nodeSelector.checkNode(el)\n  }\n})\n\non('change', '.js-wiki-history-checkbox', function ({currentTarget}) {\n  if (!(currentTarget instanceof HTMLInputElement)) return\n  nodeSelector.checkNode(currentTarget)\n})\n","import {findElementByFragmentName} from '../fragment-target'\nimport hashChange from '../behaviors/hash-change'\n\n// If a wiki page links to an anchor with a \"#wiki-\" prefix, and a named\n// anchor does not exist on the page, then remove the prefix.\n// For example: /github/github/wiki#wiki-foo -> /github/github/wiki#foo\nhashChange(function () {\n  if (!document.querySelector('#wiki-wrapper')) return\n\n  const match = window.location.hash.match(/^#(wiki-(.+))$/)\n  if (!match) return\n\n  const prefixed = match[1]!\n  const unprefixed = match[2]!\n  const prefixedAnchor = findElementByFragmentName(document, prefixed)\n  if (!prefixedAnchor) {\n    window.location.hash = unprefixed\n  }\n})\n","type Field = {\n  id: string\n  name: string\n  type: string\n  help?: string\n}\n\ntype ResultCallback = (bag: {[key: string]: string}) => void\n\ntype DialogOptions = {\n  body?: string\n  title: string\n  fields: Field[]\n  OK: ResultCallback\n}\n\ntype Dialog = {\n  markupCreated: boolean\n  markup: string\n  eventOK: (e: Event) => void\n  eventCancel: (e: Event) => void\n  eventKeydown: (e: KeyboardEvent) => void\n  okEventCallback?: ResultCallback\n  createFieldMarkup: (fields: Field[]) => string\n  createFieldText: (field: Field) => string\n  createMarkup: (title: string, body: string) => string\n  init: (arg0: DialogOptions) => void\n  hide: () => void\n  show: () => void\n  attachEvents: () => void\n  detachEvents: () => void\n  getDetailsElement: () => HTMLElement\n}\n\nexport const Dialog: Dialog = {\n  markupCreated: false,\n  markup: '',\n\n  attachEvents() {\n    document.querySelector<HTMLElement>('#gollum-dialog-action-ok')!.addEventListener('click', Dialog.eventOK)\n    document.querySelector<HTMLElement>('#gollum-dialog-action-cancel')!.addEventListener('click', Dialog.eventCancel)\n    for (const input of document.querySelectorAll<HTMLElement>('#gollum-dialog-dialog input[type=\"text\"]')) {\n      input.addEventListener('keydown', Dialog.eventKeydown)\n    }\n  },\n\n  detachEvents() {\n    document.querySelector<HTMLElement>('#gollum-dialog-action-ok')!.removeEventListener('click', Dialog.eventOK)\n    document\n      .querySelector<HTMLElement>('#gollum-dialog-action-cancel')!\n      .removeEventListener('click', Dialog.eventCancel)\n  },\n\n  createFieldMarkup(fieldArray: Field[]) {\n    // eslint-disable-next-line github/unescaped-html-literal\n    let fieldMarkup = '<fieldset>'\n    for (let i = 0; i < fieldArray.length; i++) {\n      if (typeof fieldArray[i] === 'object') {\n        // eslint-disable-next-line github/unescaped-html-literal\n        fieldMarkup += '<div>'\n        switch (fieldArray[i]!.type) {\n          // only text is supported for now\n          case 'text':\n            fieldMarkup += Dialog.createFieldText(fieldArray[i]!)\n            break\n\n          default:\n            break\n        }\n        fieldMarkup += '</div>'\n      }\n    }\n    fieldMarkup += '</fieldset>'\n    return fieldMarkup\n  },\n\n  createFieldText(fieldAttributes: {type: string; name: string; id: string}) {\n    let html = ''\n\n    if (fieldAttributes.name) {\n      // eslint-disable-next-line github/unescaped-html-literal\n      html += '<label class=\"d-block mb-1\"'\n      if (fieldAttributes.id) {\n        html += ` for=\"gollum-dialog-dialog-generated-field-${fieldAttributes.id}\"`\n      }\n      html += `>${fieldAttributes.name}</label>`\n    }\n\n    // eslint-disable-next-line github/unescaped-html-literal\n    html += '<input type=\"text\" class=\"mb-3 input-block\"'\n\n    if (fieldAttributes.id) {\n      html += ` name=\"${fieldAttributes.id}\"`\n      html += ` id=\"gollum-dialog-dialog-generated-field-${fieldAttributes.id}\">`\n    }\n\n    return html\n  },\n\n  createMarkup(title: string, body: string) {\n    Dialog.markupCreated = true\n    return `\n      <div id=\"gollum-dialog-dialog\">\n        <div class=\"Box-header\">\n          <h3 class=\"Box-title\">${title}</h3>\n        </div>\n        <div class=\"Box-body overflow-auto\">\n          <div id=\"gollum-dialog-dialog-body\">${body}</div>\n          <div id=\"gollum-dialog-dialog-buttons\" class=\"pt-3 border-top\">\n            <button type=\"button\" id=\"gollum-dialog-action-cancel\" class=\"ml-2 btn btn-sm float-right\" data-close-dialog>Cancel</a>\n            <button type=\"button\" id=\"gollum-dialog-action-ok\" class=\"btn btn-sm float-right\" data-close-dialog>OK</a>\n          </div>\n        </div>\n      </div>`\n  },\n\n  eventCancel(e: Event) {\n    e.preventDefault()\n    Dialog.hide()\n  },\n\n  eventOK(e: Event) {\n    e.preventDefault()\n\n    const results: {[key: string]: string} = {}\n    for (const el of document.querySelectorAll<HTMLInputElement>('#gollum-dialog-dialog-body input')) {\n      const name = el.getAttribute('name')\n      if (name) {\n        results[name] = el.value\n      }\n    }\n\n    // Call ok event callback after toggle event to give focus back to text area\n    Dialog.getDetailsElement().addEventListener(\n      'toggle',\n      function () {\n        // pass them to okEventCallack if it exists (which it should)\n        if (typeof Dialog.okEventCallback === 'function') {\n          Dialog.okEventCallback(results)\n        }\n      },\n      {once: true},\n    )\n\n    Dialog.hide()\n  },\n\n  eventKeydown(e: KeyboardEvent) {\n    // TODO: Refactor to use data-hotkey\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (e.key === 'Enter') {\n      Dialog.eventOK(e)\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  },\n\n  hide() {\n    Dialog.markupCreated = false\n    Dialog.getDetailsElement().removeAttribute('open')\n    Dialog.detachEvents()\n  },\n\n  getDetailsElement() {\n    return document.querySelector<HTMLElement>('.js-gollum-button-details')!\n  },\n\n  init(argObject: {body?: string; title: string; fields: Field[]; OK: ResultCallback}) {\n    let title = ''\n    let body = ''\n\n    // bail out if necessary\n    if (!argObject || typeof argObject != 'object') {\n      return\n    }\n\n    if (argObject.body && typeof argObject.body === 'string') {\n      // eslint-disable-next-line github/unescaped-html-literal\n      body = `<p>${argObject.body}</p>`\n    }\n\n    // alright, build out fields\n    if (argObject.fields && typeof argObject.fields === 'object') {\n      body += Dialog.createFieldMarkup(argObject.fields)\n    }\n\n    if (argObject.title && typeof argObject.title === 'string') {\n      title = argObject.title\n    }\n\n    Dialog.okEventCallback = argObject.OK\n    Dialog.markup = Dialog.createMarkup(title, body)\n\n    Dialog.show()\n\n    Dialog.attachEvents()\n    const input = document.querySelector('#gollum-dialog-dialog input[type=\"text\"]')\n    if (input instanceof HTMLInputElement) {\n      input.autofocus = true\n    }\n  },\n\n  show() {\n    if (Dialog.markupCreated) {\n      document.querySelector<HTMLElement>('.js-gollum-button-dialog')!.innerHTML = Dialog.markup\n      Dialog.getDetailsElement().setAttribute('open', '')\n    }\n  },\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nimport {parseHTML} from '@github-ui/parse-html'\nimport visible from '@github-ui/visible'\n\n//  A Gollum Editor.\n//\n//  Usage:\n//  GollumEditor(); on DOM ready.\n\ninterface Options {\n  MarkupType: string\n  EditorMode: string\n  NewFile: boolean\n  HasFunctionBar: boolean\n}\n\ninterface IncomingOptions {\n  MarkupType?: string\n  EditorMode?: string\n  NewFile?: boolean\n  HasFunctionBar?: boolean\n}\n\n// Editor options\nconst DefaultOptions: Options = {\n  MarkupType: 'markdown',\n  EditorMode: 'code',\n  NewFile: false,\n  HasFunctionBar: true,\n}\nlet ActiveOptions: Options = DefaultOptions\n\n// You don't need to do anything. Just run this on DOM ready.\nexport function GollumEditor(IncomingOptions: IncomingOptions) {\n  ActiveOptions = Object.assign(DefaultOptions, IncomingOptions)\n\n  if (EditorHas.baseEditorMarkup()) {\n    // Initialize the function bar by loading proper definitions\n    if (EditorHas.functionBar()) {\n      const htmlSetMarkupLang = document\n        .querySelector<HTMLElement>('#gollum-editor-body')!\n        .getAttribute('data-markup-lang')\n\n      if (htmlSetMarkupLang) {\n        ActiveOptions.MarkupType = htmlSetMarkupLang\n      }\n\n      if (EditorHas.formatSelector()) {\n        FormatSelector.init(document.querySelector<HTMLSelectElement>('#gollum-editor-format-selector select')!)\n      }\n\n      // load language definition\n      LanguageDefinition.setActiveLanguage(ActiveOptions.MarkupType)\n\n      if (EditorHas.help()) {\n        const editorHelp = document.getElementById('gollum-editor-help')\n        if (editorHelp) {\n          editorHelp.style.display = 'none'\n          editorHelp.classList.remove('jaws')\n        }\n      }\n    }\n  }\n}\n\ninterface LanguageObject {\n  [key: string]: definitionObject\n}\n\n// Defines a set of language actions that Gollum can use.\n// Used by the definitions in langs/ to register language definitions.\nexport function defineLanguage(languageName: string, languageObject: LanguageObject) {\n  if (typeof languageObject === 'object') {\n    LanguageDefinition.define(languageName, languageObject)\n  }\n}\n\ninterface ILanguageDefinition {\n  _ACTIVE_LANG: string\n  _LOADED_LANGS: string[]\n  _LANG: Record<string, LanguageObject>\n  define(name: string, obj: LanguageObject): void\n}\n\n// Language definition file handler\n// Loads language definition files as necessary.\nconst LanguageDefinition: ILanguageDefinition = {\n  _ACTIVE_LANG: '',\n  _LOADED_LANGS: [],\n  _LANG: {},\n\n  // Defines a language\n  define(name: string, definitionObject: LanguageObject) {\n    LanguageDefinition._ACTIVE_LANG = name\n    LanguageDefinition._LOADED_LANGS.push(name)\n    if (typeof GollumEditor.WikiLanguage === 'object') {\n      const definition = {}\n      Object.assign(definition, GollumEditor.WikiLanguage, definitionObject)\n      LanguageDefinition._LANG[name] = definition\n    } else {\n      LanguageDefinition._LANG[name] = definitionObject\n    }\n  },\n\n  getActiveLanguage() {\n    return LanguageDefinition._ACTIVE_LANG\n  },\n\n  setActiveLanguage(name) {\n    if (LanguageDefinition.getHookFunctionFor('deactivate')) {\n      const fn = LanguageDefinition.getHookFunctionFor('deactivate')\n      if (fn) fn()\n    }\n\n    function loaded() {\n      // Update features that rely on the language definition.\n      FunctionBar.refresh()\n\n      if (LanguageDefinition.isValid() && EditorHas.formatSelector()) {\n        FormatSelector.updateSelected()\n      }\n\n      if (LanguageDefinition.getHookFunctionFor('activate')) {\n        const fn = LanguageDefinition.getHookFunctionFor('activate')\n        if (fn) fn()\n      }\n    }\n\n    if (!LanguageDefinition.isLoadedFor(name)) {\n      LanguageDefinition._ACTIVE_LANG = ''\n      // Well, fake it and turn everything off for this one.\n      LanguageDefinition.define(name, {})\n      loaded()\n    } else {\n      LanguageDefinition._ACTIVE_LANG = name\n      loaded()\n    }\n  },\n\n  getHookFunctionFor(attr: string, lang?: string) {\n    let specifiedLang = lang\n    if (!specifiedLang) {\n      specifiedLang = LanguageDefinition._ACTIVE_LANG\n    }\n\n    if (\n      LanguageDefinition.isLoadedFor(specifiedLang) &&\n      LanguageDefinition._LANG[specifiedLang][attr] &&\n      typeof LanguageDefinition._LANG[specifiedLang][attr] === 'function'\n    ) {\n      return LanguageDefinition._LANG[specifiedLang][attr]\n    }\n\n    return null\n  },\n\n  // gets a definition object for a specified attribute\n  getDefinitionFor(attr: string, lang?: string) {\n    let specifiedLang = lang\n    if (!specifiedLang) {\n      specifiedLang = LanguageDefinition._ACTIVE_LANG\n    }\n\n    if (\n      LanguageDefinition.isLoadedFor(specifiedLang) &&\n      LanguageDefinition._LANG[specifiedLang][attr] &&\n      typeof LanguageDefinition._LANG[specifiedLang][attr] === 'object'\n    ) {\n      return LanguageDefinition._LANG[specifiedLang][attr]\n    }\n\n    return null\n  },\n\n  // Checks to see if a definition file has been loaded for the\n  // specified markup language.\n  isLoadedFor(markupName: string): boolean {\n    if (LanguageDefinition._LOADED_LANGS.length === 0) {\n      return false\n    }\n\n    for (let i = 0; i < LanguageDefinition._LOADED_LANGS.length; i++) {\n      if (LanguageDefinition._LOADED_LANGS[i] === markupName) {\n        return true\n      }\n    }\n    return false\n  },\n\n  isValid() {\n    return (\n      LanguageDefinition._ACTIVE_LANG && typeof LanguageDefinition._LANG[LanguageDefinition._ACTIVE_LANG] === 'object'\n    )\n  },\n}\n\n// EditorHas\n// Various conditionals to check what features of the Gollum Editor are\n// active/operational.\nconst EditorHas = {\n  // True if the basic editor form is in place.\n  baseEditorMarkup(): boolean {\n    return document.querySelector('#gollum-editor') != null && document.querySelector('#gollum-editor-body') != null\n  },\n\n  // True if the editor has a format selector (for switching between\n  // language types), false otherwise.\n  formatSelector(): boolean {\n    return document.querySelector('#gollum-editor-format-selector select') != null\n  },\n\n  // True if the Function Bar markup exists.\n  functionBar(): boolean {\n    return ActiveOptions.HasFunctionBar && document.querySelector('#gollum-editor-function-bar') != null\n  },\n\n  // True if in a Firefox 4.0 Beta environment.\n  ff4Environment(): boolean {\n    const ua = new RegExp(/Firefox\\/4.0b/)\n    return ua.test(navigator.userAgent)\n  },\n\n  // True if the editor has a summary field (Gollum's commit message),\n  // false otherwise.\n  editSummaryMarkup(): boolean {\n    return document.querySelector('input#gollum-editor-message-field') != null\n  },\n\n  // True if the editor contains the inline help sector, false otherwise.\n  help(): boolean {\n    return (\n      document.querySelector('#gollum-editor #gollum-editor-help') != null &&\n      document.querySelector('#gollum-editor #function-help') != null\n    )\n  },\n}\n\ninterface definitionObject {\n  exec?: (string, string, HTMLTextAreaElement) => void\n  search?: RegExp\n  replace?: string\n  append?: string\n}\n\nconst FunctionBar = {\n  isActive: false,\n\n  // FunctionBar.activate\n  // Activates the function bar, attaching all click events\n  // and displaying the bar.\n  activate() {\n    const functionBar = document.querySelector<HTMLElement>('#gollum-editor-function-bar')!\n    for (const el of functionBar.querySelectorAll('.function-button')) {\n      if (LanguageDefinition.getDefinitionFor(el.id) != null) {\n        el.addEventListener('click', FunctionBar.evtFunctionButtonClick)\n        el.classList.remove('disabled')\n      } else if (el.id !== 'function-help') {\n        el.removeEventListener('click', FunctionBar.evtFunctionButtonClick)\n        el.classList.add('disabled')\n      }\n    }\n\n    // show bar as active\n    functionBar.classList.add('active')\n    FunctionBar.isActive = true\n  },\n\n  deactivate() {\n    const functionBar = document.querySelector<HTMLElement>('#gollum-editor-function-bar')!\n    for (const el of functionBar.querySelectorAll('.function-button')) {\n      el.removeEventListener('click', FunctionBar.evtFunctionButtonClick)\n    }\n    functionBar.classList.remove('active')\n    FunctionBar.isActive = false\n  },\n\n  //  Event handler for the function buttons. Traps the click and\n  //  executes the proper language action.\n  evtFunctionButtonClick(e: MouseEvent) {\n    const {currentTarget} = e\n    e.preventDefault()\n    const def = LanguageDefinition.getDefinitionFor(currentTarget.id)\n    if (typeof def === 'object' && def) {\n      FunctionBar.executeAction(def)\n    }\n  },\n\n  // Executes a language-specific defined action for a function button.\n  executeAction(definitionObject: DefinitionObject) {\n    const body = document.getElementById('gollum-editor-body') as HTMLTextAreaElement\n    // get the selected text from the textarea\n    const txt = body.value\n    // hmm, I'm not sure this will work in a textarea\n    const selText = FunctionBar.getFieldSelection(body)\n    let repText = typeof selText === 'string' ? selText : ''\n    let reselect = true\n    let cursor = null\n\n    // execute a replacement function if one exists\n    if (typeof definitionObject.exec === 'function' && typeof selText === 'string') {\n      const exec = definitionObject.exec\n      exec.call(definitionObject, txt, selText, body)\n      return\n    }\n\n    // execute a search/replace if they exist\n    let searchExp = /([^\\n]+)/gi\n    if (definitionObject.search && typeof definitionObject.search === 'object') {\n      searchExp = new RegExp(definitionObject.search)\n    }\n    // replace text\n    if (definitionObject.replace && typeof definitionObject.replace === 'string') {\n      const rt = definitionObject.replace\n      repText = repText.replace(searchExp, rt)\n      // remove backreferences\n      repText = repText.replace(/\\$[\\d]/g, '')\n\n      if (repText === '') {\n        // find position of $1 - this is where we will place the cursor\n        cursor = rt.indexOf('$1')\n\n        // we have an empty string, so just remove backreferences\n        repText = rt.replace(/\\$[\\d]/g, '')\n\n        // if the position of $1 doesn't exist, stick the cursor in\n        // the middle\n        if (cursor === -1) {\n          cursor = Math.floor(rt.length / 2)\n        }\n      }\n    }\n\n    // append if necessary\n    if (definitionObject.append && typeof definitionObject.append === 'string') {\n      if (typeof selText === 'string' && repText === selText) {\n        reselect = false\n      }\n      repText += definitionObject.append\n    }\n\n    if (repText) {\n      FunctionBar.replaceFieldSelection(body, repText, reselect, cursor)\n    }\n  },\n\n  // Retrieves the selection range for the textarea.\n  getFieldSelectionPosition(field: HTMLTextAreaElement): {start: number; end: number} {\n    return {\n      start: field.selectionStart,\n      end: field.selectionEnd,\n    }\n  },\n\n  // Returns the currently selected substring of the textarea.\n  getFieldSelection(field: HTMLTextAreaElement): string {\n    const selPos = FunctionBar.getFieldSelectionPosition(field)\n    return field.value.substring(selPos.start, selPos.end)\n  },\n\n  isShown() {\n    const functionBar = document.querySelector('#gollum-editor-function-bar')\n    return functionBar != null && visible(functionBar)\n  },\n\n  refresh() {\n    if (EditorHas.functionBar()) {\n      if (LanguageDefinition.isValid()) {\n        FunctionBar.activate()\n        if (Help) {\n          Help.setActiveHelp(LanguageDefinition.getActiveLanguage())\n        }\n      } else {\n        if (FunctionBar.isShown()) {\n          // deactivate the function bar; it's not gonna work now\n          FunctionBar.deactivate()\n        }\n        if (Help.isShown()) {\n          Help.hide()\n        }\n      }\n    }\n  },\n\n  // Replaces the currently selected substring of the textarea with\n  // a new string.\n  replaceFieldSelection(\n    field: HTMLTextAreaElement,\n    replaceText: string,\n    reselect?: boolean,\n    cursorOffset?: number | null,\n  ) {\n    const selPos = FunctionBar.getFieldSelectionPosition(field)\n    const fullStr = field.value\n    let selectNew = true\n    if (reselect === false) {\n      selectNew = false\n    }\n\n    let scrollTop = null\n    if (field.scrollTop) {\n      scrollTop = field.scrollTop\n    }\n\n    field.value = fullStr.substring(0, selPos.start) + replaceText + fullStr.substring(selPos.end)\n\n    if (selectNew) {\n      if (typeof cursorOffset === 'number' && cursorOffset > 0) {\n        field.setSelectionRange(selPos.start + cursorOffset, selPos.start + cursorOffset)\n      } else {\n        field.setSelectionRange(selPos.start, selPos.start + replaceText.length)\n      }\n    }\n\n    // focus on field region where cursor last pointed to\n    field.focus()\n\n    if (scrollTop) {\n      // this jumps sometimes in FF\n      field.scrollTop = scrollTop\n    }\n  },\n}\n\ninterface IFormatSelector {\n  SELECTOR: HTMLSelectElement | null\n  init: (el: HTMLSelectElement) => void\n  updateSelected: () => void\n  evtChangeFormat: () => void\n}\n\nconst FormatSelector: IFormatSelector = {\n  SELECTOR: null,\n\n  // Event handler for when a format has been changed by the format\n  // selector. Will automatically load a new language definition\n  // via JS if necessary.\n  evtChangeFormat() {\n    const newMarkup = this.value\n    LanguageDefinition.setActiveLanguage(newMarkup)\n  },\n\n  // Initializes the format selector.\n  init(sel: HTMLSelectElement) {\n    // unbind events if init is being called twice for some reason\n    if (FormatSelector.SELECTOR != null) {\n      FormatSelector.SELECTOR.removeEventListener('change', FormatSelector.evtChangeFormat)\n    }\n\n    FormatSelector.SELECTOR = sel\n\n    // set format selector to the current language\n    FormatSelector.updateSelected()\n    const selector = FormatSelector.SELECTOR\n    if (selector) selector.addEventListener('change', FormatSelector.evtChangeFormat)\n  },\n\n  updateSelected() {\n    const currentLang = LanguageDefinition.getActiveLanguage()\n    const selector = FormatSelector.SELECTOR\n    if (selector) selector.value = currentLang\n  },\n}\n\ntype helpDefinitionObject = Array<{\n  menuName: string\n  content: Array<{\n    menuName: string\n    data: string\n  }>\n}>\n\ninterface IHelp {\n  _ACTIVE_HELP: string\n  _ACTIVE_HELP_LANG: string\n  _LOADED_HELP_LANGS: string[]\n  _HELP: Record<string, HelpDefinitionObject>\n  define(name: string, obj: HelpDefinitionObject): void\n  showHelpFor(index1: string, index2: string): void\n  clickFirstHelpLink(): void\n  generateSubMenu(subData: unknown, helpIndex: number): void\n  evtParentMenuClick(e: MouseEvent): void\n  show(): void\n  hide(): void\n  isShown(): boolean\n  generateHelpMenuFor(name: string): void\n  evtHelpButtonClick(e: MouseEvent): void\n  isValidHelpFormat(obj: DefinitionObject): boolean\n}\n\n// Functions that manage the display and loading of inline help files.\nconst Help: IHelp = {\n  _ACTIVE_HELP: '',\n  _ACTIVE_HELP_LANG: '',\n  _LOADED_HELP_LANGS: [],\n  _HELP: {},\n\n  // Defines a new help context and enables the help function if it\n  // exists in the Gollum Function Bar.\n  define(name: string, definitionObject: HelpDefinitionObject) {\n    const functionHelp = document.querySelector('#function-help')\n\n    if (Help.isValidHelpFormat(definitionObject)) {\n      Help._ACTIVE_HELP_LANG = name\n      Help._LOADED_HELP_LANGS.push(name)\n      Help._HELP[name] = definitionObject\n\n      if (functionHelp) {\n        functionHelp.classList.remove('disabled')\n        functionHelp.addEventListener('click', Help.evtHelpButtonClick)\n\n        // generate help menus\n        Help.generateHelpMenuFor(name)\n\n        const editorHelp = document.querySelector('#gollum-editor-help')\n        if (editorHelp && editorHelp.hasAttribute('data-autodisplay')) {\n          Help.show()\n        }\n      }\n    } else {\n      if (functionHelp) {\n        functionHelp.classList.add('disabled')\n        functionHelp.removeEventListener('click', Help.evtHelpButtonClick)\n      }\n    }\n  },\n\n  clickFirstHelpLink() {\n    const firstLink = document.querySelector('#gollum-editor-help-list .menu-item')\n    if (firstLink) {\n      firstLink.click()\n    }\n  },\n\n  // Generates the markup for the main help menu given a context name.\n  generateHelpMenuFor(name: string) {\n    if (!Help._HELP[name]) {\n      return false\n    }\n    const helpData = Help._HELP[name]\n\n    // clear this out\n    const helpParent = document.querySelector<HTMLElement>('#gollum-editor-help-parent')!\n    helpParent.textContent = ''\n    document.querySelector<HTMLElement>('#gollum-editor-help-list')!.textContent = ''\n    document.querySelector<HTMLElement>('#gollum-editor-help-content')!.textContent = ''\n\n    // go go inefficient algorithm\n    for (let i = 0; i < helpData.length; i++) {\n      if (typeof helpData[i] != 'object') {\n        break\n      }\n\n      const newLi = parseHTML(\n        document,\n        // eslint-disable-next-line github/unescaped-html-literal\n        `<a href=\"#\" rel=\"${i}\" class=\"menu-item border-bottom\">${helpData[i].menuName}</a>`,\n      )\n      const link = newLi.querySelector<HTMLElement>('a')!\n      if (i === 0) {\n        // select on first run\n        link.classList.add('selected')\n      }\n      link.addEventListener('click', Help.evtParentMenuClick)\n      helpParent.append(newLi)\n    }\n\n    // generate parent submenu on first run\n    Help.generateSubMenu(helpData[0], 0)\n    Help.clickFirstHelpLink()\n  },\n\n  // Generates the markup for the inline help sub-menu given the data\n  // object for the submenu and the array index to start at.\n  //\n  // @param object subData The data for the sub-menu.\n  // @param integer index  The index clicked on (parent menu index).\n  // @return void\n  generateSubMenu(subData, index) {\n    const helpList = document.querySelector<HTMLElement>('#gollum-editor-help-list')!\n    helpList.textContent = ''\n    document.querySelector<HTMLElement>('#gollum-editor-help-content')!.textContent = ''\n    for (let i = 0; i < subData.content.length; i++) {\n      if (typeof subData.content[i] != 'object') {\n        break\n      }\n\n      const subLi = parseHTML(\n        document,\n        // eslint-disable-next-line github/unescaped-html-literal\n        `<a href=\"#\" rel=\"${index}:${i}\" class=\"menu-item border-bottom\">${subData.content[i].menuName}</a>`,\n      )\n\n      for (const link of subLi.querySelectorAll('a')) {\n        link.addEventListener('click', Help.evtSubMenuClick)\n      }\n\n      helpList.append(subLi)\n    }\n  },\n\n  hide() {\n    const help = document.querySelector('#gollum-editor-help')\n    if (help) help.style.display = 'none'\n  },\n\n  show() {\n    const help = document.querySelector('#gollum-editor-help')\n    if (help) help.style.display = ''\n  },\n\n  // Displays the actual help content given the two menu indexes, which are\n  // rendered in the rel=\"\" attributes of the help menus\n  showHelpFor(index1: string, index2: string) {\n    const html = Help._HELP[Help._ACTIVE_HELP_LANG][index1].content[index2].data\n    document.querySelector<HTMLElement>('#gollum-editor-help-content')!.innerHTML = html\n  },\n\n  // Returns true if help is loaded for a specific markup language,\n  // false otherwise.\n  isLoadedFor(name: string): boolean {\n    for (let i = 0; i < Help._LOADED_HELP_LANGS.length; i++) {\n      if (name === Help._LOADED_HELP_LANGS[i]) {\n        return true\n      }\n    }\n    return false\n  },\n\n  isShown(): boolean {\n    const help = document.querySelector('#gollum-editor-help')\n    return help != null && visible(help)\n  },\n\n  // Does a quick check to make sure that the help definition isn't in a\n  // completely messed-up format.\n  isValidHelpFormat(helpArr: helpDefinitionObject): boolean {\n    return !!(\n      typeof helpArr === 'object' &&\n      helpArr.length &&\n      typeof helpArr[0].menuName === 'string' &&\n      typeof helpArr[0].content === 'object' &&\n      helpArr[0].content.length\n    )\n  },\n\n  // Sets the active help definition to the one defined in the argument,\n  // re-rendering the help menu to match the new definition.\n  setActiveHelp(name: string) {\n    const functionHelp = document.querySelector('#function-help')\n    if (!Help.isLoadedFor(name)) {\n      if (functionHelp) {\n        functionHelp.classList.add('disabled')\n        functionHelp.removeEventListener('click', Help.evtHelpButtonClick)\n      }\n      if (Help.isShown()) {\n        Help.hide()\n      }\n    } else {\n      Help._ACTIVE_HELP_LANG = name\n      if (functionHelp) {\n        functionHelp.classList.remove('disabled')\n        functionHelp.addEventListener('click', Help.evtHelpButtonClick)\n        Help.generateHelpMenuFor(name)\n      }\n    }\n  },\n\n  // Event handler for clicking the help button in the function bar.\n  evtHelpButtonClick(e: MouseEvent) {\n    const {currentTarget} = e\n    e.preventDefault()\n    if (Help.isShown()) {\n      // turn off autodisplay if it's on\n      const helpElement = document.querySelector<HTMLElement>('#gollum-editor-help')!\n      if (helpElement.hasAttribute('data-autodisplay')) {\n        const url = currentTarget.getAttribute('data-dismiss-help-url')!\n        const token = currentTarget.parentElement!.querySelector<HTMLInputElement>('.js-data-dismiss-help-url-csrf')!\n        const params = new URLSearchParams()\n\n        fetch(url, {\n          method: 'delete',\n          mode: 'same-origin',\n          body: params,\n          headers: {\n            'Scoped-CSRF-Token': token.value,\n            'X-Requested-With': 'XMLHttpRequest',\n          },\n        })\n        helpElement.removeAttribute('data-autodisplay')\n      }\n      Help.hide()\n    } else {\n      Help.show()\n    }\n  },\n\n  // Event handler for clicking on an item in the parent menu. Automatically\n  // renders the submenu for the parent menu as well as the first result for\n  // the actual plain text.\n  evtParentMenuClick(e: MouseEvent) {\n    e.preventDefault()\n    const {currentTarget} = e\n    // short circuit if we've selected this already\n    if (currentTarget.classList.contains('selected')) {\n      return\n    }\n\n    // populate from help data for this\n    const helpIndex = currentTarget.rel\n\n    const subData = Help._HELP[Help._ACTIVE_HELP_LANG][helpIndex]\n\n    for (const link of document.querySelectorAll('#gollum-editor-help-parent .menu-item')) {\n      link.classList.remove('selected')\n    }\n    currentTarget.classList.add('selected')\n    Help.generateSubMenu(subData, helpIndex)\n    Help.clickFirstHelpLink()\n  },\n\n  // Event handler for clicking an item in a help submenu. Renders the\n  // appropriate text for the submenu link.\n  evtSubMenuClick(e: MouseEvent) {\n    e.preventDefault()\n    const {currentTarget} = e\n    if (currentTarget.classList.contains('selected')) {\n      return\n    }\n\n    // split index rel data\n    const rawIndex = currentTarget.rel.split(':')\n\n    for (const link of document.querySelectorAll('#gollum-editor-help-list .menu-item')) {\n      link.classList.remove('selected')\n    }\n    currentTarget.classList.add('selected')\n    Help.showHelpFor(rawIndex[0], rawIndex[1])\n  },\n}\n\n// Publicly-accessible function to Help.define\nexport const defineHelp = Help.define\n\n// Dialog exists as its own thing now\nexport function replaceSelection(repText: string) {\n  const field = document.querySelector<HTMLTextAreaElement>('#gollum-editor-body')!\n  FunctionBar.replaceFieldSelection(field, repText)\n}\n","import './github/wiki/wiki-edit'\nimport './github/wiki/gollum'\nimport './github/wiki/legacy'\nimport {ASCIIDoc, ASCIIDocHelp} from './github/wiki/editor/langs/asciidoc'\nimport {GollumEditor, defineHelp, defineLanguage, replaceSelection} from './github/wiki/editor/gollum-editor'\nimport {MarkDown, MarkDownHelp} from './github/wiki/editor/langs/markdown'\nimport {OrgMode, OrgModeHelp} from './github/wiki/editor/langs/org'\nimport {Pod, PodHelp} from './github/wiki/editor/langs/pod'\nimport {Textile, TextileHelp} from './github/wiki/editor/langs/textile'\nimport {Creole} from './github/wiki/editor/langs/creole'\nimport {Dialog} from './github/wiki/gollum-dialog'\nimport {RDoc} from './github/wiki/editor/langs/rdoc'\n\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nobserve('#gollum-editor', function (el) {\n  GollumEditor({\n    NewFile: el.classList.contains('create'),\n  })\n\n  toggleMarkdownEditorMode()\n})\n\n// Internal Wikilanguage Functions\n// @ts-expect-error WikiLanguage is not defined on typings\nGollumEditor.WikiLanguage = {\n  'function-internal-link': {\n    exec() {\n      return Dialog.init({\n        title: 'Insert Wiki Link',\n        fields: [\n          {\n            id: 'name',\n            name: 'Link Name',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          const r = res.name ? `[[${res.name}]]` : ''\n          return replaceSelection(r)\n        },\n      })\n    },\n  },\n}\n\n// Rotates the triangle for table of content headers in the sidebar\non('click', '.js-wiki-sidebar-toc-toggle-chevron-button', function (event) {\n  event.currentTarget\n    .querySelector('.js-wiki-sidebar-toc-toggle-chevron')\n    ?.classList?.toggle('js-wiki-sidebar-toc-toggle-chevron-open')\n})\n\n// Rotates the triangle for pages section header in the sidebar\non('click', '.js-wiki-toggle-collapse', function (event) {\n  event.currentTarget\n    .querySelector('.js-wiki-sidebar-pages-toggle-chevron')\n    ?.classList?.toggle('js-wiki-sidebar-pages-toggle-chevron-open')\n})\n\nobserve('.js-wiki-sidebar-toc-fragment', function (el) {\n  function toggleHidden(element: HTMLElement, hidden: boolean) {\n    hidden ? element.setAttribute('hidden', '') : element.removeAttribute('hidden')\n  }\n  function toggleSpinner(loading: boolean, parentElement: HTMLElement | null) {\n    if (parentElement) {\n      const chevron = parentElement.querySelector('.js-wiki-sidebar-toc-toggle-chevron') as HTMLElement\n      const spinner = parentElement.querySelector('.js-wiki-sidebar-toc-spinner') as HTMLElement\n\n      toggleHidden(chevron, loading)\n      toggleHidden(spinner, !loading)\n    }\n  }\n\n  el.addEventListener('loadstart', e => toggleSpinner(true, (e.currentTarget as HTMLElement).parentElement))\n  el.addEventListener('include-fragment-replace', e => {\n    const currentTarget = e.currentTarget as HTMLElement\n    if (!currentTarget) {\n      return\n    }\n\n    toggleSpinner(false, currentTarget.parentElement)\n\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const fragment: HTMLElement | null = (e as any).detail?.fragment\n    if (!fragment || fragment.textContent !== '') return\n\n    const parentElement: HTMLElement | null = currentTarget.parentElement\n\n    if (!parentElement) return\n\n    const chevron = parentElement.querySelector('.js-wiki-sidebar-toc-toggle-chevron-button')\n\n    if (!chevron) return\n\n    chevron.classList.toggle('v-hidden')\n  })\n})\n\n// Expand/collapse wiki table of contents\non('click', '.js-wiki-toggle-collapse', function (event) {\n  const pagesBox = event.currentTarget.closest<HTMLElement>('.js-wiki-pages-box')!\n  for (const toggleDisplay of pagesBox.querySelectorAll('.js-wiki-sidebar-toggle-display')) {\n    /* eslint-disable-next-line github/no-d-none */\n    toggleDisplay.classList.toggle('d-none')\n  }\n})\n\non('click', '.js-wiki-more-pages-link', function (event) {\n  event.preventDefault()\n  event.currentTarget.closest<HTMLElement>('.js-wiki-pages-box')!.classList.toggle('wiki-show-more')\n})\n\n// Append wiki format to preview request\non('preview:setup', '.js-previewable-comment-form', function (event) {\n  const formatSelect = event.currentTarget.querySelector('#wiki_format')\n  if (formatSelect) {\n    const request = event.detail\n    request.data.append('wiki_format', (formatSelect as HTMLInputElement).value)\n  }\n})\n\n// Re-render the preview when changing format during preview\non('change', '#wiki_format', function (event) {\n  const target = event.currentTarget\n  const container = target.closest<HTMLElement>('.js-previewable-comment-form')!\n  if (container.classList.contains('preview-selected')) {\n    container.dispatchEvent(\n      new CustomEvent('preview:render', {\n        bubbles: true,\n        cancelable: false,\n      }),\n    )\n  }\n\n  toggleMarkdownEditorMode()\n})\n\nfunction toggleMarkdownEditorMode() {\n  const editor = document.querySelector('#gollum-editor-body')\n  const select = document.querySelector<HTMLSelectElement>('#wiki_format')\n\n  editor?.classList.toggle('js-paste-markdown', select?.value === 'markdown')\n}\n\ndefineHelp('asciidoc', ASCIIDocHelp)\ndefineHelp('markdown', MarkDownHelp)\ndefineHelp('org', OrgModeHelp)\ndefineHelp('pod', PodHelp)\ndefineHelp('textile', TextileHelp)\ndefineLanguage('asciidoc', ASCIIDoc)\ndefineLanguage('creole', Creole)\ndefineLanguage('markdown', MarkDown)\ndefineLanguage('org', OrgMode)\ndefineLanguage('pod', Pod)\ndefineLanguage('rdoc', RDoc)\ndefineLanguage('textile', Textile)\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\nexport const ASCIIDoc = {\n  'function-bold': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '*$1*$2',\n  },\n\n  'function-italic': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '_$1_$2',\n  },\n\n  'function-code': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '+$1+$2',\n  },\n\n  'function-ul': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '* $1$2',\n  },\n\n  'function-ol': {\n    search: /(.+)([\\n]?)/g,\n    replace: '. $1$2',\n  },\n\n  'function-blockquote': {\n    search: /(.+)([\\n]?)/g,\n    replace: '----\\n$1$2\\n----\\n',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n            help: 'The text to display to the user.',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n            help: 'The URL to link to.',\n          },\n        ],\n        OK(res) {\n          let h = ''\n          if (res['text'] && res['href']) {\n            h = `${res['href']}[${res['text']}]`\n          }\n          replaceSelection(h)\n        },\n      })\n    },\n  },\n\n  'function-image': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Image',\n        fields: [\n          {\n            id: 'url',\n            name: 'Image URL',\n            type: 'text',\n          },\n          {\n            id: 'alt',\n            name: 'Alt Text',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let h = ''\n          if (res['url'] && res['alt']) {\n            h = `image::${res['url']}[${res['alt']}]`\n          }\n          replaceSelection(h)\n        },\n      })\n    },\n  },\n}\n\nexport const ASCIIDocHelp = [\n  {\n    menuName: 'Text Formatting',\n    content: [\n      {\n        menuName: 'Headers',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>ASCIIDoc headers can be written in two ways: with differing underlines or with different indentation using <code>=</code> (equals sign). ASCIIDoc supports headings 1-4. The editor will automatically use the <code>=</code> notation. To create a level one header, prefix your line with one <code>=</code>. Level two headers are created with <code>==</code> and so on.</p>',\n      },\n      {\n        menuName: 'Bold / Italic',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display text as <strong>bold</strong>, wrap the text in <code>*</code> (asterisks). To display text as <em>italic</em>, wrap the text in <code>_</code> (underscores). To create <code>monospace</code> text, wrap the text in <code>+</code> (plus signs).',\n      },\n      {\n        menuName: 'Scripts',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Superscript and subscript is created the same way as other inline formats. To create superscript text, wrap your text in <code>^</code> (carats). To create subscript text, wrap your text in <code>~</code> (tildes).</p>',\n      },\n      {\n        menuName: 'Special Characters',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>ASCIIDoc will automatically convert textual representations of commonly-used special characters. For example, <code>(R)</code> becomes &reg;, <code>(C)</code> becomes &copy; and <code>(TM)</code> becomes &trade;.</p>',\n      },\n    ],\n  },\n  {\n    menuName: 'Blocks',\n    content: [\n      {\n        menuName: 'Paragraphs',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>ASCIIDoc allows paragraphs to have optional titles or icons to denote special sections. To make a normal paragraph, simply add a line between blocks and a new paragraph will start. If you want to title your paragraphs, adda line prefixed by <code>.</code> (full stop). An example paragraph with optional title is displayed below:<br><br><code>.Optional Title<br><br>This is my paragraph. It is two sentences long.</code></p>',\n      },\n      {\n        menuName: 'Source Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create source blocks (long blocks of code), follow the same syntax as above but with an extra line denoting the inline source and lines of four dashes (<code>----</code>) delimiting the source block.. An example of Python source is below:<br><br><code>.python.py<br>[source,python]<br>----<br># i just wrote a comment in python<br># and maybe one more<br>----</code></p>',\n      },\n      {\n        menuName: 'Comment Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Comment blocks are useful if you want to keep notes for yourself inline but do not want them displayed to the public. To create a comment block, simply wrap the paragraph in dividers with four slashes (<code>////</code>). An example comment block is below:<br><br><code>////<br>My comment block is here now<br><br>It can be multiple paragraphs. Really.<br>////</p>',\n      },\n      {\n        menuName: 'Quote Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Quote blocks work much like comment blocks &mdash; simply create dividers using four underscores (<code>____</code>) around your quote. An example quote block is displayed below:<br><code>____<br>This is my quote block. Quote something nice here, otherwise there is no point in quoting.<br>____</code></p>',\n      },\n    ],\n  },\n  {\n    menuName: 'Macros',\n    content: [\n      {\n        menuName: 'Links',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create links to external pages, you can simply write the URI if you want the URI to link to itself. (i.e., <code>https://github.com/</code> will automatically be parsed to <a class=\"Link--inTextBlock\" href=\"javascript:void(0);\">https://github.com/</a>. If you want different text to be displayed, simply append it to the end of the URI in between <code>[</code> (brackets.) For example, <code>https://github.com/[GitHub]</code> will be parsed as <a class=\"Link--inTextBlock\" href=\"javascript:void(0);\">GitHub</a>, with the URI pointing to <code>https://github.com</code>.</p>',\n      },\n      {\n        menuName: 'Images',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Images in ASCIIDoc work much like hyperlinks, but image URLs are prefixed with <code>image:</code>. For example, to link to an image at <code>images/icons/home.png</code>, write <code>image:images/icons/home.png</code>. Alt text can be added by appending the text to the URI in <code>[</code> (brackets).</p>',\n      },\n    ],\n  },\n]\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\n/*\n *  Markdown Language Definition.\n *\n *  A language definition for string manipulation operations, in this case\n *  for the Markdown, uh, markup language. Uses regexes for various functions\n *  by default. If regexes won't do and you need to do some serious\n *  manipulation, you can declare a function in the object instead.\n *\n *  @example\n *  'functionbar-id'  :   {\n *                          exec: function(text, selectedText) {\n *                                   functionStuffHere();\n *                                },\n *                          search: /somesearchregex/gi,\n *                          replace: 'replace text for RegExp.replace',\n *                          append: \"just add this where the cursor is\"\n *                         }\n *\n **/\n\nexport const MarkDown = {\n  'function-bold': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '**$1**$2',\n  },\n\n  'function-italic': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '_$1_$2',\n  },\n\n  'function-code': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '`$1`$2',\n  },\n\n  'function-hr': {\n    append: '\\n***\\n',\n  },\n\n  'function-ul': {\n    search: /(.+)([\\n]?)/g,\n    replace: '* $1$2',\n  },\n\n  /* This looks silly but is completely valid Markdown */\n  'function-ol': {\n    search: /(.+)([\\n]?)/g,\n    replace: '1. $1$2',\n  },\n\n  'function-blockquote': {\n    search: /(.+)([\\n]?)/g,\n    replace: '> $1$2',\n  },\n\n  'function-h1': {\n    search: /(.+)([\\n]?)/g,\n    replace: '# $1$2',\n  },\n\n  'function-h2': {\n    search: /(.+)([\\n]?)/g,\n    replace: '## $1$2',\n  },\n\n  'function-h3': {\n    search: /(.+)([\\n]?)/g,\n    replace: '### $1$2',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let rep = ''\n          if (res['text'] && res['href']) {\n            rep = `[${res['text']}](${res['href']})`\n          }\n          replaceSelection(rep)\n        },\n      })\n    },\n  },\n\n  'function-image': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Image',\n        fields: [\n          {\n            id: 'url',\n            name: 'Image URL',\n            type: 'text',\n          },\n          {\n            id: 'alt',\n            name: 'Alt Text',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let rep = ''\n          if (res['url']) {\n            rep = `![${res['alt']}](${res['url']})`\n          }\n          replaceSelection(rep)\n        },\n      })\n    },\n  },\n}\n\nexport const MarkDownHelp = [\n  {\n    menuName: 'Block Elements',\n    content: [\n      {\n        menuName: 'Paragraphs &amp; Breaks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create a paragraph, simply create a block of text that is not separated by one or more blank lines. Blocks of text separated by one or more blank lines will be parsed as paragraphs.</p><p>If you want to create a line break, end a line with two or more spaces, then hit Return/Enter.</p>',\n      },\n      {\n        menuName: 'Headers',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown supports two header formats. The wiki editor uses the &ldquo;atx&rdquo;-style headers. Simply prefix your header text with the number of <code>#</code> characters to specify heading depth. For example: <code># Header 1</code>, <code>## Header 2</code> and <code>### Header 3</code> will be progressively smaller headers. You may end your headers with any number of hashes.</p>',\n      },\n      {\n        menuName: 'Blockquotes',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown creates blockquotes email-style by prefixing each line with the <code>&gt;</code>. This looks best if you decide to hard-wrap text and prefix each line with a <code>&gt;</code> character, but Markdown supports just putting <code>&gt;</code> before your paragraph.</p>',\n      },\n      {\n        menuName: 'Lists',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown supports both ordered and unordered lists. To create an ordered list, simply prefix each line with a number (any number will do &mdash; this is why the editor only uses one number.) To create an unordered list, you can prefix each line with <code>*</code>, <code>+</code> or <code>-</code>.</p> List items can contain multiple paragraphs, however each paragraph must be indented by at least 4 spaces or a tab.',\n      },\n      {\n        menuName: 'Code Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown wraps code blocks in pre-formatted tags to preserve indentation in your code blocks. To create a code block, indent the entire block by at least 4 spaces or one tab. Markdown will strip the extra indentation you’ve added to the code block.</p>',\n      },\n      {\n        menuName: 'Horizontal Rules',\n        data: 'Horizontal rules are created by placing three or more hyphens, asterisks or underscores on a line by themselves. Spaces are allowed between the hyphens, asterisks or underscores.',\n      },\n    ],\n  },\n\n  {\n    menuName: 'Span Elements',\n    content: [\n      {\n        menuName: 'Links',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown has two types of links: <strong>inline</strong> and <strong>reference</strong>. For both types of links, the text you want to display to the user is placed in square brackets. For example, if you want your link to display the text &ldquo;GitHub&rdquo;, you write <code>[GitHub]</code>.</p><p>To create an inline link, create a set of parentheses immediately after the brackets and write your URL within the parentheses. (e.g., <code>[GitHub](https://github.com/)</code>). Relative paths are allowed in inline links.</p><p>To create a reference link, use two sets of square brackets. <code>[[my internal link|internal-ref]]</code> will link to the internal reference <code>internal-ref</code>.</p>',\n      },\n\n      {\n        menuName: 'Emphasis',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Asterisks (<code>*</code>) and underscores (<code>_</code>) are treated as emphasis and are wrapped with an <code>&lt;em&gt;</code> tag, which usually displays as italics in most browsers. Double asterisks (<code>**</code>) or double underscores (<code>__</code>) are treated as bold using the <code>&lt;strong&gt;</code> tag. To create italic or bold text, simply wrap your words in single/double asterisks/underscores. For example, <code>**My double emphasis text**</code> becomes <strong>My double emphasis text</strong>, and <code>*My single emphasis text*</code> becomes <em>My single emphasis text</em>.</p>',\n      },\n\n      {\n        menuName: 'Code',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create inline spans of code, simply wrap the code in backticks (<code>`</code>). Markdown will turn <code>`myFunction`</code> into <code>myFunction</code>.</p>',\n      },\n\n      {\n        menuName: 'Images',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Markdown image syntax looks a lot like the syntax for links; it is essentially the same syntax preceded by an exclamation point (<code>!</code>). For example, if you want to link to an image at <code>https://github.com/unicorn.png</code> with the alternate text <code>My Unicorn</code>, you would write <code>![My Unicorn](https://github.com/unicorn.png)</code>.</p>',\n      },\n    ],\n  },\n\n  {\n    menuName: 'Miscellaneous',\n    content: [\n      {\n        menuName: 'Automatic Links',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>If you want to create a link that displays the actual URL, markdown allows you to quickly wrap the URL in <code>&lt;</code> and <code>&gt;</code> to do so. For example, the link <a class=\"Link--inTextBlock\" href=\"javascript:void(0);\">https://github.com/</a> is easily produced by writing <code>&lt;https://github.com/&gt;</code>.</p>',\n      },\n\n      {\n        menuName: 'Escaping',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>If you want to use a special Markdown character in your document (such as displaying literal asterisks), you can escape the character with the backslash (<code>\\\\</code>). Markdown will ignore the character directly after a backslash.',\n      },\n    ],\n  },\n]\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\nexport const OrgMode = {\n  'function-bold': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '*$1*$2',\n  },\n\n  'function-italic': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '/$1/$2',\n  },\n\n  'function-code': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '=$1=$2',\n  },\n\n  'function-ul': {\n    search: /(.+)([\\n]?)/g,\n    replace: '* $1$2',\n  },\n\n  /* This works, just like it works for Markdown */\n  'function-ol': {\n    search: /(.+)([\\n]?)/g,\n    replace: '1. $1$2',\n  },\n\n  'function-blockquote': {\n    search: /(.+)([\\n]?)/g,\n    replace: '#+BEGIN_QUOTE\\n$1$2\\n#+END_QUOTE\\n',\n  },\n\n  'function-h1': {\n    search: /(.+)([\\n]?)/g,\n    replace: '* $1$2',\n  },\n\n  'function-h2': {\n    search: /(.+)([\\n]?)/g,\n    replace: '** $1$2',\n  },\n\n  'function-h3': {\n    search: /(.+)([\\n]?)/g,\n    replace: '*** $1$2',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let rep = ''\n          if (res['text'] && res['href']) {\n            rep = `[[${res['href']}][${res['text']}]]`\n          } else if (res['href']) {\n            rep = `[[${res['href']}]]`\n          }\n          replaceSelection(rep)\n        },\n      })\n    },\n  },\n\n  'function-image': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Image',\n        fields: [\n          {\n            id: 'url',\n            name: 'Image URL',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let rep = ''\n          if (res['url']) {\n            rep = `[[${res['url']}]]`\n          }\n          replaceSelection(rep)\n        },\n      })\n    },\n  },\n}\n\nexport const OrgModeHelp = [\n  {\n    menuName: 'Block Elements',\n    content: [\n      {\n        menuName: 'Paragraphs &amp; Breaks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create a paragraph, simply create a block of text that is not separated by one or more blank lines. Blocks of text separated by one or more blank lines will be parsed as paragraphs.</p>',\n      },\n      {\n        menuName: 'Headers',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Simply prefix your header text with the number of <code>*</code> characters to specify heading depth. For example: <code>* Header 1</code>, <code>** Header 2</code> and <code>*** Header 3</code> will be progressively smaller headers.</p>',\n      },\n      {\n        menuName: 'Blockquotes',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create a blockquote, simple embed the text between <code>#+BEGIN_QUOTE</code> and <code>#+END_QUOTE</code>. An example quote block is displayed below:<br><code>#+BEGIN_QUOTE<br>This is my quote block. Quote something nice here, otherwise there is no point in quoting.<br>#+END_QUOTE</code></p>',\n      },\n      {\n        menuName: 'Lists',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Org-mode supports both ordered and unordered lists. To create an ordered list, simply prefix each line with a number (any number will do &mdash; this is why the editor only uses one number.) To create an unordered list, you can prefix each line with <code>+</code> or <code>-</code>.</p>',\n      },\n      {\n        menuName: 'Code Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Code Blocks are similar to blockquote, except that <code>#+BEGIN_EXAMPLE</code> and <code>#+END_EXAMPLE</code> are used.</p>',\n      },\n      {\n        menuName: 'Tables',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Org-mode supports simple tables (tables with equal number of cells in each row). To create a simple table, just separate the contents of each cell with a <code>|</code> character. For example, <br><br><code>|one|two|three|<br>|four|five|six|</code><br><br> will appear as a table with two rows and three columns.  Additionally, <br><br><code>|one|two|three|<br>|---+---+-----|<br>|four|five|six|</code><br><br> will also appear as a table, but the first row will be interpreted as a header row and the <code>&lt;th&gt;</code> tag will be used to render it. </p>',\n      },\n    ],\n  },\n\n  {\n    menuName: 'Span Elements',\n    content: [\n      {\n        menuName: 'Links',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create links to external pages, you need to enclose the URI in double square brackets. (i.e., <code>[[https://github.com/]]</code> will automatically be parsed to <a class=\"Link--inTextBlock\" href=\"javascript:void(0);\">https://github.com/</a>)If you want to add text, to be displayed to the user, you write the URI and the text next to each other, both enclosed in square brackets and both of them together enclosed in another pair of square brackets. For example, if you want your link to display the text &ldquo;GitHub&rdquo;, you write <code>[[https://github.com][GitHub]]</code>.</p>',\n      },\n\n      {\n        menuName: 'Emphasis',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Forward slashes (<code>/</code>) are treated as emphasis and are wrapped with an <code>&lt;i&gt;</code> tag. Asterisks (<code>*</code>) are treated as bold using the <code>&lt;b&gt;</code> tag.</p>',\n      },\n\n      {\n        menuName: 'Code',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create inline spans of code, simply wrap the code in equal signs (<code>=</code>). Orgmode will turn <code>=myFunction=</code> into <code>myFunction</code>.</p>',\n      },\n\n      {\n        menuName: 'Images',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          \"<p>Org-mode image syntax is exactly same as the syntax that you would use for a URI to link to itself. The image URI is enclosed in double square brackets. Alt text on images is not currently supported by Gollum's Org-mode parser.</p>\",\n      },\n    ],\n  },\n]\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\nexport const Pod = {\n  'function-bold': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: 'B<$1>$2',\n  },\n\n  'function-italic': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: 'I<$1>$2',\n  },\n\n  'function-code': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: 'C<$1>$2',\n  },\n\n  'function-h1': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '=head1 $1$2',\n  },\n\n  'function-h2': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '=head2 $1$2',\n  },\n\n  'function-h3': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '=head3 $1$2',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let rep = ''\n          if (res['text'] && res['href']) {\n            rep = `L<${res['text']}|${res['href']}>`\n          }\n          replaceSelection(rep)\n        },\n      })\n    },\n  },\n}\n\nexport const PodHelp = [\n  {\n    menuName: 'Command Paragraphs',\n    content: [\n      {\n        menuName: 'Headings',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>All command paragraphs start with <code>=</code> (equals sign).</p><p>To create headings 1 through 4, begin your command paragraph with <code>=headN</code>, where <code>N</code> is the number of the heading 1 through 4. For example, to make a first-order heading (the largest possible,) write <code>=head1</code>, then on the next line begin your paragraph that you want under the heading.</p>',\n      },\n      {\n        menuName: 'Beginning &amp; Ending',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Perl pod blocks should begin with <code>=pod</code> and end with <code>=cut</code>, signifying to Pod parsers that the pod block has begun and ended. These command paragraphs only signal the beginning and end of a pod block.</p>',\n      },\n      {\n        menuName: 'Other Formats',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>pod also allows blocks in other formats, such as HTML or plain text. To create one of these blocks, use the <code>=format SYNTAX</code> command paragraph, where <code>SYNTAX</code> is the syntax of the block (e.g. <code>html</code> or <code>txt</code>). At the end of your block, use the <code>=end SYNTAX</code> block.</p>',\n      },\n      {\n        menuName: 'Encoding',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>If you are having encoding troubles, use the <code>=encoding ENC_TYPE</code> command, where <code>ENC_TYPE</code> is the encoding type (e.g. <code>utf8</code>, <code>koi8-r</code>). This will affect the entire document, not just the block below the command.</p>',\n      },\n    ],\n  },\n  {\n    menuName: 'Formatting',\n    content: [\n      {\n        menuName: 'Text',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Formatting text as <strong>bold</strong>, <em>italic</em> or <code>code</code> works in the <code>S&lt;word&gt;</code> syntax, where <code>S</code> is an abbreviation for the type of text you are trying to create. For example, <code>B&lt;my bold text&gt;</code> becomes <strong>my bold text</strong>,  <code>I&lt;italic text&gt;</code> becomes <em>italic text</em> and <code>C&lt;code here()&gt;</code> becomes <code>code here()</code>.</p>',\n      },\n      {\n        menuName: 'Hyperlinks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Writing hyperlinks in pod is much like formatting text, using the same <code>S&lt;&gt;</code> syntax. Instead of <code>B</code>, <code>I</code> or <code>C</code>, use <code>L</code> to begin a hyperlink.</p><p>pod allows you to hyperlink to a <code>man</code> page, a Perl documentation page, or another web page. To link to a <code>man</code> or Perl documentation page, simply include the page name in the link (e.g. <code>L&lt;perl(1)&gt;</code> or <code>L&lt;Net::Ping&gt;</code>). If you want to link to a web page, separate the URL and the link text with a pipe (e.g. to link to github.com, write <code>L&lt;GitHub|https://github.com/&gt;</code>).',\n      },\n    ],\n  },\n]\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\nexport const Textile = {\n  'function-bold': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '*$1*$2',\n  },\n\n  'function-italic': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    replace: '_$1_$2',\n  },\n\n  'function-hr': {\n    append: '\\n***\\n',\n  },\n\n  'function-code': {\n    search: /(^[\\n]+)([\\n\\s]*)/g,\n    // eslint-disable-next-line github/unescaped-html-literal\n    replace: '<pre><code>$1</code></pre>$2',\n  },\n\n  'function-ul': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '* $1$2',\n  },\n\n  'function-ol': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '# $1$2',\n  },\n\n  'function-blockquote': {\n    search: /(.+)([\\n]?)/gi,\n    replace: 'bq. $1$2',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n            help: 'The text to display to the user.',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n            help: 'The URL to link to.',\n          },\n        ],\n        OK(res) {\n          let h = ''\n          if (res['text'] && res['href']) {\n            h = `\"${res['text']}\":${res['href']}`\n          }\n          replaceSelection(h)\n        },\n      })\n    },\n  },\n\n  'function-image': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Image',\n        fields: [\n          {\n            id: 'url',\n            name: 'Image URL',\n            type: 'text',\n          },\n          {\n            id: 'alt',\n            name: 'Alt Text',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          if (res['url']) {\n            let h = `!${res['url']}`\n            if (res['alt'] !== '') {\n              h += `(${res['alt']})`\n            }\n            h += '!'\n            replaceSelection(h)\n          }\n        },\n      })\n    },\n  },\n}\n\nexport const TextileHelp = [\n  {\n    menuName: 'Phrase Modifiers',\n    content: [\n      {\n        menuName: 'Emphasis / Strength',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To place emphasis or strength on inline text, simply place <code>_</code> (underscores) around the text for emphasis or <code>*</code> (asterisks) around the text for strength. In most browsers, <code>_mytext_</code> will appear as italics and <code>*mytext*</code> will appear as bold.</p><p>To force italics or bold, simply double the characters: <code>__mytext__</code> will appear italic and <code>**mytext**</code> will appear as bold text.</p>',\n      },\n      {\n        menuName: 'Citations / Editing',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display citations, wrap your text in <code>??</code> (two question marks).</p><p>To display edit marks such as deleted text (strikethrough) or inserted text (underlined text), wrap your text in <code>-</code> (minuses) or <code>+</code> (pluses). For example <code>-mytext-</code> will be rendered as <span style=\"text-decoration: line-through;\">mytext</span> and <code>+mytext+</code> will be rendered as <span style=\"text-decoration: underline;\">mytext</span></p>',\n      },\n      {\n        menuName: 'Superscript / Subscript',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display superscript, wrap your text in <code>^</code> (carets). To display subscript, wrap your text in <code>~</code> (tildes).</p>',\n      },\n      {\n        menuName: 'Code',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display monospace code, wrap your text in <code>@</code> (at symbol). For example, <code>@mytext@</code> will appear as <code>mytext</code>.</p>',\n      },\n      {\n        menuName: 'Acronyms',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create an acronym, suffix the acronym with the definition in parentheses. For example, <code>JS(JavaScript)</code> will be displayed as <abbr title=\"JavaScript\">JS</abbr>.</p>',\n      },\n    ],\n  },\n  {\n    menuName: 'Block Modifiers',\n    content: [\n      {\n        menuName: 'Headings',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display a heading in Textile, prefix your line of text with <code>hn.</code>, where <code>n</code> equals the heading size you want (1 is largest, 6 is smallest).</p>',\n      },\n      {\n        menuName: 'Paragraphs / Quotes',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create a new paragraph, prefix your first line of a block of text with <code>p.</code>.</p><p>To create a blockquote, make sure at least one blank line exists between your text and any surrounding text, and then prefix that block with <code>bq.</code> If you need to extend a blockquote to more than one text block, write <code>bq..</code> (note the two periods) and prefix your next normal paragraph with <code>p.</code></p>',\n      },\n      {\n        menuName: 'Code Blocks',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>Code blocks in textile are simply prefixed like any other block. To create a code block, place the beginning of the block on a separate line and prefix it with <code>bc.</code></p><p>To display a preformatted block, prefix the block with <code>pre.</code></p>',\n      },\n      {\n        menuName: 'Lists',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To create ordered lists, prefix each line with <code>#</code>. To create unordered lists, prefix each line with <code>*</code>.</p>',\n      },\n    ],\n  },\n  {\n    menuName: 'Links / Images',\n    content: [\n      {\n        menuName: 'Links',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display a link, put the text you want to display in quotes, then a colon (<code>:</code>), then the URL after the colon. For example <code>&quot;GitHub&quot;:https://github.com/</code> will appear as <a class=\"Link--inTextBlock\" href=\"javascript:void(0);\">GitHub</a>.</p>',\n      },\n      {\n        menuName: 'Images',\n        data:\n          // eslint-disable-next-line github/unescaped-html-literal\n          '<p>To display an image, simply wrap the image’s URL in <code>!</code> (exclamation points). If you want to link the image to a URL, you can blend the image and link syntax: place your image URL in the exclamation points and suffix that with a colon and your URL. For example, an image at <code>http://myurl/image.png</code> that should link to <code>http://myurl/</code> should be written as <code>!http://myurl/image.png!:http://myurl/</code>.</p>',\n      },\n    ],\n  },\n]\n","import {Dialog} from '../../gollum-dialog'\nimport {replaceSelection} from '../gollum-editor'\n\nexport const Creole = {\n  'function-bold': {\n    search: /([^\\n]+)([\\n]*)/gi,\n    replace: '**$1**$2',\n  },\n\n  'function-italic': {\n    search: /([^\\n]+)([\\n]*)/gi,\n    replace: '//$1//$2',\n  },\n\n  'function-code': {\n    search: /([^\\n]+)([\\n]*)/gi,\n    replace: '{{{$1}}}$2',\n  },\n\n  'function-hr': {\n    append: '\\n\\n----\\n\\n',\n  },\n\n  'function-ul': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '* $1$2',\n  },\n\n  /* This looks silly but is completely valid Markdown */\n  'function-ol': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '# $1$2',\n  },\n\n  'function-link': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Link',\n        fields: [\n          {\n            id: 'text',\n            name: 'Link Text',\n            type: 'text',\n            help: 'The text to display to the user.',\n          },\n          {\n            id: 'href',\n            name: 'URL',\n            type: 'text',\n            help: 'The URL to link to.',\n          },\n        ],\n        OK(res) {\n          const h = `[[${res['href']}|${res['text']}]]`\n          replaceSelection(h)\n        },\n      })\n    },\n  },\n\n  'function-image': {\n    exec() {\n      Dialog.init({\n        title: 'Insert Image',\n        fields: [\n          {\n            id: 'url',\n            name: 'Image URL',\n            type: 'text',\n          },\n          {\n            id: 'alt',\n            name: 'Alt Text',\n            type: 'text',\n          },\n        ],\n        OK(res) {\n          let h = ''\n          if (res['url'] && res['alt']) {\n            h = `{{${res['url']}`\n            if (res['alt'] !== '') {\n              h += `|${res['alt']}}}`\n            }\n          }\n          replaceSelection(h)\n        },\n      })\n    },\n  },\n}\n","import {replaceSelection} from '../gollum-editor'\n\n/*\n *  Markdown Language Definition.\n *\n *  A language definition for string manipulation operations, in this case\n *  for the Markdown, uh, markup language. Uses regexes for various functions\n *  by default. If regexes won't do and you need to do some serious\n *  manipulation, you can declare a function in the object instead.\n *\n *  @example\n *  'functionbar-id'  :   {\n *                          exec: function(text, selectedText) {\n *                                   functionStuffHere();\n *                                },\n *                          search: /somesearchregex/gi,\n *                          replace: 'replace text for RegExp.replace',\n *                          append: \"just add this where the cursor is\"\n *                         }\n *\n **/\n\nexport const RDoc = {\n  'function-bold': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '((*$1*))$2',\n  },\n  'function-code': {\n    search: /([^\\n]+)([\\n\\s]*)/g,\n    replace: '(({$1}))$2',\n  },\n\n  'function-ul': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '* $1$2',\n  },\n\n  'function-ol': {\n    exec(txt: string, selText: string) {\n      // split into lines\n      let repText = ''\n      const lines = selText.split('\\n')\n      const hasContent = /[\\w]+/\n      for (let i = 0; i < lines.length; i++) {\n        if (hasContent.test(lines[i]!)) {\n          repText += `(${(i + 1).toString()}) ${lines[i]}`\n        }\n      }\n      replaceSelection(repText)\n    },\n  },\n\n  'function-h1': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '= $1$2',\n  },\n\n  'function-h2': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '== $1$2',\n  },\n\n  'function-h3': {\n    search: /(.+)([\\n]?)/gi,\n    replace: '=== $1$2',\n  },\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","// Due to the way `visible` is implemented, it causes the browser to\n// perform a full page reflow, it lays out all elements again, when called. This\n// is one of the most time consuming operations the browser can perform, so it\n// affects perceived page load times.\n//\n// The preferred way to determine element visibility is check for the presence\n// of the `hidden` attribute: `if (el.hidden) ...` and `el.hidden = false`.\n//\n// More info: https://github.com/github/eslint-plugin-github/blob/master/docs/rules/no-d-none.md.\n//\n// We would ideally like to remove the `visible` function and consistently\n// use the `hidden` attribute.\n//\n// Returns true if the element is hidden.\nfunction hidden(element: HTMLElement): boolean {\n  return element.offsetWidth <= 0 && element.offsetHeight <= 0\n}\n\nexport default function visible(element: HTMLElement): boolean {\n  return !hidden(element)\n}\n"],"names":["handlers","ran","hashChange","handler","push","ready","runRemainingHandlers","index","length","runHandlers","slice","window","location","href","handlersToRun","oldURL","newURL","id","hash","data","target","document","getElementById","fn","call","clear","ieOldURL","addEventListener","event","softNavOldURL","SOFT_NAV_STATE","START","SUCCESS","findFragmentTarget","findElementByFragmentName","decodeFragmentValue","name","getElementsByName","decodeURIComponent","setModalStatus","success","modal","querySelector","classList","remove","add","ssoPrompt","link","prompt","dialog","content","fetchSafeDocumentFragment","dialogClass","sso","external","ssoComplete","error","updateExpiresAroundTag","expiresAround","expiryTag","setAttribute","focus","Promise","resolve","dialogEl","once","fetchSsoStatus","sessionTag","HTMLLinkElement","expiresSoon","expiresTag","HTMLMetaElement","parseInt","now","Date","getTime","url","response","fetch","headers","Accept","json","observe","el","opener","getAttribute","close","fallback","activeSsoPrompt","clearActiveSsoPrompt","then","catch","timeout","formSubmitted","queueCheck","setTimeout","checkHeadCommit","currentVersion","value","verifySsoSession","text","submit","HTMLButtonElement","disabled","constructor","HTMLInputElement","initialize","clearTimeout","on","nodeSelector","node1","node2","selectNodeRange","nodeComesAfter","n","nextNode","nextElementSibling","previousElementSibling","checkNode","nodeCheckbox","node","closest","checked","currentTarget","match","prefixed","unprefixed","Dialog","markupCreated","markup","attachEvents","input","eventOK","eventCancel","querySelectorAll","eventKeydown","detachEvents","removeEventListener","createFieldMarkup","fieldArray","fieldMarkup","i","type","createFieldText","fieldAttributes","html","createMarkup","title","body","e","preventDefault","hide","results","getDetailsElement","okEventCallback","key","removeAttribute","init","argObject","fields","OK","show","autofocus","innerHTML","DefaultOptions","MarkupType","EditorMode","NewFile","HasFunctionBar","ActiveOptions","GollumEditor","IncomingOptions","Object","assign","EditorHas","baseEditorMarkup","functionBar","htmlSetMarkupLang","formatSelector","FormatSelector","LanguageDefinition","setActiveLanguage","help","editorHelp","style","display","defineLanguage","languageName","languageObject","define","_ACTIVE_LANG","_LOADED_LANGS","_LANG","definitionObject","WikiLanguage","definition","getActiveLanguage","getHookFunctionFor","isLoadedFor","loaded","FunctionBar","refresh","isValid","updateSelected","attr","lang","specifiedLang","getDefinitionFor","markupName","isActive","activate","evtFunctionButtonClick","deactivate","def","executeAction","txt","selText","getFieldSelection","repText","reselect","cursor","exec","searchExp","search","RegExp","replace","rt","indexOf","Math","floor","append","replaceFieldSelection","getFieldSelectionPosition","start","field","selectionStart","end","selectionEnd","selPos","substring","isShown","visible","Help","setActiveHelp","replaceText","cursorOffset","fullStr","selectNew","scrollTop","setSelectionRange","SELECTOR","evtChangeFormat","newMarkup","sel","selector","currentLang","_ACTIVE_HELP","_ACTIVE_HELP_LANG","_LOADED_HELP_LANGS","_HELP","functionHelp","isValidHelpFormat","evtHelpButtonClick","generateHelpMenuFor","hasAttribute","clickFirstHelpLink","firstLink","click","helpData","helpParent","textContent","newLi","parseHTML","menuName","evtParentMenuClick","generateSubMenu","subData","helpList","subLi","evtSubMenuClick","showHelpFor","index1","index2","helpArr","helpElement","token","parentElement","method","mode","URLSearchParams","contains","helpIndex","rel","rawIndex","split","defineHelp","replaceSelection","toggleMarkdownEditorMode","editor","select","toggle","res","toggleHidden","element","hidden","toggleSpinner","loading","chevron","spinner","fragment","detail","toggleDisplay","pagesBox","formatSelect","request","container","dispatchEvent","CustomEvent","bubbles","cancelable","h","rep","lines","hasContent","test","toString","queryLast","list","requestUri","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","extraParams","meta","names","env","getEnv","getLocale","locale","loadEnv","envTag","JSON","parse","console","options","clonedDetails","dialogTemplate","cloneNode","details","detailsDialog","detailsClass","label","labelledBy","prepend","errorSpan","createElement","errorMessage","fire","ssrSafeDocument","readyState","ssrSafeWindow","extensionErrors","errorsReported","loadTime","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","stringify","report","errorContext","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","head","stack","frame","extensions","filename","function","sanitizedUrl","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","map","file","String","methodName","lineno","lineNumber","colno","column","BroadcastChannel","sharedWorkerErrorChannel","getEnabledFeaturesSet","features","featureFlags","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","featureFlag","ResponseError","status","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","get","responseNonce","getDocumentHtmlSafeNonces","silenceErrorReporting","Request","self","statusText","trustedHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","fetchRetry","fetchOptions","max","attempt","retry","reject","err","result","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","app_id","event_url","entries","visitorMeta","atob","staff","isStaff","sendPageView","sendEvent","service","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","template","importNode","runtimeEnvironment","isEnterprise","BUNDLER","NoOpStorage","setItem","removeItem","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","expiry","Number","jsonSafeStorage","storageBackend","freeze","INITIAL","ERROR","FRAME_UPDATE","END","RENDER","PROGRESS_BAR","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","appName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","ssrSafeHistory","history","ssrSafeLocation","origin","IS_BROWSER","wasServerRendered","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","random","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","items","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","navigator","sendBeacon","join","TrustedTypesPolicyError","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","output","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","Map","trustedTypes","rules","set","hasWarnedHubberAboutTrustedTypes","violatedDirective","warn","offsetWidth","offsetHeight"],"sourceRoot":""}