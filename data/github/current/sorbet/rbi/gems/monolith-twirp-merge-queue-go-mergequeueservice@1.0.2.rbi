# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-merge-queue-go-mergequeueservice` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-merge-queue-go-mergequeueservice`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith-twirp-merge-queue-go-mergequeueservice.rb#7
module Monolith; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith-twirp-merge-queue-go-mergequeueservice.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith-twirp-merge-queue-go-mergequeueservice.rb#9
module Monolith::Twirp::MergeQueueGo; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith-twirp-merge-queue-go-mergequeueservice.rb#10
module Monolith::Twirp::MergeQueueGo::Mergequeueservice; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith-twirp-merge-queue-go-mergequeueservice.rb#11
class Monolith::Twirp::MergeQueueGo::Mergequeueservice::Error < ::StandardError; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/version.rb#4
module MonolithTwirp::MergeQueueGo; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/version.rb#5
module MonolithTwirp::MergeQueueGo::Mergequeueservice; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/version.rb#6
MonolithTwirp::MergeQueueGo::Mergequeueservice::VERSION = T.let(T.unsafe(nil), String)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#98
module MonolithTwirp::MergeQueueService; end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#99
module MonolithTwirp::MergeQueueService::V1; end

class MonolithTwirp::MergeQueueService::V1::AddPullRequestRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::AddPullRequestResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::MergeQueueService::V1::Algorithm
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#117
MonolithTwirp::MergeQueueService::V1::Algorithm::ALGORITHM_FIFO = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#117
MonolithTwirp::MergeQueueService::V1::Algorithm::ALGORITHM_INVALID = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::MergeQueueService::V1::ClearMergeQueueRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::ClearMergeQueueResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::GetMergeQueueRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::GetMergeQueueResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::InvalidateMergeQueueRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::InvalidateMergeQueueResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::MergeQueueService::V1::MergeMethod
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#116
MonolithTwirp::MergeQueueService::V1::MergeMethod::MERGE_METHOD_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#116
MonolithTwirp::MergeQueueService::V1::MergeMethod::MERGE_METHOD_MERGE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#116
MonolithTwirp::MergeQueueService::V1::MergeMethod::MERGE_METHOD_REBASE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#116
MonolithTwirp::MergeQueueService::V1::MergeMethod::MERGE_METHOD_SQUASH = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_twirp.rb#20
class MonolithTwirp::MergeQueueService::V1::MergeQueueServiceAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def add_pull_request(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def clear_merge_queue(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_merge_queue(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def invalidate_merge_queue(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def refs_changed(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def remove_pull_request(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def upsert_merge_queue(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_twirp.rb#8
class MonolithTwirp::MergeQueueService::V1::MergeQueueServiceAPIService < ::Twirp::Service; end

class MonolithTwirp::MergeQueueService::V1::RefsChangedRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::Action
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#114
MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::Action::ACTION_CREATED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#114
MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::Action::ACTION_DELETED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#114
MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::Action::ACTION_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#114
MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::Action::ACTION_MERGED = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::MergeQueueService::V1::RefsChangedRequest::RefChange
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::RefsChangedResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::RemovePullRequestRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::RemovePullRequestResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::MergeQueueService::V1::Status
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#118
MonolithTwirp::MergeQueueService::V1::Status::STATUS_CONFLICT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#118
MonolithTwirp::MergeQueueService::V1::Status::STATUS_FAILURE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#118
MonolithTwirp::MergeQueueService::V1::Status::STATUS_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#118
MonolithTwirp::MergeQueueService::V1::Status::STATUS_PENDING = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-merge-queue-go-mergequeueservice//lib/monolith_twirp/merge-queue-go/mergequeueservice/v1/merge_queue_service_pb.rb#118
MonolithTwirp::MergeQueueService::V1::Status::STATUS_SUCCESS = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::MergeQueueService::V1::UpsertMergeQueueRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueService::V1::UpsertMergeQueueResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end
