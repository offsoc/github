# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::AlephIndexerStats`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::AlephIndexerStats`.

class Hydro::Schemas::Github::V1::AlephIndexerStats
  sig do
    params(
      blobs_indexed: T.nilable(Integer),
      build_index_duration: T.nilable(Google::Protobuf::Duration),
      build_index_duration_ms: T.nilable(Integer),
      changed_size: T.nilable(Integer),
      default_branch: T.nilable(T::Boolean),
      duration: T.nilable(Google::Protobuf::Duration),
      duration_ms: T.nilable(Integer),
      full_index: T.nilable(T::Boolean),
      index_mode: T.nilable(T.any(Symbol, Integer)),
      indexed_at: T.nilable(Google::Protobuf::Timestamp),
      indexed_refs: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::AlephIndexerStats::IndexedRef], T::Array[Hydro::Schemas::Github::V1::AlephIndexerStats::IndexedRef])),
      language_names: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      load_project_duration: T.nilable(Google::Protobuf::Duration),
      load_project_duration_ms: T.nilable(Integer),
      nodes_indexed: T.nilable(Integer),
      owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      parse_duration: T.nilable(Google::Protobuf::Duration),
      parse_duration_ms: T.nilable(Integer),
      parseable_size: T.nilable(Integer),
      partial_paths_indexed: T.nilable(Integer),
      primary_language_name: T.nilable(String),
      read_ops: T.nilable(Integer),
      read_size: T.nilable(Integer),
      ref_size: T.nilable(Integer),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      symbols_indexed: T.nilable(Integer),
      upload_index_duration: T.nilable(Google::Protobuf::Duration),
      upload_index_duration_ms: T.nilable(Integer),
      write_ops: T.nilable(Integer),
      write_size: T.nilable(Integer)
    ).void
  end
  def initialize(blobs_indexed: nil, build_index_duration: nil, build_index_duration_ms: nil, changed_size: nil, default_branch: nil, duration: nil, duration_ms: nil, full_index: nil, index_mode: nil, indexed_at: nil, indexed_refs: T.unsafe(nil), language_names: T.unsafe(nil), load_project_duration: nil, load_project_duration_ms: nil, nodes_indexed: nil, owner: nil, parse_duration: nil, parse_duration_ms: nil, parseable_size: nil, partial_paths_indexed: nil, primary_language_name: nil, read_ops: nil, read_size: nil, ref_size: nil, repository: nil, symbols_indexed: nil, upload_index_duration: nil, upload_index_duration_ms: nil, write_ops: nil, write_size: nil); end

  sig { returns(Integer) }
  def blobs_indexed; end

  sig { params(value: Integer).void }
  def blobs_indexed=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def build_index_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def build_index_duration=(value); end

  sig { returns(Integer) }
  def build_index_duration_ms; end

  sig { params(value: Integer).void }
  def build_index_duration_ms=(value); end

  sig { returns(Integer) }
  def changed_size; end

  sig { params(value: Integer).void }
  def changed_size=(value); end

  sig { void }
  def clear_blobs_indexed; end

  sig { void }
  def clear_build_index_duration; end

  sig { void }
  def clear_build_index_duration_ms; end

  sig { void }
  def clear_changed_size; end

  sig { void }
  def clear_default_branch; end

  sig { void }
  def clear_duration; end

  sig { void }
  def clear_duration_ms; end

  sig { void }
  def clear_full_index; end

  sig { void }
  def clear_index_mode; end

  sig { void }
  def clear_indexed_at; end

  sig { void }
  def clear_indexed_refs; end

  sig { void }
  def clear_language_names; end

  sig { void }
  def clear_load_project_duration; end

  sig { void }
  def clear_load_project_duration_ms; end

  sig { void }
  def clear_nodes_indexed; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_parse_duration; end

  sig { void }
  def clear_parse_duration_ms; end

  sig { void }
  def clear_parseable_size; end

  sig { void }
  def clear_partial_paths_indexed; end

  sig { void }
  def clear_primary_language_name; end

  sig { void }
  def clear_read_ops; end

  sig { void }
  def clear_read_size; end

  sig { void }
  def clear_ref_size; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_symbols_indexed; end

  sig { void }
  def clear_upload_index_duration; end

  sig { void }
  def clear_upload_index_duration_ms; end

  sig { void }
  def clear_write_ops; end

  sig { void }
  def clear_write_size; end

  sig { returns(T::Boolean) }
  def default_branch; end

  sig { params(value: T::Boolean).void }
  def default_branch=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def duration=(value); end

  sig { returns(Integer) }
  def duration_ms; end

  sig { params(value: Integer).void }
  def duration_ms=(value); end

  sig { returns(T::Boolean) }
  def full_index; end

  sig { params(value: T::Boolean).void }
  def full_index=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def index_mode; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def index_mode=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def indexed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def indexed_at=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::AlephIndexerStats::IndexedRef]) }
  def indexed_refs; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::AlephIndexerStats::IndexedRef]
    ).void
  end
  def indexed_refs=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def language_names; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def language_names=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def load_project_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def load_project_duration=(value); end

  sig { returns(Integer) }
  def load_project_duration_ms; end

  sig { params(value: Integer).void }
  def load_project_duration_ms=(value); end

  sig { returns(Integer) }
  def nodes_indexed; end

  sig { params(value: Integer).void }
  def nodes_indexed=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def owner=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def parse_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def parse_duration=(value); end

  sig { returns(Integer) }
  def parse_duration_ms; end

  sig { params(value: Integer).void }
  def parse_duration_ms=(value); end

  sig { returns(Integer) }
  def parseable_size; end

  sig { params(value: Integer).void }
  def parseable_size=(value); end

  sig { returns(Integer) }
  def partial_paths_indexed; end

  sig { params(value: Integer).void }
  def partial_paths_indexed=(value); end

  sig { returns(String) }
  def primary_language_name; end

  sig { params(value: String).void }
  def primary_language_name=(value); end

  sig { returns(Integer) }
  def read_ops; end

  sig { params(value: Integer).void }
  def read_ops=(value); end

  sig { returns(Integer) }
  def read_size; end

  sig { params(value: Integer).void }
  def read_size=(value); end

  sig { returns(Integer) }
  def ref_size; end

  sig { params(value: Integer).void }
  def ref_size=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(Integer) }
  def symbols_indexed; end

  sig { params(value: Integer).void }
  def symbols_indexed=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def upload_index_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def upload_index_duration=(value); end

  sig { returns(Integer) }
  def upload_index_duration_ms; end

  sig { params(value: Integer).void }
  def upload_index_duration_ms=(value); end

  sig { returns(Integer) }
  def write_ops; end

  sig { params(value: Integer).void }
  def write_ops=(value); end

  sig { returns(Integer) }
  def write_size; end

  sig { params(value: Integer).void }
  def write_size=(value); end
end
