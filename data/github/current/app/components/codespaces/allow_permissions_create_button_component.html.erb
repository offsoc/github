<% if disabled_button.present? %>
  <%= disabled_button %>
<% else %>
  <div class="position-relative">
    <template id="concurrency-error">
      <%= render Codespaces::CreateConcurrencyErrorComponent.new %>
    </template>
    <div class="position-relative width-full text-center">
      <%= form_for(codespace, form_options) do |f| %>
        <%= f.hidden_field(:repository_id) %>
        <%= f.hidden_field(:ref, value: codespace.ref_for_display) %>
        <%= f.hidden_field(:pull_request_id) %>
        <%= f.hidden_field(:vscs_target, value: vscs_target) if vscs_target.present? %>
        <%= f.hidden_field(:sku_name) %>
        <%= f.hidden_field(:vscs_target_url, value: vscs_target_url, data: { target: "new-codespace.vscsTargetUrl" }) %>
        <%= hidden_field_tag(:open_in_deeplink, open_in_deeplink) if open_in_deeplink %>
        <%= f.hidden_field(:location) %>
        <%= f.hidden_field(:devcontainer_path) %>
        <%= additional_hidden_fields %>
        <%= f.button({
            class: "#{btn_class} js-toggle-hidden"}.merge(btn_options).merge(test_selector_data_hash("codespaces-create-button"))) do %>
          <%= render Primer::Beta::Octicon.new(icon: button_icon, classes: icon_class) if button_icon %>
          <%= text %>
        <% end %>
        <span class="js-toggle-hidden" hidden> <%#= TODO: maybe instead of relying on js-toggle-hidden can show if loading state in js form is true etc. %>
          <%= loading_button %>
        </span>
      <% end %>
    </div>
  </div>
<% end %>
