# The name of the changeset. This should match the filename.
name: deprecate_beta_media_type

# auto-generated timestamp of when the changeset was created
created_at: 20220816144524

# A human-readable description of the changeset for use in the public changelog.
#
# <Remove> foo property from bar response
# <Change> baz property type to bring global consistency
# <Deprecate> qux operation
description: Deprecate support for the `beta` media type

# To further elaborate on the details of the change or its effects.
notes: |-
  This media type was officially deprecated in 2014. However, there are still remnants
  of its use that modify response payloads. Below is a list of responses/response properties
  that will be deprecated as a result.

  User email response as an array of strings:

    e.g: ["kyle@foo.com", "kyle@bar.com"]

    Affected:
      * GET /user/emails
      * POST /user/emails
      * GET /user/public_emails
      * PATCH /user/email/visibility

  `pull_request` response property with `null` default values

    Affected:
      * GET /issues
      * GET /orgs/{org}/issues
      * GET /user/issues
      * GET /repos/{owner}/{repo}/issues
      * POST /repos/{owner}/{repo}/issues
      * GET /repos/{owner}/{repo}/issues/{issue_number}
      * POST /repos/{owner}/{repo}/issues/{issue_number}
      * PATCH /repos/{owner}/{repo}/issues/{issue_number}
      * GET /search/issues

  `user` response property. Replaced by `owner`

    Affected:
      * GET /gists
      * POST /gists
      * GET /gists/public
      * GET /gists/starred
      * GET /gists/{gist_id}
      * POST /gists/{gist_id}
      * PATCH /gists/{gist_id}
      * GET /users/{username}/gists
      * POST /gists/{gist_id}/fork
      * POST /gists/{gist_id}/forks
      * GET /gists/{gist_id}/forks
      * GET /gists/{gist_id}/{sha}

  `master_branch` response property. Replaced by `default_branch`

    Affected:
      * GET /orgs/{org}/teams/{team_slug}/repos
      * GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}
      * GET /orgs/{org}/migrations/{migration_id}/repositories
      * GET /user/migrations/{migration_id}/repositories
      * GET /user/repos
      * GET /users/{username}/repos
      * GET /orgs/{org}/repos
      * GET /repos/{owner}/{repo}/forks
      * GET /user/subscriptions
      * GET /users/{username}/subscriptions
      * GET /orgs/{org}/actions/permissions/repositories
      * GET /installation/repositories
      * GET /user/installations/{installation_id}/repositories
      * POST /app/installations/{installation_id}/access_tokens
      * GET /search/repositories
      * POST /orgs/{org}/migrations
      * POST /user/migrations
      * GET /orgs/{org}/migrations
      * GET /user/migrations
      * GET /orgs/{org}/migrations/{migration_id}
      * GET /user/migrations/{migration_id}
      * POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers
      * DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers
      * GET /repos/{owner}/{repo}/pulls
      * POST /repos/{owner}/{repo}/pulls
      * GET /repos/{owner}/{repo}/pulls/{pull_number}
      * POST /repos/{owner}/{repo}/pulls/{pull_number}
      * PATCH /repos/{owner}/{repo}/pulls/{pull_number}
      * GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls
      * GET /repos/{owner}/{repo}
      * POST /user/repos
      * POST /orgs/{org}/repos
      * POST /repos/{owner}/{repo}
      * PATCH /repos/{owner}/{repo}
      * POST /repos/{owner}/{repo}/forks
      * GET /user/starred
      * GET /users/{username}/starred
      * GET /orgs/{org}/teams/{team_slug}/repos
      * GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}

# The date on or after which this changeset can be promoted into a fixed version.
# Once you're ready for your change to be shipped in a breaking version, uncomment
# the next line and set an appropriate date.
ready_to_ship_on_or_after: "2022-09-16"

# Releases that this changeset applies to.
releases:
  - api.github.com
  - ghes

# Version used to release this changeset. For internal use by @github/ecosystem-api.
#
# Changesets will default to using the 'next' version
# Note: Any changesets without a tagged version can be used by including the `X-GitHub-API-Version: next` header,
# will be considered as part of the 'next' version,
# and will be released as part of the 'next' version via the OpenAPI descriptions.
version: next

# The owning team.
#
# For example: "@github/ecosystem-api"
owner: "@github/ecosystem-api"
