# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V2::Entities::MemexProjectView`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V2::Entities::MemexProjectView`.

class Hydro::Schemas::Github::V2::Entities::MemexProjectView
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      creator_id: T.nilable(Integer),
      filter: T.nilable(String),
      group_by: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      id: T.nilable(Integer),
      layout: T.nilable(String),
      name: T.nilable(String),
      number: T.nilable(Integer),
      sort_by: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V2::Entities::MemexProjectViewSortBy], T::Array[Hydro::Schemas::Github::V2::Entities::MemexProjectViewSortBy])),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      visible_fields: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer]))
    ).void
  end
  def initialize(created_at: nil, creator_id: nil, filter: nil, group_by: T.unsafe(nil), id: nil, layout: nil, name: nil, number: nil, sort_by: T.unsafe(nil), updated_at: nil, visible_fields: T.unsafe(nil)); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_creator_id; end

  sig { void }
  def clear_filter; end

  sig { void }
  def clear_group_by; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_layout; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_sort_by; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_visible_fields; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def creator_id; end

  sig { params(value: Integer).void }
  def creator_id=(value); end

  sig { returns(String) }
  def filter; end

  sig { params(value: String).void }
  def filter=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def group_by; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def group_by=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def layout; end

  sig { params(value: String).void }
  def layout=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V2::Entities::MemexProjectViewSortBy]) }
  def sort_by; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V2::Entities::MemexProjectViewSortBy]
    ).void
  end
  def sort_by=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def visible_fields; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def visible_fields=(value); end
end
