<% view = Stafftools::RepositoryViews::ReleasesView.new(:repository => current_repository, :current_user => current_user, :page => params[:page]) %>

<% page_info :title => view.page_title %>
<% can_search_audit_log = stafftools_action_authorized?(controller: Stafftools::SearchController, action: :audit_log) %>

<div class="boxed-group">
  <h3>Summary</h3>
  <div class="boxed-group-inner clearfix">
    <p>
      <div class="summary">
        <dl>
          <dt>Binary Assets</dt>
          <dd><%= number_to_human_size view.repo_releases_size %></dd>
        </dl>
      </div>
    </p>
    <% if can_search_audit_log %>
      <p>
        <%= link_to "Search audit log", stafftools_audit_log_path(query: view.audit_query), class: "Link--inTextBlock" %>
        for release events
      </p>
    <% end %>
  </div>
</div>

<div class="boxed-group">
  <h3>Releases counts</h3>
  <div class="boxed-group-inner clearfix">
    <p>
      <div class="summary">
        <dl>
          <dt>All</dt>
          <dd><%= number_to_human view.repo_releases_count %></dd>
          <dt>Published</dt>
          <dd><%= number_to_human view.repo_releases_published_count %></dd>
          <dt>Draft</dt>
          <dd><%= number_to_human view.repo_releases_draft_count %></dd>
        </dl>
      </div>
    </p>
    <p>
      <%= form_tag gh_unpublish_unsearchable_releases_stafftools_repository_path(current_repository, :perform_validations => true), :method => 'post' do %>
        <%= render(Primer::Beta::Button.new(type: :submit, scheme: :secondary)) { "Unpublish unsearchable releases" } %>
      <% end %>
    </p>
    <p>
      <%= form_tag gh_unpublish_unsearchable_releases_stafftools_repository_path(current_repository, :perform_validations => false), :method => 'post' do %>
        <%= render(Primer::Beta::Button.new(type: :submit, scheme: :danger)) { "Unpublish unsearchable releases (skip validation)" } %>
      <% end %>
    </p>
  </div>
</div>

<div class="boxed-group">
  <h3>Releases</h3>
  <div class="boxed-group-inner">
    <% if view.repo_releases.any? %>
      <ul class="boxed-group-list">
        <% view.repo_releases.each do |release| %>
          <li class="stafftools-auditlog">
          <% if release.is_searchable? %>
            <%= primer_octicon("eye", :height => 32, :alt => "Searchable") %>
          <% else %>
            <%= primer_octicon("eye-closed", :height => 32, :alt => "Unsearchable") %>
          <% end %>
            <div class='js-details-container Details audit-log-entry'>
              <% if release.published? %>
                <%= time_ago_in_words_js release.published_at %>
              <% else %>
                <span class="time">Draft</span>
              <% end %>
              <strong class='audit-log-title'>
                <%= release.name %>
              </strong>
              <p>
                Created by
                <%= link_to release.author, stafftools_user_path(release.author) %>
              </p>
              <p>
                <%= pluralize release.release_assets.size, "binary asset" %>
                <span class="hidden-text-expander inline"><button type="button" aria-expanded="false" class="ellipsis-expander js-details-target">&hellip;</button></span>
              </p>
              <div class="log-more-info">
                <table>
                  <% release.attributes.each do |key, value| %>
                    <tr>
                      <th><%= key %></th>
                      <td>
                        <% if value.nil? %>
                          <em>nil</em>
                        <% else %>
                          <% if value.instance_of? String %>
                            <%= scrubbed_utf8(value) %>
                          <% else %>
                            <%= value %>
                          <% end %>
                        <% end %>
                      </td>
                    </tr>
                  <% end %>
                </table>
                <% if release.release_assets.any? %>
                  <h3>Binaries</h3>
                  <table>
                    <tr>
                      <th></th>
                      <th>File</th>
                      <th>Size</th>
                      <th>Type</th>
                      <th>Uploader</th>
                      <th>Downloads</th>
                    </tr>
                    <% release.release_assets.each do |asset| %>
                      <tr>
                        <td>
                          <% if asset.uploaded? %>
                            <%= render Primer::Beta::Octicon.new(icon: "check", aria: { label: "Upload completed"}) %>
                          <% else %>
                            <%= render Primer::Beta::Octicon.new(icon: "circle-slash", color: :danger, aria: { label: "Upload failed" }) %>
                          <% end %>
                        </td>
                        <td>
                          <%= link_to asset.display_name, asset.url(actor: asset.uploader) %>
                        </td>
                        <td><%= number_to_human_size asset.size %></td>
                        <td><%= asset.downloadable_content_type %></td>
                        <td>
                          <%= link_to asset.uploader, stafftools_user_path(asset.uploader) %>
                        </td>
                        <td><%= asset.downloads %></td>
                      </tr>
                    <% end %>
                  </table>
                <% end %>
              </div>
            </div>
          </li>
        <% end %>
      </ul>
    <% else %>
      <p>No releases</p>
    <% end %>
  </div>

  <div class="paginate-container">
    <%= will_paginate view.repo_releases %>
  </div>
</div>
