#!/usr/bin/env ruby
# frozen_string_literal: true
#/ Usage: verifiy-migration <migration file path>
#/ Verifies the migration is valid.
#/ Example
#/ ./bin/verify-migration db/migrate/20170107002545_add_project_fields_to_issue_event_details.rb

# Show usage
if ARGV.include?("--help") || ARGV.length < 1
  system "grep ^#/ '#{__FILE__}' |cut -c3-"
  exit 1
end

# Bring in the big environment
require_relative "../config/environment"

unless Rails.env.development?
  puts "This can only be run in the development environment!"
  exit 1
end

migration_path = ARGV.shift
migration_file = migration_path.split(File::SEPARATOR).last

# Running all migrations
puts "==> Migrating database"
printf `./bin/rake db:migrate db:test:prepare`

# Rollback the migration
printf `VERSION=#{migration_file} ./bin/rake db:migrate:down db:test:prepare`

# Redo the migration
# Note: Version is not required here, as only the previous `down` migration is left to migrate.
printf `./bin/rake db:migrate db:test:prepare`
