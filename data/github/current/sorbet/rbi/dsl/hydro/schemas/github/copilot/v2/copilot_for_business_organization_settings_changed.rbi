# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessOrganizationSettingsChanged`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessOrganizationSettingsChanged`.

class Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessOrganizationSettingsChanged
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      new_settings_value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings),
      old_settings_value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings),
      owner_details: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails)
    ).void
  end
  def initialize(actor: nil, new_settings_value: nil, old_settings_value: nil, owner_details: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_new_settings_value; end

  sig { void }
  def clear_old_settings_value; end

  sig { void }
  def clear_owner_details; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings)) }
  def new_settings_value; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings)
    ).void
  end
  def new_settings_value=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings)) }
  def old_settings_value; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOrganizationSettings)
    ).void
  end
  def old_settings_value=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails)) }
  def owner_details; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails)).void }
  def owner_details=(value); end
end
