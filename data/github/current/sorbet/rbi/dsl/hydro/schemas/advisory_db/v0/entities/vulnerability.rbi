# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::AdvisoryDb::V0::Entities::Vulnerability`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::AdvisoryDb::V0::Entities::Vulnerability`.

class Hydro::Schemas::AdvisoryDb::V0::Entities::Vulnerability
  sig do
    params(
      affected_functions: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      affected_functions_json: T.nilable(String),
      first_patched_version: T.nilable(String),
      package_ecosystem: T.nilable(T.any(Symbol, Integer)),
      package_name: T.nilable(String),
      vulnerable_version_range: T.nilable(String)
    ).void
  end
  def initialize(affected_functions: T.unsafe(nil), affected_functions_json: nil, first_patched_version: nil, package_ecosystem: nil, package_name: nil, vulnerable_version_range: nil); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def affected_functions; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def affected_functions=(value); end

  sig { returns(String) }
  def affected_functions_json; end

  sig { params(value: String).void }
  def affected_functions_json=(value); end

  sig { void }
  def clear_affected_functions; end

  sig { void }
  def clear_affected_functions_json; end

  sig { void }
  def clear_first_patched_version; end

  sig { void }
  def clear_package_ecosystem; end

  sig { void }
  def clear_package_name; end

  sig { void }
  def clear_vulnerable_version_range; end

  sig { returns(String) }
  def first_patched_version; end

  sig { params(value: String).void }
  def first_patched_version=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def package_ecosystem; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def package_ecosystem=(value); end

  sig { returns(String) }
  def package_name; end

  sig { params(value: String).void }
  def package_name=(value); end

  sig { returns(String) }
  def vulnerable_version_range; end

  sig { params(value: String).void }
  def vulnerable_version_range=(value); end
end
