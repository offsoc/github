env KUBE_POD_NAME;
worker_processes 6;
pid /nginx-pidfile/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    include /etc/nginx/logging.conf;
    include /etc/nginx/gzip.conf;

    default_type application/octet-stream;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    keepalive_disable msie6;

    # X-Real-IP is set by haproxy so we should be able to trust it
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Real-IP;

    upstream unicorn {
        server unix:/sockets/unicorn.sock fail_timeout=0;
    }

    map $uri $gh_error_page_502 {
        default     /502.json;
        /graphql    /502-graphql.json;
    }

    server{
        listen 8081;
        location /stats {
            stub_status;
        }

        location /status {
            return 200;
        }
    }

    server {
        listen 80 default_server;
        include /etc/nginx/large_file_uploads.conf;
        include /etc/nginx/error_pages.conf;
        include /etc/nginx/github_prod.conf;
        include /etc/nginx/fallback.conf;

        root /assets/public;

        location / {
            include /etc/nginx/proxy.conf;
            set_by_lua $KUBE_POD_NAME 'ngx.header["X-GLB-Log-Append"] = (ngx.header["X-GLB-Log-Append"] or "") .. " kube_pod_name=\\"" .. os.getenv("KUBE_POD_NAME") .. "\\""';
            add_header Vary "Accept-Encoding, Accept, X-Requested-With" always;
            add_header X-GitHub-Backend Kubernetes always;

            if (!-f $request_filename) {
            proxy_pass http://unicorn;
            }
        }

        location /robots.txt {
            alias /assets/public/api_robots.txt;
        }

        location /502-graphql.json {
            sub_filter "###REQUEST_ID###" "$http_x_github_request_id";
            sub_filter_types application/json;
            add_header Access-Control-Expose-Headers "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset" always;
            add_header Access-Control-Allow-Origin "*" always;
            add_header Vary "Accept-Encoding, Accept, X-Requested-With" always;
            add_header X-GitHub-Backend Kubernetes always;
        }
    }
}
