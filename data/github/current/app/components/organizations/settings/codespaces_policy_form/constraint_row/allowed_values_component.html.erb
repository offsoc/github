<%= render Primer::Box.new(display: :flex, p: 3, align_items: :center, justify_content: :space_between) do %>
  <div class="d-flex flex-column flex-lg-row">
    <%= render Primer::Box.new(pr: 2) do %>
      <%= render Primer::Beta::Octicon.new(:"codespaces", color: :muted) %>
      <%= render Primer::Beta::Text.new(pl: 2, font_weight: :bold).with_content(constraint[:display_name]) %>
    <% end %>
    <%= render Primer::Box.new do %>
      <%= render Primer::Beta::Text.new(
        color: :muted,
        hidden: existing_policy_has_allowed_values_stored?,
        data: { target: "codespaces-policy-form.noSelectedAllowedValuesTextFor#{data_key_name}" }
      ).with_content("None") %>
      <%= render Primer::Beta::Text.new(
        color: :muted,
        data: { target: "codespaces-policy-form.selectedAllowedValuesTextFor#{data_key_name}" }
      ).with_content(existing_allowed_values_text) %>
    <% end %>
  </div>
  <%= render Primer::Box.new(display: :flex, justify_content: :space_between, align_items: :center) do %>
    <%= render Primer::Alpha::Dropdown.new(display: :inline) do |c| %>
      <% c.with_button(scheme: :invisible, p: 2, mr: 2, classes: "codespaces-policy-form-blue-hover") do %>
        <%= render(Primer::Beta::Octicon.new(icon: :pencil, "aria-label": "Edit policy", m: 0)) %>
      <% end %>
      <% c.with_menu(header: "Allowed values", direction: :sw, mt: 2, mr: 1, py: 3, px: 2, style: "width: 280px;") do |menu| %>
        <% constraint[:allowable_values].each_with_index do |value, index| %>
          <% menu.with_item(classes: "codespaces-policy-constraint-menu-item-muted-hover", border_radius: 2) do %>
            <div class="form-checkbox m-0">
              <label>
                <%= check_box_tag(
                  # Name
                  "allowable_value_#{value.name}",
                  # Value
                  value.name,
                  # Checked
                  existing_policy.present? ? existing_policy_has_selected_value?(value) : true,
                  # Options
                  data: {
                    action: "click:codespaces-policy-form#selectAllowableValueForConstraint",
                    targets: "codespaces-policy-form.constraintAllowableValueCheckboxesFor#{data_key_name}",
                    constraint_name: constraint[:name]
                  }
                ) %>
                <span class="text-emphasized text-small"><%= value.display_name %></span>
                <% if value.display_description %>
                  <span class="text-light text-small"><%= value.display_description %></span>
                <% end %>
              </label>
            </div>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <%= render Organizations::Settings::CodespacesPolicyForm::ConstraintRow::DeleteButtonComponent.new(constraint_name: constraint[:name]) %>
  <% end %>
<% end %>
