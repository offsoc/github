### What are you trying to accomplish?

This is part of an effort to migrate away from the rule-level disable system that we've implemented in ERBLint to the native disable system that the latest ERBLint version offers.

For context, ERBlint hasn’t natively supported inline offense disables. GitHub has relied on an in-house system to support inline disable as a workaround at the rule-level. However, we recently were able to get inline disable support natively into ERBLint so we’ll be migrating all our rules to use that ([tracking issue](https://github.com/github/accessibility/issues/3220))!

### Anything you want to highlight for special attention from reviewers?

⚠️ Please verify that the inline disable that was auto-inserted using a script is not malformed.

### If something goes wrong, what are the mitigation strategies?

<!-- Common deployment risk mitigation strategies are listed below. Delete all those that don't apply. Describe your plans if they don't fit into any of these buckets. https://thehub.github.com/engineering/products-and-services/dotcom/pr-risk-and-rollout-review/#evaluate-the-pr-for-the-level-of-risk-it-presents details the expectations for rollout/rollback contingency planning. -->

* **Rollback** - Change can only be disabled by [rolling back](https://ops.githubapp.com/docs/playbooks/github_deployments.md) the merge group, or by deploying a revert commit.
