# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::TradeScreening::V0::Entities::EisMessage`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::TradeScreening::V0::Entities::EisMessage`.

class Hydro::Schemas::Github::TradeScreening::V0::Entities::EisMessage
  sig do
    params(
      alert_id: T.nilable(String),
      date: T.nilable(Google::Protobuf::Timestamp),
      eid: T.nilable(String),
      external_user_id: T.nilable(String),
      request_id: T.nilable(String),
      result: T.nilable(String),
      result_description: T.nilable(String),
      type: T.nilable(String)
    ).void
  end
  def initialize(alert_id: nil, date: nil, eid: nil, external_user_id: nil, request_id: nil, result: nil, result_description: nil, type: nil); end

  sig { returns(String) }
  def alert_id; end

  sig { params(value: String).void }
  def alert_id=(value); end

  sig { void }
  def clear_alert_id; end

  sig { void }
  def clear_date; end

  sig { void }
  def clear_eid; end

  sig { void }
  def clear_external_user_id; end

  sig { void }
  def clear_request_id; end

  sig { void }
  def clear_result; end

  sig { void }
  def clear_result_description; end

  sig { void }
  def clear_type; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def date=(value); end

  sig { returns(String) }
  def eid; end

  sig { params(value: String).void }
  def eid=(value); end

  sig { returns(String) }
  def external_user_id; end

  sig { params(value: String).void }
  def external_user_id=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end

  sig { returns(String) }
  def result; end

  sig { params(value: String).void }
  def result=(value); end

  sig { returns(String) }
  def result_description; end

  sig { params(value: String).void }
  def result_description=(value); end

  sig { returns(String) }
  def type; end

  sig { params(value: String).void }
  def type=(value); end
end
