# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GroupSyncer::V1::RegisterTenantRequest`.
# Please instead update this file by running `bin/tapioca dsl GroupSyncer::V1::RegisterTenantRequest`.

class GroupSyncer::V1::RegisterTenantRequest
  sig do
    params(
      external_provider_id: T.nilable(String),
      external_provider_type: T.nilable(T.any(Symbol, Integer)),
      org_id: T.nilable(String),
      status: T.nilable(T.any(Symbol, Integer)),
      token: T.nilable(String),
      url: T.nilable(String)
    ).void
  end
  def initialize(external_provider_id: nil, external_provider_type: nil, org_id: nil, status: nil, token: nil, url: nil); end

  sig { void }
  def clear_external_provider_id; end

  sig { void }
  def clear_external_provider_type; end

  sig { void }
  def clear_org_id; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_token; end

  sig { void }
  def clear_url; end

  sig { returns(String) }
  def external_provider_id; end

  sig { params(value: String).void }
  def external_provider_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def external_provider_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def external_provider_type=(value); end

  sig { returns(String) }
  def org_id; end

  sig { params(value: String).void }
  def org_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(String) }
  def token; end

  sig { params(value: String).void }
  def token=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end
end
