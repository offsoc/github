# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::Analysis`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::Analysis`.

class Turboscan::Proto::Analysis
  sig do
    params(
      analysis_key: T.nilable(String),
      build_started_at: T.nilable(Google::Protobuf::Timestamp),
      category: T.nilable(String),
      commit_oid: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      deletable: T.nilable(T::Boolean),
      delivery_origin: T.nilable(T.any(Symbol, Integer)),
      environment: T.nilable(String),
      errors: T.nilable(String),
      id: T.nilable(Integer),
      is_outdated: T.nilable(T::Boolean),
      most_recent: T.nilable(T::Boolean),
      process_warning: T.nilable(String),
      ref_name_bytes: T.nilable(String),
      results_count: T.nilable(Integer),
      rules_count: T.nilable(Integer),
      sarif_id: T.nilable(String),
      status: T.nilable(T.any(Symbol, Integer)),
      tool_description: T.nilable(Turboscan::Proto::ToolDescription),
      upload_started_at: T.nilable(Google::Protobuf::Timestamp),
      workflow_path: T.nilable(String),
      workflow_run_id: T.nilable(Integer)
    ).void
  end
  def initialize(analysis_key: nil, build_started_at: nil, category: nil, commit_oid: nil, created_at: nil, deletable: nil, delivery_origin: nil, environment: nil, errors: nil, id: nil, is_outdated: nil, most_recent: nil, process_warning: nil, ref_name_bytes: nil, results_count: nil, rules_count: nil, sarif_id: nil, status: nil, tool_description: nil, upload_started_at: nil, workflow_path: nil, workflow_run_id: nil); end

  sig { returns(String) }
  def analysis_key; end

  sig { params(value: String).void }
  def analysis_key=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def build_started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def build_started_at=(value); end

  sig { returns(String) }
  def category; end

  sig { params(value: String).void }
  def category=(value); end

  sig { void }
  def clear_analysis_key; end

  sig { void }
  def clear_build_started_at; end

  sig { void }
  def clear_category; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_deletable; end

  sig { void }
  def clear_delivery_origin; end

  sig { void }
  def clear_environment; end

  sig { void }
  def clear_errors; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_outdated; end

  sig { void }
  def clear_most_recent; end

  sig { void }
  def clear_process_warning; end

  sig { void }
  def clear_ref_name_bytes; end

  sig { void }
  def clear_results_count; end

  sig { void }
  def clear_rules_count; end

  sig { void }
  def clear_sarif_id; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_tool_description; end

  sig { void }
  def clear_upload_started_at; end

  sig { void }
  def clear_workflow_path; end

  sig { void }
  def clear_workflow_run_id; end

  sig { returns(String) }
  def commit_oid; end

  sig { params(value: String).void }
  def commit_oid=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T::Boolean) }
  def deletable; end

  sig { params(value: T::Boolean).void }
  def deletable=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def delivery_origin; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def delivery_origin=(value); end

  sig { returns(String) }
  def environment; end

  sig { params(value: String).void }
  def environment=(value); end

  sig { returns(String) }
  def errors; end

  sig { params(value: String).void }
  def errors=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_outdated; end

  sig { params(value: T::Boolean).void }
  def is_outdated=(value); end

  sig { returns(T::Boolean) }
  def most_recent; end

  sig { params(value: T::Boolean).void }
  def most_recent=(value); end

  sig { returns(String) }
  def process_warning; end

  sig { params(value: String).void }
  def process_warning=(value); end

  sig { returns(String) }
  def ref_name_bytes; end

  sig { params(value: String).void }
  def ref_name_bytes=(value); end

  sig { returns(Integer) }
  def results_count; end

  sig { params(value: Integer).void }
  def results_count=(value); end

  sig { returns(Integer) }
  def rules_count; end

  sig { params(value: Integer).void }
  def rules_count=(value); end

  sig { returns(String) }
  def sarif_id; end

  sig { params(value: String).void }
  def sarif_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(T.nilable(Turboscan::Proto::ToolDescription)) }
  def tool_description; end

  sig { params(value: T.nilable(Turboscan::Proto::ToolDescription)).void }
  def tool_description=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def upload_started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def upload_started_at=(value); end

  sig { returns(String) }
  def workflow_path; end

  sig { params(value: String).void }
  def workflow_path=(value); end

  sig { returns(Integer) }
  def workflow_run_id; end

  sig { params(value: Integer).void }
  def workflow_run_id=(value); end
end
