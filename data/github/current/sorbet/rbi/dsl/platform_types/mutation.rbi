# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Mutation`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Mutation`.

class PlatformTypes::Mutation < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(PlatformTypes::AbortQueuedMigrationsPayload)) }
  def abort_queued_migrations; end

  sig { returns(T::Boolean) }
  def abort_queued_migrations?; end

  sig { returns(T.nilable(PlatformTypes::AbortRepositoryMigrationPayload)) }
  def abort_repository_migration; end

  sig { returns(T::Boolean) }
  def abort_repository_migration?; end

  sig { returns(T.nilable(PlatformTypes::AcceptEnterpriseAdministratorInvitationPayload)) }
  def accept_enterprise_administrator_invitation; end

  sig { returns(T::Boolean) }
  def accept_enterprise_administrator_invitation?; end

  sig { returns(T.nilable(PlatformTypes::AcceptEnterpriseMemberInvitationPayload)) }
  def accept_enterprise_member_invitation; end

  sig { returns(T::Boolean) }
  def accept_enterprise_member_invitation?; end

  sig { returns(T.nilable(PlatformTypes::AcceptEnterpriseOrganizationInvitationPayload)) }
  def accept_enterprise_organization_invitation; end

  sig { returns(T::Boolean) }
  def accept_enterprise_organization_invitation?; end

  sig { returns(T.nilable(PlatformTypes::AcceptTopicSuggestionPayload)) }
  def accept_topic_suggestion; end

  sig { returns(T::Boolean) }
  def accept_topic_suggestion?; end

  sig { returns(T.nilable(PlatformTypes::AddAssigneesToAssignablePayload)) }
  def add_assignees_to_assignable; end

  sig { returns(T::Boolean) }
  def add_assignees_to_assignable?; end

  sig { returns(T.nilable(PlatformTypes::AddCommentPayload)) }
  def add_comment; end

  sig { returns(T::Boolean) }
  def add_comment?; end

  sig { returns(T.nilable(PlatformTypes::AddDiscussionCommentPayload)) }
  def add_discussion_comment; end

  sig { returns(T::Boolean) }
  def add_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::AddDiscussionPollVotePayload)) }
  def add_discussion_poll_vote; end

  sig { returns(T::Boolean) }
  def add_discussion_poll_vote?; end

  sig { returns(T.nilable(PlatformTypes::AddEnterpriseAdminPayload)) }
  def add_enterprise_admin; end

  sig { returns(T::Boolean) }
  def add_enterprise_admin?; end

  sig { returns(T.nilable(PlatformTypes::AddEnterpriseOrganizationMemberPayload)) }
  def add_enterprise_organization_member; end

  sig { returns(T::Boolean) }
  def add_enterprise_organization_member?; end

  sig { returns(T.nilable(PlatformTypes::AddEnterpriseSupportEntitlementPayload)) }
  def add_enterprise_support_entitlement; end

  sig { returns(T::Boolean) }
  def add_enterprise_support_entitlement?; end

  sig { returns(T.nilable(PlatformTypes::AddImportMappingPayload)) }
  def add_import_mapping; end

  sig { returns(T::Boolean) }
  def add_import_mapping?; end

  sig { returns(T.nilable(PlatformTypes::AddLabelsToLabelablePayload)) }
  def add_labels_to_labelable; end

  sig { returns(T::Boolean) }
  def add_labels_to_labelable?; end

  sig { returns(T.nilable(PlatformTypes::AddMobileDevicePublicKeyPayload)) }
  def add_mobile_device_public_key; end

  sig { returns(T::Boolean) }
  def add_mobile_device_public_key?; end

  sig { returns(T.nilable(PlatformTypes::AddMobileDeviceTokenPayload)) }
  def add_mobile_device_token; end

  sig { returns(T::Boolean) }
  def add_mobile_device_token?; end

  sig { returns(T.nilable(PlatformTypes::AddOrCreateLabelsToLabelablePayload)) }
  def add_or_create_labels_to_labelable; end

  sig { returns(T::Boolean) }
  def add_or_create_labels_to_labelable?; end

  sig { returns(T.nilable(PlatformTypes::AddPackageTagPayload)) }
  def add_package_tag; end

  sig { returns(T::Boolean) }
  def add_package_tag?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectCardPayload)) }
  def add_project_card; end

  sig { returns(T::Boolean) }
  def add_project_card?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectCollaboratorPayload)) }
  def add_project_collaborator; end

  sig { returns(T::Boolean) }
  def add_project_collaborator?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectColumnPayload)) }
  def add_project_column; end

  sig { returns(T::Boolean) }
  def add_project_column?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectDraftIssuePayload)) }
  def add_project_draft_issue; end

  sig { returns(T::Boolean) }
  def add_project_draft_issue?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectNextItemPayload)) }
  def add_project_next_item; end

  sig { returns(T::Boolean) }
  def add_project_next_item?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectV2DraftIssuePayload)) }
  def add_project_v2_draft_issue; end

  sig { returns(T::Boolean) }
  def add_project_v2_draft_issue?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectV2ItemByIdPayload)) }
  def add_project_v2_item_by_id; end

  sig { returns(T::Boolean) }
  def add_project_v2_item_by_id?; end

  sig { returns(T.nilable(PlatformTypes::AddProjectWorkflowPayload)) }
  def add_project_workflow; end

  sig { returns(T::Boolean) }
  def add_project_workflow?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestReviewPayload)) }
  def add_pull_request_review; end

  sig { returns(T::Boolean) }
  def add_pull_request_review?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestReviewCommentPayload)) }
  def add_pull_request_review_comment; end

  sig { returns(T::Boolean) }
  def add_pull_request_review_comment?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestReviewThreadPayload)) }
  def add_pull_request_review_thread; end

  sig { returns(T::Boolean) }
  def add_pull_request_review_thread?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestReviewThreadReplyPayload)) }
  def add_pull_request_review_thread_reply; end

  sig { returns(T::Boolean) }
  def add_pull_request_review_thread_reply?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestThreadReplyPayload)) }
  def add_pull_request_thread_reply; end

  sig { returns(T::Boolean) }
  def add_pull_request_thread_reply?; end

  sig { returns(T.nilable(PlatformTypes::AddPullRequestToMergeQueuePayload)) }
  def add_pull_request_to_merge_queue; end

  sig { returns(T::Boolean) }
  def add_pull_request_to_merge_queue?; end

  sig { returns(T.nilable(PlatformTypes::AddReactionPayload)) }
  def add_reaction; end

  sig { returns(T::Boolean) }
  def add_reaction?; end

  sig { returns(T.nilable(PlatformTypes::AddStaffNotePayload)) }
  def add_staff_note; end

  sig { returns(T::Boolean) }
  def add_staff_note?; end

  sig { returns(T.nilable(PlatformTypes::AddStarPayload)) }
  def add_star; end

  sig { returns(T::Boolean) }
  def add_star?; end

  sig { returns(T.nilable(PlatformTypes::AddSubIssuePayload)) }
  def add_sub_issue; end

  sig { returns(T::Boolean) }
  def add_sub_issue?; end

  sig { returns(T.nilable(PlatformTypes::AddTeamMemberPayload)) }
  def add_team_member; end

  sig { returns(T::Boolean) }
  def add_team_member?; end

  sig { returns(T.nilable(PlatformTypes::AddTeamProjectPayload)) }
  def add_team_project; end

  sig { returns(T::Boolean) }
  def add_team_project?; end

  sig { returns(T.nilable(PlatformTypes::AddUpvotePayload)) }
  def add_upvote; end

  sig { returns(T::Boolean) }
  def add_upvote?; end

  sig { returns(T.nilable(PlatformTypes::AddVerifiableDomainPayload)) }
  def add_verifiable_domain; end

  sig { returns(T::Boolean) }
  def add_verifiable_domain?; end

  sig { returns(T.nilable(PlatformTypes::ApplyContentWarningsPayload)) }
  def apply_content_warnings; end

  sig { returns(T::Boolean) }
  def apply_content_warnings?; end

  sig { returns(T.nilable(PlatformTypes::ApplyMobileSuggestedChangesPayload)) }
  def apply_mobile_suggested_changes; end

  sig { returns(T::Boolean) }
  def apply_mobile_suggested_changes?; end

  sig { returns(T.nilable(PlatformTypes::ApplySuggestedChangesPayload)) }
  def apply_suggested_changes; end

  sig { returns(T::Boolean) }
  def apply_suggested_changes?; end

  sig { returns(T.nilable(PlatformTypes::ApproveActionRequiredWorkflowRunsPayload)) }
  def approve_action_required_workflow_runs; end

  sig { returns(T::Boolean) }
  def approve_action_required_workflow_runs?; end

  sig { returns(T.nilable(PlatformTypes::ApproveDeploymentsPayload)) }
  def approve_deployments; end

  sig { returns(T::Boolean) }
  def approve_deployments?; end

  sig { returns(T.nilable(PlatformTypes::ApproveMobileAuthDeviceRequestPayload)) }
  def approve_mobile_auth_device_request; end

  sig { returns(T::Boolean) }
  def approve_mobile_auth_device_request?; end

  sig { returns(T.nilable(PlatformTypes::ApprovePendingTeamChangeParentRequestPayload)) }
  def approve_pending_team_change_parent_request; end

  sig { returns(T::Boolean) }
  def approve_pending_team_change_parent_request?; end

  sig { returns(T.nilable(PlatformTypes::ApproveVerifiableDomainPayload)) }
  def approve_verifiable_domain; end

  sig { returns(T::Boolean) }
  def approve_verifiable_domain?; end

  sig { returns(T.nilable(PlatformTypes::ArchiveProjectCardPayload)) }
  def archive_project_card; end

  sig { returns(T::Boolean) }
  def archive_project_card?; end

  sig { returns(T.nilable(PlatformTypes::ArchiveProjectV2ItemPayload)) }
  def archive_project_v2_item; end

  sig { returns(T::Boolean) }
  def archive_project_v2_item?; end

  sig { returns(T.nilable(PlatformTypes::ArchiveRepositoryPayload)) }
  def archive_repository; end

  sig { returns(T::Boolean) }
  def archive_repository?; end

  sig { returns(T.nilable(PlatformTypes::BlockAccountsActionInvocationPayload)) }
  def block_accounts_action_invocation; end

  sig { returns(T::Boolean) }
  def block_accounts_action_invocation?; end

  sig { returns(T.nilable(PlatformTypes::BlockActionsPayload)) }
  def block_actions; end

  sig { returns(T::Boolean) }
  def block_actions?; end

  sig { returns(T.nilable(PlatformTypes::BlockCopilotPayload)) }
  def block_copilot; end

  sig { returns(T::Boolean) }
  def block_copilot?; end

  sig { returns(T.nilable(PlatformTypes::BlockPaymentMethodAndSuspendUsersByCardFingerprintPayload)) }
  def block_payment_method_and_suspend_users_by_card_fingerprint; end

  sig { returns(T::Boolean) }
  def block_payment_method_and_suspend_users_by_card_fingerprint?; end

  sig { returns(T.nilable(PlatformTypes::BlockUserPayload)) }
  def block_user; end

  sig { returns(T::Boolean) }
  def block_user?; end

  sig { returns(T.nilable(PlatformTypes::BlockUserFromOrganizationPayload)) }
  def block_user_from_organization; end

  sig { returns(T::Boolean) }
  def block_user_from_organization?; end

  sig { returns(T.nilable(PlatformTypes::CancelEnterpriseAdminInvitationPayload)) }
  def cancel_enterprise_admin_invitation; end

  sig { returns(T::Boolean) }
  def cancel_enterprise_admin_invitation?; end

  sig { returns(T.nilable(PlatformTypes::CancelEnterpriseMemberInvitationPayload)) }
  def cancel_enterprise_member_invitation; end

  sig { returns(T::Boolean) }
  def cancel_enterprise_member_invitation?; end

  sig { returns(T.nilable(PlatformTypes::CancelEnterpriseOrganizationInvitationPayload)) }
  def cancel_enterprise_organization_invitation; end

  sig { returns(T::Boolean) }
  def cancel_enterprise_organization_invitation?; end

  sig { returns(T.nilable(PlatformTypes::CancelPendingTeamChangeParentRequestPayload)) }
  def cancel_pending_team_change_parent_request; end

  sig { returns(T::Boolean) }
  def cancel_pending_team_change_parent_request?; end

  sig { returns(T.nilable(PlatformTypes::CancelSponsorshipPayload)) }
  def cancel_sponsorship; end

  sig { returns(T::Boolean) }
  def cancel_sponsorship?; end

  sig { returns(T.nilable(PlatformTypes::CancelWorkflowRunPayload)) }
  def cancel_workflow_run; end

  sig { returns(T::Boolean) }
  def cancel_workflow_run?; end

  sig { returns(T.nilable(PlatformTypes::ChangeUserStatusPayload)) }
  def change_user_status; end

  sig { returns(T::Boolean) }
  def change_user_status?; end

  sig { returns(T.nilable(PlatformTypes::ClassifyAccountsAsHammyPayload)) }
  def classify_accounts_as_hammy; end

  sig { returns(T::Boolean) }
  def classify_accounts_as_hammy?; end

  sig { returns(T.nilable(PlatformTypes::ClassifyAccountsAsSpammyPayload)) }
  def classify_accounts_as_spammy; end

  sig { returns(T::Boolean) }
  def classify_accounts_as_spammy?; end

  sig { returns(T.nilable(PlatformTypes::ClearAccountClassificationsPayload)) }
  def clear_account_classifications; end

  sig { returns(T::Boolean) }
  def clear_account_classifications?; end

  sig { returns(T.nilable(PlatformTypes::ClearLabelsFromLabelablePayload)) }
  def clear_labels_from_labelable; end

  sig { returns(T::Boolean) }
  def clear_labels_from_labelable?; end

  sig { returns(T.nilable(PlatformTypes::ClearProjectV2ItemFieldValuePayload)) }
  def clear_project_v2_item_field_value; end

  sig { returns(T::Boolean) }
  def clear_project_v2_item_field_value?; end

  sig { returns(T.nilable(PlatformTypes::CloneProjectPayload)) }
  def clone_project; end

  sig { returns(T::Boolean) }
  def clone_project?; end

  sig { returns(T.nilable(PlatformTypes::CloneTemplateRepositoryPayload)) }
  def clone_template_repository; end

  sig { returns(T::Boolean) }
  def clone_template_repository?; end

  sig { returns(T.nilable(PlatformTypes::CloseDiscussionPayload)) }
  def close_discussion; end

  sig { returns(T::Boolean) }
  def close_discussion?; end

  sig { returns(T.nilable(PlatformTypes::CloseIssuePayload)) }
  def close_issue; end

  sig { returns(T::Boolean) }
  def close_issue?; end

  sig { returns(T.nilable(PlatformTypes::ClosePullRequestPayload)) }
  def close_pull_request; end

  sig { returns(T::Boolean) }
  def close_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::CompleteEnterpriseOrganizationInvitationPayload)) }
  def complete_enterprise_organization_invitation; end

  sig { returns(T::Boolean) }
  def complete_enterprise_organization_invitation?; end

  sig { returns(T.nilable(PlatformTypes::ConfirmEnterpriseOrganizationInvitationPayload)) }
  def confirm_enterprise_organization_invitation; end

  sig { returns(T::Boolean) }
  def confirm_enterprise_organization_invitation?; end

  sig { returns(T.nilable(PlatformTypes::ConvertIssueToDiscussionPayload)) }
  def convert_issue_to_discussion; end

  sig { returns(T::Boolean) }
  def convert_issue_to_discussion?; end

  sig { returns(T.nilable(PlatformTypes::ConvertProjectCardNoteToIssuePayload)) }
  def convert_project_card_note_to_issue; end

  sig { returns(T::Boolean) }
  def convert_project_card_note_to_issue?; end

  sig { returns(T.nilable(PlatformTypes::ConvertProjectV2DraftIssueItemToIssuePayload)) }
  def convert_project_v2_draft_issue_item_to_issue; end

  sig { returns(T::Boolean) }
  def convert_project_v2_draft_issue_item_to_issue?; end

  sig { returns(T.nilable(PlatformTypes::ConvertPullRequestToDraftPayload)) }
  def convert_pull_request_to_draft; end

  sig { returns(T::Boolean) }
  def convert_pull_request_to_draft?; end

  sig { returns(T.nilable(PlatformTypes::CopyProjectV2Payload)) }
  def copy_project_v2; end

  sig { returns(T::Boolean) }
  def copy_project_v2?; end

  sig { returns(T.nilable(PlatformTypes::CreateAppleIapSubscriptionsPayload)) }
  def create_apple_iap_subscriptions; end

  sig { returns(T::Boolean) }
  def create_apple_iap_subscriptions?; end

  sig { returns(T.nilable(PlatformTypes::CreateAttributionInvitationPayload)) }
  def create_attribution_invitation; end

  sig { returns(T::Boolean) }
  def create_attribution_invitation?; end

  sig { returns(T.nilable(PlatformTypes::CreateBranchProtectionRulePayload)) }
  def create_branch_protection_rule; end

  sig { returns(T::Boolean) }
  def create_branch_protection_rule?; end

  sig { returns(T.nilable(PlatformTypes::CreateCheckRunPayload)) }
  def create_check_run; end

  sig { returns(T::Boolean) }
  def create_check_run?; end

  sig { returns(T.nilable(PlatformTypes::CreateCheckSuitePayload)) }
  def create_check_suite; end

  sig { returns(T::Boolean) }
  def create_check_suite?; end

  sig { returns(T.nilable(PlatformTypes::CreateCommitOnBranchPayload)) }
  def create_commit_on_branch; end

  sig { returns(T::Boolean) }
  def create_commit_on_branch?; end

  sig { returns(T.nilable(PlatformTypes::CreateCompletedWorkflowLogsAccessPayload)) }
  def create_completed_workflow_logs_access; end

  sig { returns(T::Boolean) }
  def create_completed_workflow_logs_access?; end

  sig { returns(T.nilable(PlatformTypes::CreateDashboardSearchShortcutPayload)) }
  def create_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def create_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::CreateDeploymentPayload)) }
  def create_deployment; end

  sig { returns(T::Boolean) }
  def create_deployment?; end

  sig { returns(T.nilable(PlatformTypes::CreateDeploymentStatusPayload)) }
  def create_deployment_status; end

  sig { returns(T::Boolean) }
  def create_deployment_status?; end

  sig { returns(T.nilable(PlatformTypes::CreateDiscussionPayload)) }
  def create_discussion; end

  sig { returns(T::Boolean) }
  def create_discussion?; end

  sig { returns(T.nilable(PlatformTypes::CreateEnterpriseOrganizationPayload)) }
  def create_enterprise_organization; end

  sig { returns(T::Boolean) }
  def create_enterprise_organization?; end

  sig { returns(T.nilable(PlatformTypes::CreateEnvironmentPayload)) }
  def create_environment; end

  sig { returns(T::Boolean) }
  def create_environment?; end

  sig { returns(T.nilable(PlatformTypes::CreateGateRequestPayload)) }
  def create_gate_request; end

  sig { returns(T::Boolean) }
  def create_gate_request?; end

  sig { returns(T.nilable(PlatformTypes::CreateGoogleIapSubscriptionPayload)) }
  def create_google_iap_subscription; end

  sig { returns(T::Boolean) }
  def create_google_iap_subscription?; end

  sig { returns(T.nilable(PlatformTypes::CreateIntegrationCategoryPayload)) }
  def create_integration_category; end

  sig { returns(T::Boolean) }
  def create_integration_category?; end

  sig { returns(T.nilable(PlatformTypes::CreateIpAllowListEntryPayload)) }
  def create_ip_allow_list_entry; end

  sig { returns(T::Boolean) }
  def create_ip_allow_list_entry?; end

  sig { returns(T.nilable(PlatformTypes::CreateIssuePayload)) }
  def create_issue; end

  sig { returns(T::Boolean) }
  def create_issue?; end

  sig { returns(T.nilable(PlatformTypes::CreateIssueTypePayload)) }
  def create_issue_type; end

  sig { returns(T::Boolean) }
  def create_issue_type?; end

  sig { returns(T.nilable(PlatformTypes::CreateLabelPayload)) }
  def create_label; end

  sig { returns(T::Boolean) }
  def create_label?; end

  sig { returns(T.nilable(PlatformTypes::CreateLinkedBranchPayload)) }
  def create_linked_branch; end

  sig { returns(T::Boolean) }
  def create_linked_branch?; end

  sig { returns(T.nilable(PlatformTypes::CreateMarketplaceListingPlanPayload)) }
  def create_marketplace_listing_plan; end

  sig { returns(T::Boolean) }
  def create_marketplace_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::CreateMigrationSourcePayload)) }
  def create_migration_source; end

  sig { returns(T::Boolean) }
  def create_migration_source?; end

  sig { returns(T.nilable(PlatformTypes::CreateMobilePushNotificationSchedulesPayload)) }
  def create_mobile_push_notification_schedules; end

  sig { returns(T::Boolean) }
  def create_mobile_push_notification_schedules?; end

  sig { returns(T.nilable(PlatformTypes::CreateMobileSubscriptionPayload)) }
  def create_mobile_subscription; end

  sig { returns(T::Boolean) }
  def create_mobile_subscription?; end

  sig { returns(T.nilable(PlatformTypes::CreatePackageFilePayload)) }
  def create_package_file; end

  sig { returns(T::Boolean) }
  def create_package_file?; end

  sig { returns(T.nilable(PlatformTypes::CreatePackageVersionPayload)) }
  def create_package_version; end

  sig { returns(T::Boolean) }
  def create_package_version?; end

  sig { returns(T.nilable(PlatformTypes::CreatePackageVersionMetadataPayload)) }
  def create_package_version_metadata; end

  sig { returns(T::Boolean) }
  def create_package_version_metadata?; end

  sig { returns(T.nilable(PlatformTypes::CreateParentInitiatedTeamChangeParentRequestPayload)) }
  def create_parent_initiated_team_change_parent_request; end

  sig { returns(T::Boolean) }
  def create_parent_initiated_team_change_parent_request?; end

  sig { returns(T.nilable(PlatformTypes::CreateProjectPayload)) }
  def create_project; end

  sig { returns(T::Boolean) }
  def create_project?; end

  sig { returns(T.nilable(PlatformTypes::CreateProjectV2Payload)) }
  def create_project_v2; end

  sig { returns(T::Boolean) }
  def create_project_v2?; end

  sig { returns(T.nilable(PlatformTypes::CreateProjectV2FieldPayload)) }
  def create_project_v2_field; end

  sig { returns(T::Boolean) }
  def create_project_v2_field?; end

  sig { returns(T.nilable(PlatformTypes::CreateProjectV2StatusUpdatePayload)) }
  def create_project_v2_status_update; end

  sig { returns(T::Boolean) }
  def create_project_v2_status_update?; end

  sig { returns(T.nilable(PlatformTypes::CreatePullRequestPayload)) }
  def create_pull_request; end

  sig { returns(T::Boolean) }
  def create_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::CreateRefPayload)) }
  def create_ref; end

  sig { returns(T::Boolean) }
  def create_ref?; end

  sig { returns(T.nilable(PlatformTypes::CreateRepositoryPayload)) }
  def create_repository; end

  sig { returns(T::Boolean) }
  def create_repository?; end

  sig { returns(T.nilable(PlatformTypes::CreateRepositoryRulesetPayload)) }
  def create_repository_ruleset; end

  sig { returns(T::Boolean) }
  def create_repository_ruleset?; end

  sig { returns(T.nilable(PlatformTypes::CreateSavedCollectionPayload)) }
  def create_saved_collection; end

  sig { returns(T::Boolean) }
  def create_saved_collection?; end

  sig { returns(T.nilable(PlatformTypes::CreateSavedNotificationThreadPayload)) }
  def create_saved_notification_thread; end

  sig { returns(T::Boolean) }
  def create_saved_notification_thread?; end

  sig { returns(T.nilable(PlatformTypes::CreateSavedViewPayload)) }
  def create_saved_view; end

  sig { returns(T::Boolean) }
  def create_saved_view?; end

  sig { returns(T.nilable(PlatformTypes::CreateSponsorsListingPayload)) }
  def create_sponsors_listing; end

  sig { returns(T::Boolean) }
  def create_sponsors_listing?; end

  sig { returns(T.nilable(PlatformTypes::CreateSponsorsTierPayload)) }
  def create_sponsors_tier; end

  sig { returns(T::Boolean) }
  def create_sponsors_tier?; end

  sig { returns(T.nilable(PlatformTypes::CreateSponsorshipPayload)) }
  def create_sponsorship; end

  sig { returns(T::Boolean) }
  def create_sponsorship?; end

  sig { returns(T.nilable(PlatformTypes::CreateSponsorshipNewsletterPayload)) }
  def create_sponsorship_newsletter; end

  sig { returns(T::Boolean) }
  def create_sponsorship_newsletter?; end

  sig { returns(T.nilable(PlatformTypes::CreateSponsorshipsPayload)) }
  def create_sponsorships; end

  sig { returns(T::Boolean) }
  def create_sponsorships?; end

  sig { returns(T.nilable(PlatformTypes::CreateTeamPayload)) }
  def create_team; end

  sig { returns(T::Boolean) }
  def create_team?; end

  sig { returns(T.nilable(PlatformTypes::CreateTeamDashboardSearchShortcutPayload)) }
  def create_team_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def create_team_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::CreateTeamDiscussionPayload)) }
  def create_team_discussion; end

  sig { returns(T::Boolean) }
  def create_team_discussion?; end

  sig { returns(T.nilable(PlatformTypes::CreateTeamDiscussionCommentPayload)) }
  def create_team_discussion_comment; end

  sig { returns(T::Boolean) }
  def create_team_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::CreateUserDashboardPinPayload)) }
  def create_user_dashboard_pin; end

  sig { returns(T::Boolean) }
  def create_user_dashboard_pin?; end

  sig { returns(T.nilable(PlatformTypes::CreateUserDisinterestPayload)) }
  def create_user_disinterest; end

  sig { returns(T::Boolean) }
  def create_user_disinterest?; end

  sig { returns(T.nilable(PlatformTypes::CreateUserListPayload)) }
  def create_user_list; end

  sig { returns(T::Boolean) }
  def create_user_list?; end

  sig { returns(T.nilable(PlatformTypes::DeclineTopicSuggestionPayload)) }
  def decline_topic_suggestion; end

  sig { returns(T::Boolean) }
  def decline_topic_suggestion?; end

  sig { returns(T.nilable(PlatformTypes::DeleteBranchProtectionRulePayload)) }
  def delete_branch_protection_rule; end

  sig { returns(T::Boolean) }
  def delete_branch_protection_rule?; end

  sig { returns(T.nilable(PlatformTypes::DeleteCommentPayload)) }
  def delete_comment; end

  sig { returns(T::Boolean) }
  def delete_comment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteDeploymentPayload)) }
  def delete_deployment; end

  sig { returns(T::Boolean) }
  def delete_deployment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteDiscussionPayload)) }
  def delete_discussion; end

  sig { returns(T::Boolean) }
  def delete_discussion?; end

  sig { returns(T.nilable(PlatformTypes::DeleteDiscussionCommentPayload)) }
  def delete_discussion_comment; end

  sig { returns(T::Boolean) }
  def delete_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteEnvironmentPayload)) }
  def delete_environment; end

  sig { returns(T::Boolean) }
  def delete_environment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteIpAllowListEntryPayload)) }
  def delete_ip_allow_list_entry; end

  sig { returns(T::Boolean) }
  def delete_ip_allow_list_entry?; end

  sig { returns(T.nilable(PlatformTypes::DeleteIssuePayload)) }
  def delete_issue; end

  sig { returns(T::Boolean) }
  def delete_issue?; end

  sig { returns(T.nilable(PlatformTypes::DeleteIssueCommentPayload)) }
  def delete_issue_comment; end

  sig { returns(T::Boolean) }
  def delete_issue_comment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteIssueTypePayload)) }
  def delete_issue_type; end

  sig { returns(T::Boolean) }
  def delete_issue_type?; end

  sig { returns(T.nilable(PlatformTypes::DeleteLabelPayload)) }
  def delete_label; end

  sig { returns(T::Boolean) }
  def delete_label?; end

  sig { returns(T.nilable(PlatformTypes::DeleteLabelByNamePayload)) }
  def delete_label_by_name; end

  sig { returns(T::Boolean) }
  def delete_label_by_name?; end

  sig { returns(T.nilable(PlatformTypes::DeleteLinkedBranchPayload)) }
  def delete_linked_branch; end

  sig { returns(T::Boolean) }
  def delete_linked_branch?; end

  sig { returns(T.nilable(PlatformTypes::DeleteMarketplaceListingPlanPayload)) }
  def delete_marketplace_listing_plan; end

  sig { returns(T::Boolean) }
  def delete_marketplace_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::DeleteMarketplaceListingScreenshotPayload)) }
  def delete_marketplace_listing_screenshot; end

  sig { returns(T::Boolean) }
  def delete_marketplace_listing_screenshot?; end

  sig { returns(T.nilable(PlatformTypes::DeleteMobileDevicePublicKeyPayload)) }
  def delete_mobile_device_public_key; end

  sig { returns(T::Boolean) }
  def delete_mobile_device_public_key?; end

  sig { returns(T.nilable(PlatformTypes::DeleteMobileDeviceTokenPayload)) }
  def delete_mobile_device_token; end

  sig { returns(T::Boolean) }
  def delete_mobile_device_token?; end

  sig { returns(T.nilable(PlatformTypes::DeleteMobilePushNotificationSchedulePayload)) }
  def delete_mobile_push_notification_schedule; end

  sig { returns(T::Boolean) }
  def delete_mobile_push_notification_schedule?; end

  sig { returns(T.nilable(PlatformTypes::DeletePackageTagPayload)) }
  def delete_package_tag; end

  sig { returns(T::Boolean) }
  def delete_package_tag?; end

  sig { returns(T.nilable(PlatformTypes::DeletePackageVersionPayload)) }
  def delete_package_version; end

  sig { returns(T::Boolean) }
  def delete_package_version?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectPayload)) }
  def delete_project; end

  sig { returns(T::Boolean) }
  def delete_project?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectCardPayload)) }
  def delete_project_card; end

  sig { returns(T::Boolean) }
  def delete_project_card?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectColumnPayload)) }
  def delete_project_column; end

  sig { returns(T::Boolean) }
  def delete_project_column?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectNextItemPayload)) }
  def delete_project_next_item; end

  sig { returns(T::Boolean) }
  def delete_project_next_item?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2Payload)) }
  def delete_project_v2; end

  sig { returns(T::Boolean) }
  def delete_project_v2?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2FieldPayload)) }
  def delete_project_v2_field; end

  sig { returns(T::Boolean) }
  def delete_project_v2_field?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2ItemPayload)) }
  def delete_project_v2_item; end

  sig { returns(T::Boolean) }
  def delete_project_v2_item?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2StatusUpdatePayload)) }
  def delete_project_v2_status_update; end

  sig { returns(T::Boolean) }
  def delete_project_v2_status_update?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2WorkflowPayload)) }
  def delete_project_v2_workflow; end

  sig { returns(T::Boolean) }
  def delete_project_v2_workflow?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectV2WorkflowByNumberPayload)) }
  def delete_project_v2_workflow_by_number; end

  sig { returns(T::Boolean) }
  def delete_project_v2_workflow_by_number?; end

  sig { returns(T.nilable(PlatformTypes::DeleteProjectWorkflowPayload)) }
  def delete_project_workflow; end

  sig { returns(T::Boolean) }
  def delete_project_workflow?; end

  sig { returns(T.nilable(PlatformTypes::DeletePullRequestHeadRefPayload)) }
  def delete_pull_request_head_ref; end

  sig { returns(T::Boolean) }
  def delete_pull_request_head_ref?; end

  sig { returns(T.nilable(PlatformTypes::DeletePullRequestReviewPayload)) }
  def delete_pull_request_review; end

  sig { returns(T::Boolean) }
  def delete_pull_request_review?; end

  sig { returns(T.nilable(PlatformTypes::DeletePullRequestReviewCommentPayload)) }
  def delete_pull_request_review_comment; end

  sig { returns(T::Boolean) }
  def delete_pull_request_review_comment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteRefPayload)) }
  def delete_ref; end

  sig { returns(T::Boolean) }
  def delete_ref?; end

  sig { returns(T.nilable(PlatformTypes::DeleteRepositoryRulesetPayload)) }
  def delete_repository_ruleset; end

  sig { returns(T::Boolean) }
  def delete_repository_ruleset?; end

  sig { returns(T.nilable(PlatformTypes::DeleteSavedNotificationThreadPayload)) }
  def delete_saved_notification_thread; end

  sig { returns(T::Boolean) }
  def delete_saved_notification_thread?; end

  sig { returns(T.nilable(PlatformTypes::DeleteSavedViewPayload)) }
  def delete_saved_view; end

  sig { returns(T::Boolean) }
  def delete_saved_view?; end

  sig { returns(T.nilable(PlatformTypes::DeleteTeamPayload)) }
  def delete_team; end

  sig { returns(T::Boolean) }
  def delete_team?; end

  sig { returns(T.nilable(PlatformTypes::DeleteTeamDiscussionPayload)) }
  def delete_team_discussion; end

  sig { returns(T::Boolean) }
  def delete_team_discussion?; end

  sig { returns(T.nilable(PlatformTypes::DeleteTeamDiscussionCommentPayload)) }
  def delete_team_discussion_comment; end

  sig { returns(T::Boolean) }
  def delete_team_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::DeleteUserContentEditPayload)) }
  def delete_user_content_edit; end

  sig { returns(T::Boolean) }
  def delete_user_content_edit?; end

  sig { returns(T.nilable(PlatformTypes::DeleteUserDashboardPinPayload)) }
  def delete_user_dashboard_pin; end

  sig { returns(T::Boolean) }
  def delete_user_dashboard_pin?; end

  sig { returns(T.nilable(PlatformTypes::DeleteUserListPayload)) }
  def delete_user_list; end

  sig { returns(T::Boolean) }
  def delete_user_list?; end

  sig { returns(T.nilable(PlatformTypes::DeleteVerifiableDomainPayload)) }
  def delete_verifiable_domain; end

  sig { returns(T::Boolean) }
  def delete_verifiable_domain?; end

  sig { returns(T.nilable(PlatformTypes::DequeuePullRequestPayload)) }
  def dequeue_pull_request; end

  sig { returns(T::Boolean) }
  def dequeue_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::DetachRepositoriesPayload)) }
  def detach_repositories; end

  sig { returns(T::Boolean) }
  def detach_repositories?; end

  sig { returns(T.nilable(PlatformTypes::DisableBetaFeaturePayload)) }
  def disable_beta_feature; end

  sig { returns(T::Boolean) }
  def disable_beta_feature?; end

  sig { returns(T.nilable(PlatformTypes::DisablePullRequestAutoMergePayload)) }
  def disable_pull_request_auto_merge; end

  sig { returns(T::Boolean) }
  def disable_pull_request_auto_merge?; end

  sig { returns(T.nilable(PlatformTypes::DisableRepositoriesPayload)) }
  def disable_repositories; end

  sig { returns(T::Boolean) }
  def disable_repositories?; end

  sig { returns(T.nilable(PlatformTypes::DismissNoticePayload)) }
  def dismiss_notice; end

  sig { returns(T::Boolean) }
  def dismiss_notice?; end

  sig { returns(T.nilable(PlatformTypes::DismissPullRequestReviewPayload)) }
  def dismiss_pull_request_review; end

  sig { returns(T::Boolean) }
  def dismiss_pull_request_review?; end

  sig { returns(T.nilable(PlatformTypes::DismissRepositoryNoticePayload)) }
  def dismiss_repository_notice; end

  sig { returns(T::Boolean) }
  def dismiss_repository_notice?; end

  sig { returns(T.nilable(PlatformTypes::DismissRepositoryVulnerabilityAlertPayload)) }
  def dismiss_repository_vulnerability_alert; end

  sig { returns(T::Boolean) }
  def dismiss_repository_vulnerability_alert?; end

  sig { returns(T.nilable(PlatformTypes::DispatchWorkflowRunPayload)) }
  def dispatch_workflow_run; end

  sig { returns(T::Boolean) }
  def dispatch_workflow_run?; end

  sig { returns(T.nilable(PlatformTypes::EnableBetaFeaturePayload)) }
  def enable_beta_feature; end

  sig { returns(T::Boolean) }
  def enable_beta_feature?; end

  sig { returns(T.nilable(PlatformTypes::EnablePullRequestAutoMergePayload)) }
  def enable_pull_request_auto_merge; end

  sig { returns(T::Boolean) }
  def enable_pull_request_auto_merge?; end

  sig { returns(T.nilable(PlatformTypes::EnqueuePullRequestPayload)) }
  def enqueue_pull_request; end

  sig { returns(T::Boolean) }
  def enqueue_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::EnrollInToggleableFeaturePayload)) }
  def enroll_in_toggleable_feature; end

  sig { returns(T::Boolean) }
  def enroll_in_toggleable_feature?; end

  sig { returns(T.nilable(PlatformTypes::FollowOrganizationPayload)) }
  def follow_organization; end

  sig { returns(T::Boolean) }
  def follow_organization?; end

  sig { returns(T.nilable(PlatformTypes::FollowUserPayload)) }
  def follow_user; end

  sig { returns(T::Boolean) }
  def follow_user?; end

  sig { returns(T.nilable(PlatformTypes::ForceClearMergeQueuePayload)) }
  def force_clear_merge_queue; end

  sig { returns(T::Boolean) }
  def force_clear_merge_queue?; end

  sig { returns(T.nilable(PlatformTypes::ForkRepositoryPayload)) }
  def fork_repository; end

  sig { returns(T::Boolean) }
  def fork_repository?; end

  sig { returns(T.nilable(PlatformTypes::GrantEnterpriseOrganizationsMigratorRolePayload)) }
  def grant_enterprise_organizations_migrator_role; end

  sig { returns(T::Boolean) }
  def grant_enterprise_organizations_migrator_role?; end

  sig { returns(T.nilable(PlatformTypes::GrantMigratorRolePayload)) }
  def grant_migrator_role; end

  sig { returns(T::Boolean) }
  def grant_migrator_role?; end

  sig { returns(T.nilable(PlatformTypes::ImportProjectPayload)) }
  def import_project; end

  sig { returns(T::Boolean) }
  def import_project?; end

  sig { returns(T.nilable(PlatformTypes::IncrementRegistryPackageDownloadCountPayload)) }
  def increment_registry_package_download_count; end

  sig { returns(T::Boolean) }
  def increment_registry_package_download_count?; end

  sig { returns(T.nilable(PlatformTypes::InviteEnterpriseAdminPayload)) }
  def invite_enterprise_admin; end

  sig { returns(T::Boolean) }
  def invite_enterprise_admin?; end

  sig { returns(T.nilable(PlatformTypes::InviteEnterpriseMemberPayload)) }
  def invite_enterprise_member; end

  sig { returns(T::Boolean) }
  def invite_enterprise_member?; end

  sig { returns(T.nilable(PlatformTypes::InviteEnterpriseOrganizationPayload)) }
  def invite_enterprise_organization; end

  sig { returns(T::Boolean) }
  def invite_enterprise_organization?; end

  sig { returns(T.nilable(PlatformTypes::InviteToOrganizationPayload)) }
  def invite_to_organization; end

  sig { returns(T::Boolean) }
  def invite_to_organization?; end

  sig { returns(T.nilable(PlatformTypes::LinkBranchesPayload)) }
  def link_branches; end

  sig { returns(T::Boolean) }
  def link_branches?; end

  sig { returns(T.nilable(PlatformTypes::LinkIssueOrPullRequestPayload)) }
  def link_issue_or_pull_request; end

  sig { returns(T::Boolean) }
  def link_issue_or_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::LinkProjectV2ToRepositoryPayload)) }
  def link_project_v2_to_repository; end

  sig { returns(T::Boolean) }
  def link_project_v2_to_repository?; end

  sig { returns(T.nilable(PlatformTypes::LinkProjectV2ToTeamPayload)) }
  def link_project_v2_to_team; end

  sig { returns(T::Boolean) }
  def link_project_v2_to_team?; end

  sig { returns(T.nilable(PlatformTypes::LinkRepositoryToProjectPayload)) }
  def link_repository_to_project; end

  sig { returns(T::Boolean) }
  def link_repository_to_project?; end

  sig { returns(T.nilable(PlatformTypes::LockLockablePayload)) }
  def lock_lockable; end

  sig { returns(T::Boolean) }
  def lock_lockable?; end

  sig { returns(T.nilable(PlatformTypes::LockMergeQueuePayload)) }
  def lock_merge_queue; end

  sig { returns(T::Boolean) }
  def lock_merge_queue?; end

  sig { returns(T.nilable(PlatformTypes::MarkAllNotificationsPayload)) }
  def mark_all_notifications; end

  sig { returns(T::Boolean) }
  def mark_all_notifications?; end

  sig { returns(T.nilable(PlatformTypes::MarkDiscussionCommentAsAnswerPayload)) }
  def mark_discussion_comment_as_answer; end

  sig { returns(T::Boolean) }
  def mark_discussion_comment_as_answer?; end

  sig { returns(T.nilable(PlatformTypes::MarkFileAsViewedPayload)) }
  def mark_file_as_viewed; end

  sig { returns(T::Boolean) }
  def mark_file_as_viewed?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationAsDonePayload)) }
  def mark_notification_as_done; end

  sig { returns(T::Boolean) }
  def mark_notification_as_done?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationAsReadPayload)) }
  def mark_notification_as_read; end

  sig { returns(T::Boolean) }
  def mark_notification_as_read?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationAsUndonePayload)) }
  def mark_notification_as_undone; end

  sig { returns(T::Boolean) }
  def mark_notification_as_undone?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationAsUnreadPayload)) }
  def mark_notification_as_unread; end

  sig { returns(T::Boolean) }
  def mark_notification_as_unread?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationSubjectAsReadPayload)) }
  def mark_notification_subject_as_read; end

  sig { returns(T::Boolean) }
  def mark_notification_subject_as_read?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationsAsDonePayload)) }
  def mark_notifications_as_done; end

  sig { returns(T::Boolean) }
  def mark_notifications_as_done?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationsAsReadPayload)) }
  def mark_notifications_as_read; end

  sig { returns(T::Boolean) }
  def mark_notifications_as_read?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationsAsUndonePayload)) }
  def mark_notifications_as_undone; end

  sig { returns(T::Boolean) }
  def mark_notifications_as_undone?; end

  sig { returns(T.nilable(PlatformTypes::MarkNotificationsAsUnreadPayload)) }
  def mark_notifications_as_unread; end

  sig { returns(T::Boolean) }
  def mark_notifications_as_unread?; end

  sig { returns(T.nilable(PlatformTypes::MarkProjectV2AsTemplatePayload)) }
  def mark_project_v2_as_template; end

  sig { returns(T::Boolean) }
  def mark_project_v2_as_template?; end

  sig { returns(T.nilable(PlatformTypes::MarkPullRequestLatestRevisionAsSeenPayload)) }
  def mark_pull_request_latest_revision_as_seen; end

  sig { returns(T::Boolean) }
  def mark_pull_request_latest_revision_as_seen?; end

  sig { returns(T.nilable(PlatformTypes::MarkPullRequestReadyForReviewPayload)) }
  def mark_pull_request_ready_for_review; end

  sig { returns(T::Boolean) }
  def mark_pull_request_ready_for_review?; end

  sig { returns(T.nilable(PlatformTypes::MarkRepositoryDependencyUpdateCompletePayload)) }
  def mark_repository_dependency_update_complete; end

  sig { returns(T::Boolean) }
  def mark_repository_dependency_update_complete?; end

  sig { returns(T.nilable(PlatformTypes::MarkRepositoryDependencyUpdateErroredPayload)) }
  def mark_repository_dependency_update_errored; end

  sig { returns(T::Boolean) }
  def mark_repository_dependency_update_errored?; end

  sig { returns(T.nilable(PlatformTypes::MergeBranchPayload)) }
  def merge_branch; end

  sig { returns(T::Boolean) }
  def merge_branch?; end

  sig { returns(T.nilable(PlatformTypes::MergeLockedMergeGroupPayload)) }
  def merge_locked_merge_group; end

  sig { returns(T::Boolean) }
  def merge_locked_merge_group?; end

  sig { returns(T.nilable(PlatformTypes::MergePullRequestPayload)) }
  def merge_pull_request; end

  sig { returns(T::Boolean) }
  def merge_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::MinimizeCommentPayload)) }
  def minimize_comment; end

  sig { returns(T::Boolean) }
  def minimize_comment?; end

  sig { returns(T.nilable(PlatformTypes::MobileEventsUpdatePayload)) }
  def mobile_events_update; end

  sig { returns(T::Boolean) }
  def mobile_events_update?; end

  sig { returns(T.nilable(PlatformTypes::MoveDashboardSearchShortcutPayload)) }
  def move_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def move_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::MoveProjectCardPayload)) }
  def move_project_card; end

  sig { returns(T::Boolean) }
  def move_project_card?; end

  sig { returns(T.nilable(PlatformTypes::MoveProjectColumnPayload)) }
  def move_project_column; end

  sig { returns(T::Boolean) }
  def move_project_column?; end

  sig { returns(T.nilable(PlatformTypes::PerformImportPayload)) }
  def perform_import; end

  sig { returns(T::Boolean) }
  def perform_import?; end

  sig { returns(T.nilable(PlatformTypes::PinEnvironmentPayload)) }
  def pin_environment; end

  sig { returns(T::Boolean) }
  def pin_environment?; end

  sig { returns(T.nilable(PlatformTypes::PinIssuePayload)) }
  def pin_issue; end

  sig { returns(T::Boolean) }
  def pin_issue?; end

  sig { returns(T.nilable(PlatformTypes::PrepareImportPayload)) }
  def prepare_import; end

  sig { returns(T::Boolean) }
  def prepare_import?; end

  sig { returns(T.nilable(PlatformTypes::PrioritizePinnedIssuesPayload)) }
  def prioritize_pinned_issues; end

  sig { returns(T::Boolean) }
  def prioritize_pinned_issues?; end

  sig { returns(T.nilable(PlatformTypes::PublishMarketplaceListingPlanPayload)) }
  def publish_marketplace_listing_plan; end

  sig { returns(T::Boolean) }
  def publish_marketplace_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::PublishSponsorsTierPayload)) }
  def publish_sponsors_tier; end

  sig { returns(T::Boolean) }
  def publish_sponsors_tier?; end

  sig { returns(T.nilable(PlatformTypes::ReattributeMannequinToUserPayload)) }
  def reattribute_mannequin_to_user; end

  sig { returns(T::Boolean) }
  def reattribute_mannequin_to_user?; end

  sig { returns(T.nilable(PlatformTypes::RecordMarketplaceRetargetingNotificationsPayload)) }
  def record_marketplace_retargeting_notifications; end

  sig { returns(T::Boolean) }
  def record_marketplace_retargeting_notifications?; end

  sig { returns(T.nilable(PlatformTypes::RegenerateEnterpriseIdentityProviderRecoveryCodesPayload)) }
  def regenerate_enterprise_identity_provider_recovery_codes; end

  sig { returns(T::Boolean) }
  def regenerate_enterprise_identity_provider_recovery_codes?; end

  sig { returns(T.nilable(PlatformTypes::RegenerateVerifiableDomainTokenPayload)) }
  def regenerate_verifiable_domain_token; end

  sig { returns(T::Boolean) }
  def regenerate_verifiable_domain_token?; end

  sig { returns(T.nilable(PlatformTypes::RejectDeploymentsPayload)) }
  def reject_deployments; end

  sig { returns(T::Boolean) }
  def reject_deployments?; end

  sig { returns(T.nilable(PlatformTypes::RejectMobileAuthDeviceRequestPayload)) }
  def reject_mobile_auth_device_request; end

  sig { returns(T::Boolean) }
  def reject_mobile_auth_device_request?; end

  sig { returns(T.nilable(PlatformTypes::RemoveAssigneesFromAssignablePayload)) }
  def remove_assignees_from_assignable; end

  sig { returns(T::Boolean) }
  def remove_assignees_from_assignable?; end

  sig { returns(T.nilable(PlatformTypes::RemoveContentWarningsPayload)) }
  def remove_content_warnings; end

  sig { returns(T::Boolean) }
  def remove_content_warnings?; end

  sig { returns(T.nilable(PlatformTypes::RemoveDashboardSearchShortcutPayload)) }
  def remove_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def remove_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::RemoveEnterpriseAdminPayload)) }
  def remove_enterprise_admin; end

  sig { returns(T::Boolean) }
  def remove_enterprise_admin?; end

  sig { returns(T.nilable(PlatformTypes::RemoveEnterpriseIdentityProviderPayload)) }
  def remove_enterprise_identity_provider; end

  sig { returns(T::Boolean) }
  def remove_enterprise_identity_provider?; end

  sig { returns(T.nilable(PlatformTypes::RemoveEnterpriseMemberPayload)) }
  def remove_enterprise_member; end

  sig { returns(T::Boolean) }
  def remove_enterprise_member?; end

  sig { returns(T.nilable(PlatformTypes::RemoveEnterpriseOrganizationPayload)) }
  def remove_enterprise_organization; end

  sig { returns(T::Boolean) }
  def remove_enterprise_organization?; end

  sig { returns(T.nilable(PlatformTypes::RemoveEnterpriseSupportEntitlementPayload)) }
  def remove_enterprise_support_entitlement; end

  sig { returns(T::Boolean) }
  def remove_enterprise_support_entitlement?; end

  sig { returns(T.nilable(PlatformTypes::RemoveLabelsFromLabelablePayload)) }
  def remove_labels_from_labelable; end

  sig { returns(T::Boolean) }
  def remove_labels_from_labelable?; end

  sig { returns(T.nilable(PlatformTypes::RemoveOutsideCollaboratorPayload)) }
  def remove_outside_collaborator; end

  sig { returns(T::Boolean) }
  def remove_outside_collaborator?; end

  sig { returns(T.nilable(PlatformTypes::RemoveProjectCollaboratorPayload)) }
  def remove_project_collaborator; end

  sig { returns(T::Boolean) }
  def remove_project_collaborator?; end

  sig { returns(T.nilable(PlatformTypes::RemovePullRequestFromMergeQueuePayload)) }
  def remove_pull_request_from_merge_queue; end

  sig { returns(T::Boolean) }
  def remove_pull_request_from_merge_queue?; end

  sig { returns(T.nilable(PlatformTypes::RemoveReactionPayload)) }
  def remove_reaction; end

  sig { returns(T::Boolean) }
  def remove_reaction?; end

  sig { returns(T.nilable(PlatformTypes::RemoveStarPayload)) }
  def remove_star; end

  sig { returns(T::Boolean) }
  def remove_star?; end

  sig { returns(T.nilable(PlatformTypes::RemoveSubIssuePayload)) }
  def remove_sub_issue; end

  sig { returns(T::Boolean) }
  def remove_sub_issue?; end

  sig { returns(T.nilable(PlatformTypes::RemoveTeamDashboardSearchShortcutPayload)) }
  def remove_team_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def remove_team_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::RemoveTeamMemberPayload)) }
  def remove_team_member; end

  sig { returns(T::Boolean) }
  def remove_team_member?; end

  sig { returns(T.nilable(PlatformTypes::RemoveTeamProjectPayload)) }
  def remove_team_project; end

  sig { returns(T::Boolean) }
  def remove_team_project?; end

  sig { returns(T.nilable(PlatformTypes::RemoveUpvotePayload)) }
  def remove_upvote; end

  sig { returns(T::Boolean) }
  def remove_upvote?; end

  sig { returns(T.nilable(PlatformTypes::ReopenDiscussionPayload)) }
  def reopen_discussion; end

  sig { returns(T::Boolean) }
  def reopen_discussion?; end

  sig { returns(T.nilable(PlatformTypes::ReopenIssuePayload)) }
  def reopen_issue; end

  sig { returns(T::Boolean) }
  def reopen_issue?; end

  sig { returns(T.nilable(PlatformTypes::ReopenPullRequestPayload)) }
  def reopen_pull_request; end

  sig { returns(T::Boolean) }
  def reopen_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::ReorderDashboardPinsPayload)) }
  def reorder_dashboard_pins; end

  sig { returns(T::Boolean) }
  def reorder_dashboard_pins?; end

  sig { returns(T.nilable(PlatformTypes::ReorderEnvironmentPayload)) }
  def reorder_environment; end

  sig { returns(T::Boolean) }
  def reorder_environment?; end

  sig { returns(T.nilable(PlatformTypes::ReorderProfilePinsPayload)) }
  def reorder_profile_pins; end

  sig { returns(T::Boolean) }
  def reorder_profile_pins?; end

  sig { returns(T.nilable(PlatformTypes::ReplaceAssigneesForAssignablePayload)) }
  def replace_assignees_for_assignable; end

  sig { returns(T::Boolean) }
  def replace_assignees_for_assignable?; end

  sig { returns(T.nilable(PlatformTypes::ReplaceLabelsForLabelablePayload)) }
  def replace_labels_for_labelable; end

  sig { returns(T::Boolean) }
  def replace_labels_for_labelable?; end

  sig { returns(T.nilable(PlatformTypes::ReportBrowserErrorPayload)) }
  def report_browser_error; end

  sig { returns(T::Boolean) }
  def report_browser_error?; end

  sig { returns(T.nilable(PlatformTypes::ReprioritizeSubIssuePayload)) }
  def reprioritize_sub_issue; end

  sig { returns(T::Boolean) }
  def reprioritize_sub_issue?; end

  sig { returns(T.nilable(PlatformTypes::RequestReviewsPayload)) }
  def request_reviews; end

  sig { returns(T::Boolean) }
  def request_reviews?; end

  sig { returns(T.nilable(PlatformTypes::RerequestCheckSuitePayload)) }
  def rerequest_check_suite; end

  sig { returns(T::Boolean) }
  def rerequest_check_suite?; end

  sig { returns(T.nilable(PlatformTypes::RerunCheckRunMobilePayload)) }
  def rerun_check_run_mobile; end

  sig { returns(T::Boolean) }
  def rerun_check_run_mobile?; end

  sig { returns(T.nilable(PlatformTypes::RerunCheckSuiteMobilePayload)) }
  def rerun_check_suite_mobile; end

  sig { returns(T::Boolean) }
  def rerun_check_suite_mobile?; end

  sig { returns(T.nilable(PlatformTypes::ResequenceMarketplaceListingScreenshotPayload)) }
  def resequence_marketplace_listing_screenshot; end

  sig { returns(T::Boolean) }
  def resequence_marketplace_listing_screenshot?; end

  sig { returns(T.nilable(PlatformTypes::ResetPasswordsPayload)) }
  def reset_passwords; end

  sig { returns(T::Boolean) }
  def reset_passwords?; end

  sig { returns(T.nilable(PlatformTypes::ResolvePullRequestThreadPayload)) }
  def resolve_pull_request_thread; end

  sig { returns(T::Boolean) }
  def resolve_pull_request_thread?; end

  sig { returns(T.nilable(PlatformTypes::ResolveReviewThreadPayload)) }
  def resolve_review_thread; end

  sig { returns(T::Boolean) }
  def resolve_review_thread?; end

  sig { returns(T.nilable(PlatformTypes::ResolveSecurityIncidentPayload)) }
  def resolve_security_incident; end

  sig { returns(T::Boolean) }
  def resolve_security_incident?; end

  sig { returns(T.nilable(PlatformTypes::RestorePullRequestHeadRefPayload)) }
  def restore_pull_request_head_ref; end

  sig { returns(T::Boolean) }
  def restore_pull_request_head_ref?; end

  sig { returns(T.nilable(PlatformTypes::RetireMarketplaceListingPlanPayload)) }
  def retire_marketplace_listing_plan; end

  sig { returns(T::Boolean) }
  def retire_marketplace_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::RetireNamespacePayload)) }
  def retire_namespace; end

  sig { returns(T::Boolean) }
  def retire_namespace?; end

  sig { returns(T.nilable(PlatformTypes::RetireSponsorsTierPayload)) }
  def retire_sponsors_tier; end

  sig { returns(T::Boolean) }
  def retire_sponsors_tier?; end

  sig { returns(T.nilable(PlatformTypes::ReusePreviousWorkflowRunPayload)) }
  def reuse_previous_workflow_run; end

  sig { returns(T::Boolean) }
  def reuse_previous_workflow_run?; end

  sig { returns(T.nilable(PlatformTypes::RevertPullRequestPayload)) }
  def revert_pull_request; end

  sig { returns(T::Boolean) }
  def revert_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::RevokeEnterpriseOrganizationsMigratorRolePayload)) }
  def revoke_enterprise_organizations_migrator_role; end

  sig { returns(T::Boolean) }
  def revoke_enterprise_organizations_migrator_role?; end

  sig { returns(T.nilable(PlatformTypes::RevokeMigratorRolePayload)) }
  def revoke_migrator_role; end

  sig { returns(T::Boolean) }
  def revoke_migrator_role?; end

  sig { returns(T.nilable(PlatformTypes::SdnRequestScreenPayload)) }
  def sdn_request_screen; end

  sig { returns(T::Boolean) }
  def sdn_request_screen?; end

  sig { returns(T.nilable(PlatformTypes::SdnSuspendPayload)) }
  def sdn_suspend; end

  sig { returns(T::Boolean) }
  def sdn_suspend?; end

  sig { returns(T.nilable(PlatformTypes::SdnUnsuspendPayload)) }
  def sdn_unsuspend; end

  sig { returns(T::Boolean) }
  def sdn_unsuspend?; end

  sig { returns(T.nilable(PlatformTypes::SetDashboardFeedFiltersPayload)) }
  def set_dashboard_feed_filters; end

  sig { returns(T::Boolean) }
  def set_dashboard_feed_filters?; end

  sig { returns(T.nilable(PlatformTypes::SetDashboardSearchShortcutsPayload)) }
  def set_dashboard_search_shortcuts; end

  sig { returns(T::Boolean) }
  def set_dashboard_search_shortcuts?; end

  sig { returns(T.nilable(PlatformTypes::SetEnterpriseIdentityProviderPayload)) }
  def set_enterprise_identity_provider; end

  sig { returns(T::Boolean) }
  def set_enterprise_identity_provider?; end

  sig { returns(T.nilable(PlatformTypes::SetEnterpriseUserProvisioningSettingsPayload)) }
  def set_enterprise_user_provisioning_settings; end

  sig { returns(T::Boolean) }
  def set_enterprise_user_provisioning_settings?; end

  sig { returns(T.nilable(PlatformTypes::SetHasUsedAnonymizingProxyPayload)) }
  def set_has_used_anonymizing_proxy; end

  sig { returns(T::Boolean) }
  def set_has_used_anonymizing_proxy?; end

  sig { returns(T.nilable(PlatformTypes::SetLabelsForLabelablePayload)) }
  def set_labels_for_labelable; end

  sig { returns(T::Boolean) }
  def set_labels_for_labelable?; end

  sig { returns(T.nilable(PlatformTypes::SetOrganizationInteractionLimitPayload)) }
  def set_organization_interaction_limit; end

  sig { returns(T::Boolean) }
  def set_organization_interaction_limit?; end

  sig { returns(T.nilable(PlatformTypes::SetProfilePinsPayload)) }
  def set_profile_pins; end

  sig { returns(T::Boolean) }
  def set_profile_pins?; end

  sig { returns(T.nilable(PlatformTypes::SetRepositoryInteractionLimitPayload)) }
  def set_repository_interaction_limit; end

  sig { returns(T::Boolean) }
  def set_repository_interaction_limit?; end

  sig { returns(T.nilable(PlatformTypes::SetTradeScreeningStatusPayload)) }
  def set_trade_screening_status; end

  sig { returns(T::Boolean) }
  def set_trade_screening_status?; end

  sig { returns(T.nilable(PlatformTypes::SetUserDashboardPinsPayload)) }
  def set_user_dashboard_pins; end

  sig { returns(T::Boolean) }
  def set_user_dashboard_pins?; end

  sig { returns(T.nilable(PlatformTypes::SetUserInteractionLimitPayload)) }
  def set_user_interaction_limit; end

  sig { returns(T::Boolean) }
  def set_user_interaction_limit?; end

  sig { returns(T.nilable(PlatformTypes::StaffArchiveRepositoryPayload)) }
  def staff_archive_repository; end

  sig { returns(T::Boolean) }
  def staff_archive_repository?; end

  sig { returns(T.nilable(PlatformTypes::StaffDeleteRepositoriesPayload)) }
  def staff_delete_repositories; end

  sig { returns(T::Boolean) }
  def staff_delete_repositories?; end

  sig { returns(T.nilable(PlatformTypes::StaffUnarchiveRepositoryPayload)) }
  def staff_unarchive_repository; end

  sig { returns(T::Boolean) }
  def staff_unarchive_repository?; end

  sig { returns(T.nilable(PlatformTypes::StartImportPayload)) }
  def start_import; end

  sig { returns(T::Boolean) }
  def start_import?; end

  sig { returns(T.nilable(PlatformTypes::StartOrganizationMigrationPayload)) }
  def start_organization_migration; end

  sig { returns(T::Boolean) }
  def start_organization_migration?; end

  sig { returns(T.nilable(PlatformTypes::StartRepositoryMigrationPayload)) }
  def start_repository_migration; end

  sig { returns(T::Boolean) }
  def start_repository_migration?; end

  sig { returns(T.nilable(PlatformTypes::SubmitAbuseReportPayload)) }
  def submit_abuse_report; end

  sig { returns(T::Boolean) }
  def submit_abuse_report?; end

  sig { returns(T.nilable(PlatformTypes::SubmitPullRequestReviewPayload)) }
  def submit_pull_request_review; end

  sig { returns(T::Boolean) }
  def submit_pull_request_review?; end

  sig { returns(T.nilable(PlatformTypes::SuspendAccountsPayload)) }
  def suspend_accounts; end

  sig { returns(T::Boolean) }
  def suspend_accounts?; end

  sig { returns(T.nilable(PlatformTypes::TransferEnterpriseOrganizationPayload)) }
  def transfer_enterprise_organization; end

  sig { returns(T::Boolean) }
  def transfer_enterprise_organization?; end

  sig { returns(T.nilable(PlatformTypes::TransferIssuePayload)) }
  def transfer_issue; end

  sig { returns(T::Boolean) }
  def transfer_issue?; end

  sig { returns(T.nilable(PlatformTypes::TransferRepositoryPayload)) }
  def transfer_repository; end

  sig { returns(T::Boolean) }
  def transfer_repository?; end

  sig { returns(T.nilable(PlatformTypes::UnarchiveProjectCardPayload)) }
  def unarchive_project_card; end

  sig { returns(T::Boolean) }
  def unarchive_project_card?; end

  sig { returns(T.nilable(PlatformTypes::UnarchiveProjectV2ItemPayload)) }
  def unarchive_project_v2_item; end

  sig { returns(T::Boolean) }
  def unarchive_project_v2_item?; end

  sig { returns(T.nilable(PlatformTypes::UnarchiveRepositoryPayload)) }
  def unarchive_repository; end

  sig { returns(T::Boolean) }
  def unarchive_repository?; end

  sig { returns(T.nilable(PlatformTypes::UnblockAccountsActionInvocationPayload)) }
  def unblock_accounts_action_invocation; end

  sig { returns(T::Boolean) }
  def unblock_accounts_action_invocation?; end

  sig { returns(T.nilable(PlatformTypes::UnblockUserPayload)) }
  def unblock_user; end

  sig { returns(T::Boolean) }
  def unblock_user?; end

  sig { returns(T.nilable(PlatformTypes::UnblockUserFromOrganizationPayload)) }
  def unblock_user_from_organization; end

  sig { returns(T::Boolean) }
  def unblock_user_from_organization?; end

  sig { returns(T.nilable(PlatformTypes::UndoUserDisinterestPayload)) }
  def undo_user_disinterest; end

  sig { returns(T::Boolean) }
  def undo_user_disinterest?; end

  sig { returns(T.nilable(PlatformTypes::UnenrollInToggleableFeaturePayload)) }
  def unenroll_in_toggleable_feature; end

  sig { returns(T::Boolean) }
  def unenroll_in_toggleable_feature?; end

  sig { returns(T.nilable(PlatformTypes::UnfollowOrganizationPayload)) }
  def unfollow_organization; end

  sig { returns(T::Boolean) }
  def unfollow_organization?; end

  sig { returns(T.nilable(PlatformTypes::UnfollowUserPayload)) }
  def unfollow_user; end

  sig { returns(T::Boolean) }
  def unfollow_user?; end

  sig { returns(T.nilable(PlatformTypes::UnlinkProjectV2FromRepositoryPayload)) }
  def unlink_project_v2_from_repository; end

  sig { returns(T::Boolean) }
  def unlink_project_v2_from_repository?; end

  sig { returns(T.nilable(PlatformTypes::UnlinkProjectV2FromTeamPayload)) }
  def unlink_project_v2_from_team; end

  sig { returns(T::Boolean) }
  def unlink_project_v2_from_team?; end

  sig { returns(T.nilable(PlatformTypes::UnlinkRepositoryFromProjectPayload)) }
  def unlink_repository_from_project; end

  sig { returns(T::Boolean) }
  def unlink_repository_from_project?; end

  sig { returns(T.nilable(PlatformTypes::UnlockAndResetMergeGroupPayload)) }
  def unlock_and_reset_merge_group; end

  sig { returns(T::Boolean) }
  def unlock_and_reset_merge_group?; end

  sig { returns(T.nilable(PlatformTypes::UnlockImportedRepositoriesPayload)) }
  def unlock_imported_repositories; end

  sig { returns(T::Boolean) }
  def unlock_imported_repositories?; end

  sig { returns(T.nilable(PlatformTypes::UnlockLockablePayload)) }
  def unlock_lockable; end

  sig { returns(T::Boolean) }
  def unlock_lockable?; end

  sig { returns(T.nilable(PlatformTypes::UnlockMergeGroupPayload)) }
  def unlock_merge_group; end

  sig { returns(T::Boolean) }
  def unlock_merge_group?; end

  sig { returns(T.nilable(PlatformTypes::UnlockPrivateAuditLogPayload)) }
  def unlock_private_audit_log; end

  sig { returns(T::Boolean) }
  def unlock_private_audit_log?; end

  sig { returns(T.nilable(PlatformTypes::UnmarkDiscussionCommentAsAnswerPayload)) }
  def unmark_discussion_comment_as_answer; end

  sig { returns(T::Boolean) }
  def unmark_discussion_comment_as_answer?; end

  sig { returns(T.nilable(PlatformTypes::UnmarkFileAsViewedPayload)) }
  def unmark_file_as_viewed; end

  sig { returns(T::Boolean) }
  def unmark_file_as_viewed?; end

  sig { returns(T.nilable(PlatformTypes::UnmarkIssueAsDuplicatePayload)) }
  def unmark_issue_as_duplicate; end

  sig { returns(T::Boolean) }
  def unmark_issue_as_duplicate?; end

  sig { returns(T.nilable(PlatformTypes::UnmarkProjectV2AsTemplatePayload)) }
  def unmark_project_v2_as_template; end

  sig { returns(T::Boolean) }
  def unmark_project_v2_as_template?; end

  sig { returns(T.nilable(PlatformTypes::UnminimizeCommentPayload)) }
  def unminimize_comment; end

  sig { returns(T::Boolean) }
  def unminimize_comment?; end

  sig { returns(T.nilable(PlatformTypes::UnpinIssuePayload)) }
  def unpin_issue; end

  sig { returns(T::Boolean) }
  def unpin_issue?; end

  sig { returns(T.nilable(PlatformTypes::UnresolvePullRequestThreadPayload)) }
  def unresolve_pull_request_thread; end

  sig { returns(T::Boolean) }
  def unresolve_pull_request_thread?; end

  sig { returns(T.nilable(PlatformTypes::UnresolveReviewThreadPayload)) }
  def unresolve_review_thread; end

  sig { returns(T::Boolean) }
  def unresolve_review_thread?; end

  sig { returns(T.nilable(PlatformTypes::UnretireNamespacePayload)) }
  def unretire_namespace; end

  sig { returns(T::Boolean) }
  def unretire_namespace?; end

  sig { returns(T.nilable(PlatformTypes::UnsubscribeFromNotificationsPayload)) }
  def unsubscribe_from_notifications; end

  sig { returns(T::Boolean) }
  def unsubscribe_from_notifications?; end

  sig { returns(T.nilable(PlatformTypes::UnsuspendAccountsPayload)) }
  def unsuspend_accounts; end

  sig { returns(T::Boolean) }
  def unsuspend_accounts?; end

  sig { returns(T.nilable(PlatformTypes::UpdateBranchProtectionRulePayload)) }
  def update_branch_protection_rule; end

  sig { returns(T::Boolean) }
  def update_branch_protection_rule?; end

  sig { returns(T.nilable(PlatformTypes::UpdateCheckRunPayload)) }
  def update_check_run; end

  sig { returns(T::Boolean) }
  def update_check_run?; end

  sig { returns(T.nilable(PlatformTypes::UpdateCheckSuitePayload)) }
  def update_check_suite; end

  sig { returns(T::Boolean) }
  def update_check_suite?; end

  sig { returns(T.nilable(PlatformTypes::UpdateCheckSuitePreferencesPayload)) }
  def update_check_suite_preferences; end

  sig { returns(T::Boolean) }
  def update_check_suite_preferences?; end

  sig { returns(T.nilable(PlatformTypes::UpdateDashboardSearchShortcutPayload)) }
  def update_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def update_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::UpdateDashboardSelectedTeamsPayload)) }
  def update_dashboard_selected_teams; end

  sig { returns(T::Boolean) }
  def update_dashboard_selected_teams?; end

  sig { returns(T.nilable(PlatformTypes::UpdateDiscussionPayload)) }
  def update_discussion; end

  sig { returns(T::Boolean) }
  def update_discussion?; end

  sig { returns(T.nilable(PlatformTypes::UpdateDiscussionCommentPayload)) }
  def update_discussion_comment; end

  sig { returns(T::Boolean) }
  def update_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseAdministratorRolePayload)) }
  def update_enterprise_administrator_role; end

  sig { returns(T::Boolean) }
  def update_enterprise_administrator_role?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload)) }
  def update_enterprise_allow_private_repository_forking_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_allow_private_repository_forking_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseDefaultRepositoryPermissionSettingPayload)) }
  def update_enterprise_default_repository_permission_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_default_repository_permission_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload)) }
  def update_enterprise_members_can_change_repository_visibility_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_change_repository_visibility_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload)) }
  def update_enterprise_members_can_create_repositories_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_create_repositories_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanDeleteIssuesSettingPayload)) }
  def update_enterprise_members_can_delete_issues_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_delete_issues_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload)) }
  def update_enterprise_members_can_delete_repositories_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_delete_repositories_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload)) }
  def update_enterprise_members_can_invite_collaborators_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_invite_collaborators_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanMakePurchasesSettingPayload)) }
  def update_enterprise_members_can_make_purchases_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_make_purchases_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload)) }
  def update_enterprise_members_can_update_protected_branches_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_update_protected_branches_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload)) }
  def update_enterprise_members_can_view_dependency_insights_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_members_can_view_dependency_insights_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseOrganizationProjectsSettingPayload)) }
  def update_enterprise_organization_projects_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_organization_projects_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseOwnerOrganizationRolePayload)) }
  def update_enterprise_owner_organization_role; end

  sig { returns(T::Boolean) }
  def update_enterprise_owner_organization_role?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseProfilePayload)) }
  def update_enterprise_profile; end

  sig { returns(T::Boolean) }
  def update_enterprise_profile?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseRepositoryProjectsSettingPayload)) }
  def update_enterprise_repository_projects_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_repository_projects_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseTeamDiscussionsSettingPayload)) }
  def update_enterprise_team_discussions_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_team_discussions_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload)) }
  def update_enterprise_two_factor_authentication_required_setting; end

  sig { returns(T::Boolean) }
  def update_enterprise_two_factor_authentication_required_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateEnvironmentPayload)) }
  def update_environment; end

  sig { returns(T::Boolean) }
  def update_environment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateExploreCollectionPayload)) }
  def update_explore_collection; end

  sig { returns(T::Boolean) }
  def update_explore_collection?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIntegrationCategoryPayload)) }
  def update_integration_category; end

  sig { returns(T::Boolean) }
  def update_integration_category?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIpAllowListEnabledSettingPayload)) }
  def update_ip_allow_list_enabled_setting; end

  sig { returns(T::Boolean) }
  def update_ip_allow_list_enabled_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIpAllowListEntryPayload)) }
  def update_ip_allow_list_entry; end

  sig { returns(T::Boolean) }
  def update_ip_allow_list_entry?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIpAllowListForInstalledAppsEnabledSettingPayload)) }
  def update_ip_allow_list_for_installed_apps_enabled_setting; end

  sig { returns(T::Boolean) }
  def update_ip_allow_list_for_installed_apps_enabled_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssuePayload)) }
  def update_issue; end

  sig { returns(T::Boolean) }
  def update_issue?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssueCommentPayload)) }
  def update_issue_comment; end

  sig { returns(T::Boolean) }
  def update_issue_comment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssueIssueTypePayload)) }
  def update_issue_issue_type; end

  sig { returns(T::Boolean) }
  def update_issue_issue_type?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssueTypePayload)) }
  def update_issue_type; end

  sig { returns(T::Boolean) }
  def update_issue_type?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssuesBulkPayload)) }
  def update_issues_bulk; end

  sig { returns(T::Boolean) }
  def update_issues_bulk?; end

  sig { returns(T.nilable(PlatformTypes::UpdateIssuesBulkByQueryPayload)) }
  def update_issues_bulk_by_query; end

  sig { returns(T::Boolean) }
  def update_issues_bulk_by_query?; end

  sig { returns(T.nilable(PlatformTypes::UpdateLabelPayload)) }
  def update_label; end

  sig { returns(T::Boolean) }
  def update_label?; end

  sig { returns(T.nilable(PlatformTypes::UpdateLabelByNamePayload)) }
  def update_label_by_name; end

  sig { returns(T::Boolean) }
  def update_label_by_name?; end

  sig { returns(T.nilable(PlatformTypes::UpdateMarketplaceListingPlanPayload)) }
  def update_marketplace_listing_plan; end

  sig { returns(T::Boolean) }
  def update_marketplace_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::UpdateMarketplaceListingScreenshotPayload)) }
  def update_marketplace_listing_screenshot; end

  sig { returns(T::Boolean) }
  def update_marketplace_listing_screenshot?; end

  sig { returns(T.nilable(PlatformTypes::UpdateMarketplaceOrderPreviewPayload)) }
  def update_marketplace_order_preview; end

  sig { returns(T::Boolean) }
  def update_marketplace_order_preview?; end

  sig { returns(T.nilable(PlatformTypes::UpdateMobilePushNotificationSchedulesPayload)) }
  def update_mobile_push_notification_schedules; end

  sig { returns(T::Boolean) }
  def update_mobile_push_notification_schedules?; end

  sig { returns(T.nilable(PlatformTypes::UpdateMobilePushNotificationSettingsPayload)) }
  def update_mobile_push_notification_settings; end

  sig { returns(T::Boolean) }
  def update_mobile_push_notification_settings?; end

  sig { returns(T.nilable(PlatformTypes::UpdateNotificationRestrictionSettingPayload)) }
  def update_notification_restriction_setting; end

  sig { returns(T::Boolean) }
  def update_notification_restriction_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateNotificationSettingsPayload)) }
  def update_notification_settings; end

  sig { returns(T::Boolean) }
  def update_notification_settings?; end

  sig { returns(T.nilable(PlatformTypes::UpdateNotificationViewPreferencePayload)) }
  def update_notification_view_preference; end

  sig { returns(T::Boolean) }
  def update_notification_view_preference?; end

  sig { returns(T.nilable(PlatformTypes::UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload)) }
  def update_organization_allow_private_repository_forking_setting; end

  sig { returns(T::Boolean) }
  def update_organization_allow_private_repository_forking_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateOrganizationWebCommitSignoffSettingPayload)) }
  def update_organization_web_commit_signoff_setting; end

  sig { returns(T::Boolean) }
  def update_organization_web_commit_signoff_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePackageFilePayload)) }
  def update_package_file; end

  sig { returns(T::Boolean) }
  def update_package_file?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePackageVersionPayload)) }
  def update_package_version; end

  sig { returns(T::Boolean) }
  def update_package_version?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePatreonSponsorabilityPayload)) }
  def update_patreon_sponsorability; end

  sig { returns(T::Boolean) }
  def update_patreon_sponsorability?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePreferredDiffViewPayload)) }
  def update_preferred_diff_view; end

  sig { returns(T::Boolean) }
  def update_preferred_diff_view?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectPayload)) }
  def update_project; end

  sig { returns(T::Boolean) }
  def update_project?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectCardPayload)) }
  def update_project_card; end

  sig { returns(T::Boolean) }
  def update_project_card?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectCollaboratorPayload)) }
  def update_project_collaborator; end

  sig { returns(T::Boolean) }
  def update_project_collaborator?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectColumnPayload)) }
  def update_project_column; end

  sig { returns(T::Boolean) }
  def update_project_column?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectDraftIssuePayload)) }
  def update_project_draft_issue; end

  sig { returns(T::Boolean) }
  def update_project_draft_issue?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectNextPayload)) }
  def update_project_next; end

  sig { returns(T::Boolean) }
  def update_project_next?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectNextItemFieldPayload)) }
  def update_project_next_item_field; end

  sig { returns(T::Boolean) }
  def update_project_next_item_field?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2Payload)) }
  def update_project_v2; end

  sig { returns(T::Boolean) }
  def update_project_v2?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2CollaboratorsPayload)) }
  def update_project_v2_collaborators; end

  sig { returns(T::Boolean) }
  def update_project_v2_collaborators?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2DraftIssuePayload)) }
  def update_project_v2_draft_issue; end

  sig { returns(T::Boolean) }
  def update_project_v2_draft_issue?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2FieldPayload)) }
  def update_project_v2_field; end

  sig { returns(T::Boolean) }
  def update_project_v2_field?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2ItemFieldValuePayload)) }
  def update_project_v2_item_field_value; end

  sig { returns(T::Boolean) }
  def update_project_v2_item_field_value?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2ItemPositionPayload)) }
  def update_project_v2_item_position; end

  sig { returns(T::Boolean) }
  def update_project_v2_item_position?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2LastViewedPayload)) }
  def update_project_v2_last_viewed; end

  sig { returns(T::Boolean) }
  def update_project_v2_last_viewed?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectV2StatusUpdatePayload)) }
  def update_project_v2_status_update; end

  sig { returns(T::Boolean) }
  def update_project_v2_status_update?; end

  sig { returns(T.nilable(PlatformTypes::UpdateProjectWorkflowPayload)) }
  def update_project_workflow; end

  sig { returns(T::Boolean) }
  def update_project_workflow?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePullRequestPayload)) }
  def update_pull_request; end

  sig { returns(T::Boolean) }
  def update_pull_request?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePullRequestBranchPayload)) }
  def update_pull_request_branch; end

  sig { returns(T::Boolean) }
  def update_pull_request_branch?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePullRequestReviewPayload)) }
  def update_pull_request_review; end

  sig { returns(T::Boolean) }
  def update_pull_request_review?; end

  sig { returns(T.nilable(PlatformTypes::UpdatePullRequestReviewCommentPayload)) }
  def update_pull_request_review_comment; end

  sig { returns(T::Boolean) }
  def update_pull_request_review_comment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateRefPayload)) }
  def update_ref; end

  sig { returns(T::Boolean) }
  def update_ref?; end

  sig { returns(T.nilable(PlatformTypes::UpdateRefsPayload)) }
  def update_refs; end

  sig { returns(T::Boolean) }
  def update_refs?; end

  sig { returns(T.nilable(PlatformTypes::UpdateRepositoryPayload)) }
  def update_repository; end

  sig { returns(T::Boolean) }
  def update_repository?; end

  sig { returns(T.nilable(PlatformTypes::UpdateRepositoryRulesetPayload)) }
  def update_repository_ruleset; end

  sig { returns(T::Boolean) }
  def update_repository_ruleset?; end

  sig { returns(T.nilable(PlatformTypes::UpdateRepositoryWebCommitSignoffSettingPayload)) }
  def update_repository_web_commit_signoff_setting; end

  sig { returns(T::Boolean) }
  def update_repository_web_commit_signoff_setting?; end

  sig { returns(T.nilable(PlatformTypes::UpdateSavedViewPayload)) }
  def update_saved_view; end

  sig { returns(T::Boolean) }
  def update_saved_view?; end

  sig { returns(T.nilable(PlatformTypes::UpdateSponsorshipPreferencesPayload)) }
  def update_sponsorship_preferences; end

  sig { returns(T::Boolean) }
  def update_sponsorship_preferences?; end

  sig { returns(T.nilable(PlatformTypes::UpdateStaffNotePayload)) }
  def update_staff_note; end

  sig { returns(T::Boolean) }
  def update_staff_note?; end

  sig { returns(T.nilable(PlatformTypes::UpdateSubscriptionPayload)) }
  def update_subscription; end

  sig { returns(T::Boolean) }
  def update_subscription?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamPayload)) }
  def update_team; end

  sig { returns(T::Boolean) }
  def update_team?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamDashboardSearchShortcutPayload)) }
  def update_team_dashboard_search_shortcut; end

  sig { returns(T::Boolean) }
  def update_team_dashboard_search_shortcut?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamDiscussionPayload)) }
  def update_team_discussion; end

  sig { returns(T::Boolean) }
  def update_team_discussion?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamDiscussionCommentPayload)) }
  def update_team_discussion_comment; end

  sig { returns(T::Boolean) }
  def update_team_discussion_comment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamMemberPayload)) }
  def update_team_member; end

  sig { returns(T::Boolean) }
  def update_team_member?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamProjectPayload)) }
  def update_team_project; end

  sig { returns(T::Boolean) }
  def update_team_project?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamRepositoryPayload)) }
  def update_team_repository; end

  sig { returns(T::Boolean) }
  def update_team_repository?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamReviewAssignmentPayload)) }
  def update_team_review_assignment; end

  sig { returns(T::Boolean) }
  def update_team_review_assignment?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTeamsRepositoryPayload)) }
  def update_teams_repository; end

  sig { returns(T::Boolean) }
  def update_teams_repository?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTopicPayload)) }
  def update_topic; end

  sig { returns(T::Boolean) }
  def update_topic?; end

  sig { returns(T.nilable(PlatformTypes::UpdateTopicsPayload)) }
  def update_topics; end

  sig { returns(T::Boolean) }
  def update_topics?; end

  sig { returns(T.nilable(PlatformTypes::UpdateUserDashboardNavLinksPayload)) }
  def update_user_dashboard_nav_links; end

  sig { returns(T::Boolean) }
  def update_user_dashboard_nav_links?; end

  sig { returns(T.nilable(PlatformTypes::UpdateUserDashboardPinsPayload)) }
  def update_user_dashboard_pins; end

  sig { returns(T::Boolean) }
  def update_user_dashboard_pins?; end

  sig { returns(T.nilable(PlatformTypes::UpdateUserListPayload)) }
  def update_user_list; end

  sig { returns(T::Boolean) }
  def update_user_list?; end

  sig { returns(T.nilable(PlatformTypes::UpdateUserListsForItemPayload)) }
  def update_user_lists_for_item; end

  sig { returns(T::Boolean) }
  def update_user_lists_for_item?; end

  sig { returns(T.nilable(PlatformTypes::UpdateUserMobileTimeZonePayload)) }
  def update_user_mobile_time_zone; end

  sig { returns(T::Boolean) }
  def update_user_mobile_time_zone?; end

  sig { returns(T.nilable(PlatformTypes::UpdateWhitespacePreferencePayload)) }
  def update_whitespace_preference; end

  sig { returns(T::Boolean) }
  def update_whitespace_preference?; end

  sig { returns(T.nilable(PlatformTypes::VerifyVerifiableDomainPayload)) }
  def verify_verifiable_domain; end

  sig { returns(T::Boolean) }
  def verify_verifiable_domain?; end
end
