<% if people.any? %>
  <%= render(Primer::Beta::BorderBox.new) do |component| %>
    <% component.with_header do %>
      <span class="color-fg-muted">
        <%= number_with_delimiter people.count %>
        <%= pluralize_without_number(people.count, "person") %>
        <%= "matching your filter" if params[:query].present? %>
        <%= pluralize_without_number(people.count, "has") %> access to this repository
      </span>
    <% end %>
    <% people.each do |person| %>
      <% unless domain_emails_hash.nil? %>
        <%
          domain_emails = domain_emails_hash[person.id].select { |email| current_repository.owner.show_user_email_address?(email) }
          if domain_emails.length < domain_emails_hash[person.id].length
            domain_emails << "Has approved domain email"
          end
        %>
      <% end %>
      <% component.with_row(display: :flex, justify_content: :space_between) do %>
        <%= render partial: "repositories/people/person",
                   locals: { person: person, domain_emails: domain_emails, show_domain_emails: true, permission: people_permission_hash[person.id]} %>
      <% end %>
    <% end %>
  <% end %>
  <div class="paginate-container" data-pjax data-html-cleaner-suppress-children>
    <%= will_paginate people %>
  </div>
<% elsif params[:query].present? %>
  <%= render Primer::Beta::Blankslate.new do |c| %>
    <% c.with_visual_icon(icon: "search") %>

    <% c.with_heading(tag: :h2) do %>
      <%= "There are no users matching '#{params[:query]}'." %>
    <% end %>
  <% end %>
<% else %>
  <%= render Primer::Beta::Blankslate.new do |c| %>
    <% c.with_heading(tag: :h2) do %>
      No users with access to this repository.
    <% end %>
  <% end %>
<% end %>
