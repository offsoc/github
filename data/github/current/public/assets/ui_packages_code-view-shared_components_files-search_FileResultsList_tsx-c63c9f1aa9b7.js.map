{"version":3,"file":"chunk-ui_packages_code-view-shared_components_files-search_FileResultsList_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/behaviors/dist/esm/scroll-into-view.js","node_modules/fzy.js/index.js","ui/packages/code-view-shared/utilities/web-worker.ts","ui/packages/code-view-shared/worker-jobs/find-file.ts","ui/packages/code-view-shared/hooks/use-tree-list.ts","ui/packages/code-view-shared/components/files-search/FileResultsList.tsx","ui/packages/code-view-shared/components/files-search/FilesSearchBox.tsx"],"sourcesContent":["export function scrollIntoView(child, viewingArea, { direction = 'vertical', startMargin = 0, endMargin = 0, behavior = 'smooth' } = {}) {\n    const startSide = direction === 'vertical' ? 'top' : 'left';\n    const endSide = direction === 'vertical' ? 'bottom' : 'right';\n    const scrollSide = direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n    const { [startSide]: childStart, [endSide]: childEnd } = child.getBoundingClientRect();\n    const { [startSide]: viewingAreaStart, [endSide]: viewingAreaEnd } = viewingArea.getBoundingClientRect();\n    const isChildStartAboveViewingArea = childStart < viewingAreaStart + startMargin;\n    const isChildBottomBelowViewingArea = childEnd > viewingAreaEnd - endMargin;\n    if (isChildStartAboveViewingArea) {\n        const scrollHeightToChildStart = childStart - viewingAreaStart + viewingArea[scrollSide];\n        viewingArea.scrollTo({ behavior, [startSide]: scrollHeightToChildStart - startMargin });\n    }\n    else if (isChildBottomBelowViewingArea) {\n        const scrollHeightToChildBottom = childEnd - viewingAreaEnd + viewingArea[scrollSide];\n        viewingArea.scrollTo({ behavior, [startSide]: scrollHeightToChildBottom + endMargin });\n    }\n}\n","var SCORE_MIN = -Infinity;\nvar SCORE_MAX = Infinity;\n\nvar SCORE_GAP_LEADING = -0.005\nvar SCORE_GAP_TRAILING = -0.005\nvar SCORE_GAP_INNER = -0.01\nvar SCORE_MATCH_CONSECUTIVE = 1.0\nvar SCORE_MATCH_SLASH = 0.9\nvar SCORE_MATCH_WORD = 0.8\nvar SCORE_MATCH_CAPITAL = 0.7\nvar SCORE_MATCH_DOT = 0.6\n\nfunction islower(s) {\n\treturn s.toLowerCase() === s;\n}\n\nfunction isupper(s) {\n\treturn s.toUpperCase() === s;\n}\n\nfunction precompute_bonus(haystack) {\n\t/* Which positions are beginning of words */\n\tvar m = haystack.length;\n\tvar match_bonus = new Array(m);\n\n\tvar last_ch = '/';\n\tfor (var i = 0; i < m; i++) {\n\t\tvar ch = haystack[i];\n\n\t\tif (last_ch === '/') {\n\t\t\tmatch_bonus[i] = SCORE_MATCH_SLASH;\n\t\t} else if (last_ch === '-' || last_ch === '_' || last_ch === ' ') {\n\t\t\tmatch_bonus[i] = SCORE_MATCH_WORD;\n\t\t} else if (last_ch === '.') {\n\t\t\tmatch_bonus[i] = SCORE_MATCH_DOT;\n\t\t} else if (islower(last_ch) && isupper(ch)) {\n\t\t\tmatch_bonus[i] = SCORE_MATCH_CAPITAL;\n\t\t} else {\n\t\t\tmatch_bonus[i] = 0;\n\t\t}\n\n\t\tlast_ch = ch;\n\t}\n\n\treturn match_bonus;\n}\n\nfunction compute(needle, haystack, D, M) {\n\tvar n = needle.length;\n\tvar m = haystack.length;\n\n\tvar lower_needle = needle.toLowerCase();\n\tvar lower_haystack = haystack.toLowerCase();\n\n\tvar match_bonus = precompute_bonus(haystack, match_bonus);\n\n\t/*\n\t * D[][] Stores the best score for this position ending with a match.\n\t * M[][] Stores the best possible score at this position.\n\t */\n\n\tfor (var i = 0; i < n; i++) {\n\t\tD[i] = new Array(m);\n\t\tM[i] = new Array(m);\n\n\t\tvar prev_score = SCORE_MIN;\n\t\tvar gap_score = i === n - 1 ? SCORE_GAP_TRAILING : SCORE_GAP_INNER;\n\n\t\tfor (var j = 0; j < m; j++) {\n\t\t\tif (lower_needle[i] === lower_haystack[j]) {\n\t\t\t\tvar score = SCORE_MIN;\n\t\t\t\tif (!i) {\n\t\t\t\t\tscore = (j * SCORE_GAP_LEADING) + match_bonus[j];\n\t\t\t\t} else if (j) { /* i > 0 && j > 0*/\n\t\t\t\t\tscore = Math.max(\n\t\t\t\t\t\tM[i - 1][j - 1] + match_bonus[j],\n\n\t\t\t\t\t\t/* consecutive match, doesn't stack with match_bonus */\n\t\t\t\t\t\tD[i - 1][j - 1] + SCORE_MATCH_CONSECUTIVE);\n\t\t\t\t}\n\t\t\t\tD[i][j] = score;\n\t\t\t\tM[i][j] = prev_score = Math.max(score, prev_score + gap_score);\n\t\t\t} else {\n\t\t\t\tD[i][j] = SCORE_MIN;\n\t\t\t\tM[i][j] = prev_score = prev_score + gap_score;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction score(needle, haystack) {\n\tvar n = needle.length;\n\tvar m = haystack.length;\n\n\tif (!n || !m)\n\t\treturn SCORE_MIN;\n\n\tif (n === m) {\n\t\t/* Since this method can only be called with a haystack which\n\t\t * matches needle. If the lengths of the strings are equal the\n\t\t * strings themselves must also be equal (ignoring case).\n\t\t */\n\t\treturn SCORE_MAX;\n\t}\n\n\tif (m > 1024) {\n\t\t/*\n\t\t * Unreasonably large candidate: return no score\n\t\t * If it is a valid match it will still be returned, it will\n\t\t * just be ranked below any reasonably sized candidates\n\t\t */\n\t\treturn SCORE_MIN;\n\t}\n\n\tvar D = new Array(n);\n\tvar M = new Array(n);\n\n\tcompute(needle, haystack, D, M)\n\n\treturn M[n - 1][m - 1];\n}\n\nfunction positions(needle, haystack) {\n\tvar n = needle.length;\n\tvar m = haystack.length;\n\n\tvar positions = new Array(n);\n\n\tif (!n || !m)\n\t\treturn positions;\n\n\tif (n === m) {\n\t\tfor (var i = 0; i < n; i++)\n\t\t\tpositions[i] = i;\n\t\treturn positions;\n\t}\n\n\tif (m > 1024) {\n\t\treturn positions;\n\t}\n\n\tvar D = new Array(n);\n\tvar M = new Array(n);\n\n\tcompute(needle, haystack, D, M)\n\n\t/* backtrack to find the positions of optimal matching */\n\tvar match_required = false;\n\n\tfor (var i = n - 1, j = m - 1; i >= 0; i--) {\n\t\tfor (; j >= 0; j--) {\n\t\t\t/*\n\t\t\t * There may be multiple paths which result in\n\t\t\t * the optimal weight.\n\t\t\t *\n\t\t\t * For simplicity, we will pick the first one\n\t\t\t * we encounter, the latest in the candidate\n\t\t\t * string.\n\t\t\t */\n\t\t\tif (D[i][j] !== SCORE_MIN &&\n\t\t\t    (match_required || D[i][j] === M[i][j])) {\n\t\t\t\t/* If this score was determined using\n\t\t\t\t * SCORE_MATCH_CONSECUTIVE, the\n\t\t\t\t * previous character MUST be a match\n\t\t\t\t */\n\t\t\t\tmatch_required =\n\t\t\t\t    i && j &&\n\t\t\t\t    M[i][j] === D[i - 1][j - 1] + SCORE_MATCH_CONSECUTIVE;\n\t\t\t\tpositions[i] = j--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn positions;\n}\n\nfunction hasMatch(needle, haystack) {\n  needle = needle.toLowerCase()\n  haystack = haystack.toLowerCase()\n  var l = needle.length\n  for (var i = 0, j = 0; i < l; i += 1) {\n    j = haystack.indexOf(needle[i], j) + 1\n    if (j === 0) return false\n  }\n  return true\n}\n\nexport {\n\t/* constants */\n\tSCORE_MIN,\n\tSCORE_MAX,\n\n\tSCORE_GAP_LEADING,\n\tSCORE_GAP_TRAILING,\n\tSCORE_GAP_INNER,\n\tSCORE_MATCH_CONSECUTIVE,\n\tSCORE_MATCH_SLASH,\n\tSCORE_MATCH_WORD,\n\tSCORE_MATCH_CAPITAL,\n\tSCORE_MATCH_DOT,\n\n\t/* functions */\n\tscore,\n\tpositions,\n\thasMatch\n}\n","type WorkerEventListener<Data> = (response: {data: Data}) => void\n\ninterface AbstractWorker<TRequest, TResponse> {\n  onmessage?: WorkerEventListener<TResponse>\n  postMessage(request: TRequest): void\n  terminate(): void\n}\n\n/**\n * WebWorker is an abstraction that exposes similar interface as a Service Worker.\n * However, besides the path it also requires a callback, same function as the one run in the worker thread.\n * This callback is used as a fallback if worker cannot be created.\n */\nexport class WebWorker<TRequest, TResponse> implements AbstractWorker<TRequest, TResponse> {\n  worker: Worker | MainThreadWorker<TRequest, TResponse>\n\n  set onmessage(listener: WorkerEventListener<TResponse>) {\n    this.worker.onmessage = listener\n  }\n\n  constructor(path: string, job: (request: {data: TRequest}) => TResponse) {\n    try {\n      this.worker = new Worker(path)\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Web workers are not available. Please enable web workers to benefit from the improved performance.')\n      this.worker = new MainThreadWorker(job)\n    }\n  }\n\n  postMessage(request: TRequest) {\n    this.worker.postMessage(request)\n  }\n\n  terminate() {\n    this.worker.terminate()\n  }\n}\n\nexport class MainThreadWorker<TRequest, TResponse> implements AbstractWorker<TRequest, TResponse> {\n  private terminated = false\n\n  onmessage: WorkerEventListener<TResponse> | undefined\n\n  constructor(private job: (request: {data: TRequest}) => TResponse) {}\n\n  async postMessage(request: TRequest) {\n    if (this.terminated) {\n      return\n    }\n    const response = {data: this.job({data: request})}\n    this.onmessage?.(response)\n  }\n\n  terminate() {\n    this.terminated = true\n  }\n}\n","import memoize from '@github/memoize'\nimport {hasMatch, score} from 'fzy.js'\n\nexport interface FindFileRequest {\n  baseList: string[]\n  query: string\n  startTime: number\n}\n\nexport interface FindFileResponse {\n  query: string\n  list: string[]\n  baseCount: number\n  startTime: number\n}\n\nconst fuzzyScore = memoize(score)\n\nexport function findFileWorkerJob({data}: {data: FindFileRequest}): FindFileResponse {\n  const {query, baseList, startTime} = data\n  const queryWithoutBackslash = query.replaceAll('\\\\', '')\n  const list = baseList\n    .filter(item => filterItem(item, queryWithoutBackslash))\n    .sort((itemA, itemB) => fuzzyScore(queryWithoutBackslash, itemB) - fuzzyScore(queryWithoutBackslash, itemA))\n\n  return {query, list, baseCount: baseList.length, startTime}\n}\n\nfunction filterItem(item: string, query: string) {\n  return query === '' || (hasMatch(query, item) && fuzzyScore(query, item) > 0)\n}\n","import memoize from '@github/memoize'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {treeListPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useEffect, useState} from 'react'\n\nasync function fetchJSON(url: string): Promise<{paths: string[]; directories: string[]} | undefined> {\n  const response = await verifiedFetchJSON(url)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return undefined\n  }\n}\n\n// We need to memoize to prevent fetching it more than once when the component is unmounted\n// and mounted again because user filters, then get back to the tree and then filters again.\nconst memoizeCache = new Map()\nconst memoizedFetch = memoize<[string], Promise<{paths: string[]; directories: string[]} | undefined>, unknown>(\n  fetchJSON,\n  {cache: memoizeCache},\n)\n\nexport function resetTreeListMemoizeFetch() {\n  memoizeCache.clear()\n}\n\ninterface TreeListState {\n  list: string[]\n  directories: string[]\n  loading?: boolean\n  error?: boolean\n}\n\nexport function useTreeList(commitOid: string, load: boolean, excludeDirectories?: boolean) {\n  const repo = useCurrentRepository()\n  const [state, setState] = useState<TreeListState>({list: [], directories: [], loading: true})\n\n  const treeListUrl = treeListPath({repo, commitOid, includeDirectories: !excludeDirectories})\n\n  useEffect(() => {\n    let cancelled = false\n    const update = async () => {\n      setState({list: [], directories: [], loading: true})\n      const data = await memoizedFetch(treeListUrl)\n\n      if (cancelled) {\n        return\n      }\n\n      const files = data?.paths || []\n      const directories = data?.directories || []\n      const list = files.concat(directories).sort()\n\n      setState({list, directories, error: !data})\n    }\n\n    load && update()\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [treeListUrl, load, excludeDirectories])\n\n  return state\n}\n","import {useFileQueryContext} from '../../contexts/FileQueryContext'\nimport {useFilesPageInfo} from '../../contexts/FilesPageInfoContext'\nimport {useReposAnalytics} from '../../hooks/use-repos-analytics'\nimport {useUrlCreator} from '../../hooks/use-url-creator'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {getScrollableParent} from '@github-ui/get-scrollable-parent'\nimport {codeNavSearchPath} from '@github-ui/paths'\nimport {Link} from '@github-ui/react-core/link'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {FocusKeys, scrollIntoView} from '@primer/behaviors'\nimport {FileDirectoryFillIcon, FileIcon} from '@primer/octicons-react'\nimport {\n  ActionList,\n  AnchoredOverlay,\n  Box,\n  Flash,\n  Link as PrimerLink,\n  Octicon,\n  Spinner,\n  type SxProp,\n  useFocusZone,\n} from '@primer/react'\nimport {positions} from 'fzy.js'\nimport React, {useMemo} from 'react'\n\nimport {WebWorker} from '../../utilities/web-worker'\nimport {findFileWorkerJob, type FindFileRequest, type FindFileResponse} from '../../worker-jobs/find-file'\nimport {FilesSearchBox, isSearchUrl} from './FilesSearchBox'\nimport {useTreeList} from '../../hooks/use-tree-list'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\n\nconst LIST_SIZE = 40\n\nconst defaultConfig = {\n  excludeDirectories: false,\n  excludeSeeAllResults: false,\n}\n\ntype FileResultsConfig = {\n  excludeDirectories?: boolean\n  excludeSeeAllResults?: boolean\n  useOverlay?: boolean\n}\n\ntype FileResultsListProps = {\n  actionListSx?: BetterSystemStyleObject\n  additionalResults?: string[]\n  commitOid: string\n  config?: FileResultsConfig\n  findFileWorkerPath: string\n  getItemUrl?(path: string, isDirectory: boolean, hash: string): string\n  onRenderRow?(): void\n  onItemSelected?: () => void\n  searchBoxRef?: React.RefObject<HTMLInputElement>\n} & SxProp\n\nexport default function FileResultsList({\n  actionListSx = {},\n  additionalResults,\n  commitOid,\n  config = defaultConfig,\n  findFileWorkerPath,\n  getItemUrl,\n  onRenderRow,\n  onItemSelected,\n  searchBoxRef,\n  sx = {},\n}: FileResultsListProps) {\n  const {excludeDirectories, excludeSeeAllResults} = config\n  const {query, setQuery} = useFileQueryContext()\n  const repo = useCurrentRepository()\n  const internalInputRef = React.useRef<HTMLInputElement>(null)\n  const inputRef = searchBoxRef ?? internalInputRef\n  // Mount results component early to start fetching search paths before user starts typing\n  // for a more responsive experience.\n  const [preloadSearch, setPreloadSearch] = React.useState(false || query.length > 0)\n  const [overlayOpen, setOverlayOpen] = React.useState(!!query)\n  const {list, directories, loading, error} = useTreeList(commitOid, preloadSearch, !!excludeDirectories)\n  const {path} = useFilesPageInfo()\n  const {getUrl} = useUrlCreator()\n  const {queryText, queryLine} = parseQuery(query)\n  const combinedList = useMemo(() => [...list, ...(additionalResults ?? [])].sort(), [additionalResults, list])\n  const {matches, clearMatches} = useFilter(combinedList, queryText, findFileWorkerPath, preloadSearch)\n  const {sendRepoClickEvent} = useReposAnalytics()\n  const navigate = useNavigate()\n  const [focusedSearchIndex, setFocusedSearchIndex] = React.useState<number>(0)\n  const [listFocusVisible, setListFocusVisible] = React.useState(isSearchUrl())\n  const allResultsLink = React.useRef<HTMLAnchorElement>(null)\n  const textInputContainerRef = React.useRef<HTMLDivElement>(null)\n  const overlayId = 'file-results-list'\n  const {sendRepoKeyDownEvent} = useReposAnalytics()\n\n  // This is SSR safe because we will wrap calls to FileResultsList with `lazy`\n  const {screenSize} = useScreenSize()\n  const useOverlay = config.useOverlay ?? screenSize >= ScreenSize.large\n\n  const onRowClick = React.useCallback(() => {\n    sendRepoClickEvent('FILE_TREE.SEARCH_RESULT_CLICK')\n    onItemSelected?.()\n    setOverlayOpen(false)\n  }, [sendRepoClickEvent, onItemSelected])\n\n  const buildUrl = (itemPath: string, isDirectory: boolean, hash: string) => {\n    if (getItemUrl) return getItemUrl(itemPath, isDirectory, hash)\n\n    return getUrl({\n      path: itemPath,\n      action: isDirectory ? 'tree' : 'blob',\n      hash,\n    })\n  }\n\n  const {containerRef: listRef} = useFocusZone(\n    {\n      bindKeys: FocusKeys.ArrowVertical | FocusKeys.HomeAndEnd,\n      focusInStrategy: 'previous',\n    },\n    [loading, error],\n  )\n\n  React.useEffect(() => {\n    if (!query) {\n      setOverlayOpen(false)\n    }\n  }, [query])\n\n  React.useEffect(() => {\n    if (document.activeElement !== inputRef.current && useOverlay) {\n      setOverlayOpen(false)\n    }\n  }, [path, inputRef, useOverlay])\n\n  const displayMatches = matches?.slice(0, LIST_SIZE) || []\n\n  const matchesTruncated = matches && matches.length > displayMatches.length\n\n  const handleSearchBoxKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const {key, shiftKey, metaKey, altKey, ctrlKey} = event\n    if (shiftKey || metaKey || altKey) return\n\n    if (key === 'Escape') {\n      if (query) {\n        sendRepoKeyDownEvent('FILE_TREE.CANCEL_SEARCH')\n        setQuery('')\n        clearMatches()\n      } else if (document.activeElement) {\n        // eslint-disable-next-line github/no-blur\n        ;(document.activeElement as HTMLInputElement).blur()\n      }\n    } else if (!query) {\n      return\n    } else if (key === 'Enter') {\n      if (!excludeSeeAllResults && matchesTruncated && focusedSearchIndex === displayMatches.length) {\n        navigate(\n          codeNavSearchPath({\n            owner: repo.ownerLogin,\n            repo: repo.name,\n            searchTerm: `path:${queryText}`,\n          }),\n        )\n        onItemSelected?.()\n      } else if (displayMatches[focusedSearchIndex]) {\n        const itemUrl = buildUrl(displayMatches[focusedSearchIndex], false, queryLine ? `L${queryLine}` : '')\n        navigate(itemUrl)\n        setOverlayOpen(false)\n        onItemSelected?.()\n      }\n    } else if (key === 'ArrowDown' || (ctrlKey && key === 'n')) {\n      // Move to the \"See all results\" link\n      if (!excludeSeeAllResults && matchesTruncated && focusedSearchIndex >= displayMatches.length - 1) {\n        setFocusedSearchIndex(displayMatches.length)\n        if (allResultsLink.current && listRef.current) {\n          const container = getScrollableParent(listRef.current)\n          scrollIntoView(allResultsLink.current, container as HTMLElement, {behavior: 'instant'})\n        }\n      } else {\n        setFocusedSearchIndex(Math.min(focusedSearchIndex + 1, displayMatches.length - 1))\n      }\n\n      event.preventDefault()\n      return\n    } else if (key === 'ArrowUp' || (ctrlKey && key === 'p')) {\n      setFocusedSearchIndex(Math.max(focusedSearchIndex - 1, 0))\n      event.preventDefault()\n      return\n    }\n  }\n\n  const listContents = (\n    <Box\n      sx={{\n        maxHeight: useOverlay ? '60vh' : '100% !important',\n        overflowY: 'auto',\n        scrollbarGutter: 'stable',\n        maxWidth: '100vw',\n        '@media (max-width: 768px)': {\n          ml: 3,\n          mr: 2,\n        },\n      }}\n    >\n      {error ? (\n        <Flash variant=\"danger\" className=\"m-3\">\n          Failed to search\n        </Flash>\n      ) : (\n        <ActionList\n          ref={listRef as React.RefObject<HTMLUListElement>}\n          sx={{\n            overflow: 'auto',\n            p: useOverlay ? 2 : 3,\n            width: '100%',\n            pr: useOverlay ? 3 : 0,\n            pt: useOverlay ? 3 : '2px !important',\n            ...actionListSx,\n          }}\n          role=\"listbox\"\n        >\n          {!loading &&\n            displayMatches.map((match, index) => {\n              const isDirectory = directories.includes(match)\n              const itemUrl = buildUrl(match, isDirectory, queryLine ? `L${queryLine}` : '')\n              return (\n                <MemoizedFileResultRow\n                  active={match === path}\n                  index={index}\n                  key={match}\n                  focused={listFocusVisible && focusedSearchIndex === index}\n                  match={match}\n                  onRender={onRenderRow}\n                  query={queryText}\n                  onClick={onRowClick}\n                  isDirectory={isDirectory}\n                  to={itemUrl}\n                  useOverlay={useOverlay}\n                  listRef={listRef}\n                />\n              )\n            })}\n\n          <div className=\"m-3 text-center\">\n            <FileResultsStatus\n              loading={loading || !matches}\n              visibleResultCount={displayMatches.length}\n              truncated={!!matchesTruncated}\n            />\n            {matchesTruncated && !excludeSeeAllResults && (\n              <>\n                &nbsp;\n                <PrimerLink\n                  id=\"see-all-results-link\"\n                  className=\"focus-visible\"\n                  ref={allResultsLink}\n                  href={codeNavSearchPath({\n                    owner: repo.ownerLogin,\n                    repo: repo.name,\n                    searchTerm: `path:${queryText}`,\n                  })}\n                  sx={\n                    listFocusVisible && focusedSearchIndex === displayMatches.length\n                      ? {\n                          outline: '2px solid var(--focus-outlineColor, var(--color-accent-fg))',\n                          outlineOffset: '-2px',\n                          boxShadow: 'none',\n                        }\n                      : {}\n                  }\n                >\n                  See all results\n                </PrimerLink>\n              </>\n            )}\n          </div>\n        </ActionList>\n      )}\n    </Box>\n  )\n\n  return (\n    <>\n      <Box ref={textInputContainerRef} sx={{mx: 2, ml: 3, ...sx}}>\n        <FilesSearchBox\n          ariaActiveDescendant={\n            (useOverlay || !query) && (!useOverlay || !overlayOpen)\n              ? undefined\n              : listFocusVisible && focusedSearchIndex > -1\n                ? matchesTruncated && focusedSearchIndex === displayMatches.length\n                  ? 'see-all-results-link'\n                  : `file-result-${focusedSearchIndex}`\n                : undefined\n          }\n          ariaExpanded={useOverlay ? overlayOpen : undefined}\n          ariaHasPopup={useOverlay}\n          ariaControls={useOverlay ? overlayId : undefined}\n          ref={inputRef}\n          query={query}\n          onKeyDown={handleSearchBoxKeyDown}\n          onPreload={() => setPreloadSearch(true)}\n          onSearch={newQuery => {\n            setQuery(newQuery)\n            if (newQuery) {\n              setOverlayOpen(true)\n            } else {\n              clearMatches()\n              setOverlayOpen(false)\n            }\n            setFocusedSearchIndex(0)\n          }}\n          onBlur={e => {\n            if (!listRef.current?.contains(e.relatedTarget)) {\n              setOverlayOpen(false)\n              setListFocusVisible(false)\n            }\n          }}\n          onFocus={() => {\n            if (query) {\n              setOverlayOpen(true)\n            }\n            setListFocusVisible(true)\n          }}\n          sx={{minWidth: '160px'}}\n        />\n      </Box>\n      {useOverlay && (\n        <AnchoredOverlay\n          anchorRef={textInputContainerRef}\n          open={useOverlay && overlayOpen}\n          renderAnchor={null}\n          onClose={() => {\n            setOverlayOpen(false)\n          }}\n          focusZoneSettings={{disabled: true}}\n          focusTrapSettings={{disabled: true}}\n          width=\"xlarge\"\n          align=\"end\"\n          overlayProps={{id: overlayId, role: 'dialog'}}\n        >\n          {listContents}\n        </AnchoredOverlay>\n      )}\n      {!useOverlay && query && listContents}\n    </>\n  )\n}\n\ninterface FileResultStatusProps {\n  visibleResultCount: number\n  truncated: boolean\n  loading: boolean\n}\n\nfunction FileResultsStatus({visibleResultCount, truncated, loading}: FileResultStatusProps) {\n  const screenReaderOnly = !loading && !truncated && visibleResultCount !== 0\n  return (\n    <span\n      key=\"results-count-status\"\n      role=\"status\"\n      className={screenReaderOnly ? 'sr-only' : undefined}\n      aria-label={loading ? 'Loading' : undefined}\n    >\n      {loading ? (\n        <Spinner size=\"large\" />\n      ) : visibleResultCount === 0 ? (\n        'No matches found'\n      ) : truncated ? (\n        `First ${visibleResultCount} files shown.`\n      ) : (\n        `Showing ${visibleResultCount} files.`\n      )}\n    </span>\n  )\n}\n\ninterface FileResultRowProps {\n  active: boolean\n  focused?: boolean\n  index: number\n  match: string\n  isDirectory: boolean\n  onClick?(): void\n  query: string\n  to: string\n  onRender?(): void\n  useOverlay: boolean\n  listRef?: React.RefObject<HTMLElement>\n}\n\nexport const FileResultRow = ({\n  active,\n  focused,\n  index,\n  match,\n  query,\n  to,\n  isDirectory,\n  onClick,\n  onRender,\n  useOverlay,\n  listRef,\n}: FileResultRowProps) => {\n  const positionsList = positions(query, match)\n  onRender?.()\n\n  const ref = React.useRef<HTMLAnchorElement>(null)\n  const leadingIcon = isDirectory ? DirectoryIcon : FileResultIcon\n\n  React.useEffect(() => {\n    if (focused && ref.current && listRef?.current) {\n      const container = getScrollableParent(listRef.current)\n      scrollIntoView(ref.current, container as HTMLElement, {behavior: 'instant'})\n    }\n  }, [focused, listRef])\n\n  let sx = {}\n  if (focused) {\n    sx = {\n      outline: 'none',\n      border: '2 solid',\n      boxShadow: '0 0 0 2px #0969da',\n    }\n  }\n\n  return (\n    <ActionList.Item\n      key={match}\n      id={`file-result-${index}`}\n      ref={ref}\n      as={Link}\n      onSelect={onClick}\n      to={to}\n      active={active}\n      sx={{\n        fontWeight: 'normal',\n        ':hover': {\n          textDecoration: 'none',\n        },\n        mx: '2px',\n        width: 'calc(100% - 4px)',\n        ...sx,\n      }}\n      role=\"option\"\n      data-focus-visible-added={focused || undefined}\n      tabIndex={useOverlay ? -1 : 0}\n    >\n      <div className=\"d-flex\">\n        <div className=\"d-flex flex-1 flex-column overflow-hidden\">\n          <HighlightMatch\n            text={match}\n            positionsList={positionsList}\n            sx={{color: 'fg.muted'}}\n            LeadingIcon={leadingIcon}\n          />\n        </div>\n        {focused && (\n          <Box sx={{pl: 1, whiteSpace: 'nowrap', color: 'fg.muted'}}>{`Go to ${isDirectory ? 'folder' : 'file'}`}</Box>\n        )}\n      </div>\n    </ActionList.Item>\n  )\n}\n\nconst DirectoryIcon = () => (\n  <Octicon\n    aria-label=\"Directory\"\n    icon={FileDirectoryFillIcon}\n    sx={{color: 'var(--treeViewItem-leadingVisual-iconColor-rest, var(--color-icon-directory))', mr: 2}}\n    size=\"small\"\n  />\n)\n\nconst FileResultIcon = () => <Octicon aria-label=\"File\" icon={FileIcon} className=\"fgColor-muted mr-2\" size=\"small\" />\n\nconst MemoizedFileResultRow = React.memo(FileResultRow)\n\ninterface HighlightMatchProps extends SxProp {\n  text: string\n  positionsList: number[]\n  offset?: number\n  LeadingIcon?: React.ComponentType\n}\n\nfunction HighlightMatch({text, positionsList, sx, LeadingIcon}: HighlightMatchProps) {\n  const parts = []\n  let lastPosition = 0\n  for (const i of positionsList) {\n    if (Number(i) !== i || i < lastPosition || i > text.length) {\n      continue\n    }\n    const slice = text.slice(lastPosition, i)\n    if (slice) {\n      parts.push(allowSlashWrapping(slice))\n    }\n\n    lastPosition = i + 1\n\n    parts.push(\n      <mark key={i} className=\"text-bold bgColor-transparent fgColor-default\">\n        {text[i]}\n      </mark>,\n    )\n  }\n\n  parts.push(allowSlashWrapping(text.slice(lastPosition)))\n\n  return (\n    <Box sx={sx}>\n      <>\n        {LeadingIcon && <LeadingIcon />}\n        {parts}\n      </>\n    </Box>\n  )\n}\n\nfunction allowSlashWrapping(text: string): string {\n  // Add a zero-width-space after each slash, so that the browser can wrap the text\n  return text.replaceAll('/', '/\\u200B')\n}\n\nfunction useFilter(list: string[], query: string, workerPath: string, startWorker: boolean) {\n  const [matches, setMatches] = React.useState<string[]>()\n  const lastQueryRef = React.useRef<string>('')\n  const workerRef = React.useRef<WebWorker<FindFileRequest, FindFileResponse>>()\n  const {sendStats} = useReposAnalytics()\n  const isWorkerWorking = React.useRef(false)\n\n  const createWorker = React.useCallback(() => {\n    const worker = new WebWorker(workerPath, findFileWorkerJob)\n\n    worker.onmessage = ({data}: {data: FindFileResponse}) => {\n      isWorkerWorking.current = false\n      setMatches(data.list)\n      lastQueryRef.current = data.query\n\n      if (data.startTime) {\n        sendStats('repository.find-file', {\n          'find-file-base-count': data.baseCount,\n          'find-file-results-count': data.list.length,\n          'find-file-duration-ms': performance.now() - data.startTime,\n        })\n      }\n    }\n\n    workerRef.current = worker\n  }, [sendStats, workerPath])\n\n  React.useEffect(() => {\n    if (!startWorker) return\n    createWorker()\n\n    return function destroy() {\n      workerRef.current?.terminate()\n    }\n  }, [createWorker, startWorker])\n\n  React.useEffect(() => {\n    if (list.length && query) {\n      // If a worker is currently filtering and we get a new query,\n      // don't wait for it to finish. Terminate the worker and start a new one.\n      if (isWorkerWorking.current) {\n        workerRef.current?.terminate()\n        createWorker()\n      }\n      const canFilterPreviousMatches = lastQueryRef.current && query.startsWith(lastQueryRef.current)\n      isWorkerWorking.current = true\n      workerRef.current?.postMessage({\n        baseList: (canFilterPreviousMatches && matches) || list,\n        query,\n        startTime: performance.now(),\n      })\n    }\n    // We don't want to re-run this when `matches` change because we never have to filter again in that case\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list, query, createWorker])\n\n  return {matches, clearMatches: () => setMatches(undefined)}\n}\n\nfunction parseQuery(query: string) {\n  query = query.replaceAll(' ', '')\n  const colonIndex = query.indexOf(':')\n  if (colonIndex >= 0) {\n    return {\n      queryText: query.substring(0, colonIndex),\n      queryLine: parseInt(query.substring(colonIndex + 1), 10),\n    }\n  }\n  return {queryText: query, queryLine: undefined}\n}\n\ntry{ FileResultsList.displayName ||= 'FileResultsList' } catch {}\ntry{ FileResultsStatus.displayName ||= 'FileResultsStatus' } catch {}\ntry{ FileResultRow.displayName ||= 'FileResultRow' } catch {}\ntry{ DirectoryIcon.displayName ||= 'DirectoryIcon' } catch {}\ntry{ FileResultIcon.displayName ||= 'FileResultIcon' } catch {}\ntry{ MemoizedFileResultRow.displayName ||= 'MemoizedFileResultRow' } catch {}\ntry{ HighlightMatch.displayName ||= 'HighlightMatch' } catch {}","import {debounce} from '@github/mini-throttle'\nimport {AllShortcutsEnabled} from '../../components/AllShortcutsEnabled'\nimport {useReposAnalytics} from '../../hooks/use-repos-analytics'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {SearchIcon, XCircleFillIcon} from '@primer/octicons-react'\nimport {Box, type SxProp, TextInput} from '@primer/react'\nimport React from 'react'\n\ntype Props = {\n  ariaActiveDescendant?: string\n  ariaControls?: string\n  ariaExpanded?: boolean\n  ariaHasPopup?: boolean\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>\n  onPreload(): void\n  onSearch(query: string): void\n  onBlur?: React.FocusEventHandler<HTMLInputElement>\n  onFocus?: React.FocusEventHandler<HTMLInputElement>\n  query: string\n} & SxProp\n\nexport const FilesSearchBox = React.forwardRef<HTMLInputElement, Props>(\n  (\n    {\n      ariaActiveDescendant,\n      ariaControls,\n      ariaExpanded,\n      ariaHasPopup,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onPreload,\n      onSearch,\n      query,\n      sx = {},\n    },\n    ref,\n  ) => {\n    const {sendRepoClickEvent} = useReposAnalytics()\n    const [textValue, setTextValue] = React.useState(query)\n    const debouncedOnSearch = React.useRef(debounce((newQuery: string) => onSearch(newQuery), 250))\n\n    React.useEffect(() => {\n      setTextValue(query)\n    }, [query])\n\n    const clearAction = query ? (\n      <TextInput.Action\n        onClick={() => {\n          sendRepoClickEvent('FILE_TREE.CANCEL_SEARCH')\n          onSearch('')\n        }}\n        icon={XCircleFillIcon}\n        aria-label=\"Clear\"\n        className=\"fgColor-muted\"\n      />\n    ) : undefined\n\n    return (\n      <>\n        <TextInput\n          // support for the search param can be removed once the tree is globally avaialble.\n          // We want to focus the search box only if user navigates with ?search=1\n          autoFocus={isSearchUrl()}\n          ref={ref}\n          value={textValue}\n          onKeyDown={onKeyDown}\n          onChange={e => {\n            setTextValue(e.target.value)\n            onPreload()\n            debouncedOnSearch.current(e.target.value)\n          }}\n          sx={{display: 'flex', ...sx}}\n          aria-label=\"Go to file\"\n          aria-activedescendant={ariaActiveDescendant}\n          role={ariaHasPopup ? 'combobox' : undefined}\n          aria-controls={ariaControls}\n          aria-expanded={ariaExpanded}\n          aria-haspopup={ariaHasPopup ? 'dialog' : undefined}\n          autoCorrect=\"off\"\n          spellCheck=\"false\"\n          placeholder=\"Go to file\"\n          leadingVisual={SearchIcon}\n          trailingAction={clearAction}\n          trailingVisual={\n            clearAction\n              ? undefined\n              : () => (\n                  <AllShortcutsEnabled>\n                    <Box sx={{mr: '-6px'}}>\n                      <kbd>t</kbd>\n                    </Box>\n                  </AllShortcutsEnabled>\n                )\n          }\n          onFocus={e => {\n            onPreload()\n            e.target.select()\n            onFocus?.(e)\n          }}\n          onBlur={onBlur}\n          onClick={() => sendRepoClickEvent('FILE_TREE.SEARCH_BOX')}\n        />\n      </>\n    )\n  },\n)\n\n/**\n * Whether the URL contains ?search=1 which indicates user is searching for a file\n */\nexport function isSearchUrl() {\n  const params = new URLSearchParams(ssrSafeLocation.search)\n  return params.get('search') === '1'\n}\n\nFilesSearchBox.displayName = 'FilesSearchBox'\n"],"names":["scrollIntoView","child","viewingArea","direction","startMargin","endMargin","behavior","startSide","endSide","scrollSide","childStart","childEnd","getBoundingClientRect","viewingAreaStart","viewingAreaEnd","scrollHeightToChildStart","scrollTo","scrollHeightToChildBottom","SCORE_MIN","Infinity","SCORE_MAX","compute","needle","haystack","D","M","n","length","m","lower_needle","toLowerCase","lower_haystack","match_bonus","precompute_bonus","last_ch","i","s","ch","islower","toUpperCase","prev_score","gap_score","j","score","Math","max","positions","match_required","hasMatch","l","indexOf","WebWorker","onmessage","listener","worker","postMessage","request","terminate","constructor","path","job","Worker","e","console","warn","MainThreadWorker","terminated","response","data","fuzzyScore","memoize","findFileWorkerJob","query","baseList","startTime","queryWithoutBackslash","replaceAll","list","filter","item","sort","itemA","itemB","baseCount","fetchJSON","url","verifiedFetchJSON","ok","json","memoizeCache","Map","memoizedFetch","cache","defaultConfig","excludeDirectories","excludeSeeAllResults","FileResultsList","actionListSx","additionalResults","commitOid","config","findFileWorkerPath","getItemUrl","onRenderRow","onItemSelected","searchBoxRef","sx","setQuery","useFileQueryContext","repo","useCurrentRepository","internalInputRef","React","inputRef","preloadSearch","setPreloadSearch","overlayOpen","setOverlayOpen","directories","loading","error","useTreeList","load","state","setState","useState","treeListUrl","treeListPath","includeDirectories","useEffect","cancelled","update","files","paths","concat","useFilesPageInfo","getUrl","useUrlCreator","queryText","queryLine","parseQuery","colonIndex","substring","parseInt","undefined","matches","clearMatches","useFilter","workerPath","startWorker","setMatches","lastQueryRef","workerRef","sendStats","useReposAnalytics","isWorkerWorking","createWorker","current","performance","now","canFilterPreviousMatches","startsWith","useMemo","sendRepoClickEvent","navigate","useNavigate","focusedSearchIndex","setFocusedSearchIndex","listFocusVisible","setListFocusVisible","isSearchUrl","allResultsLink","textInputContainerRef","overlayId","sendRepoKeyDownEvent","screenSize","useScreenSize","useOverlay","ScreenSize","large","onRowClick","buildUrl","itemPath","isDirectory","hash","action","containerRef","listRef","useFocusZone","bindKeys","FocusKeys","ArrowVertical","HomeAndEnd","focusInStrategy","document","activeElement","displayMatches","slice","matchesTruncated","listContents","Box","maxHeight","overflowY","scrollbarGutter","maxWidth","ml","mr","Flash","variant","className","ActionList","ref","overflow","p","width","pr","pt","role","map","match","index","includes","itemUrl","MemoizedFileResultRow","active","focused","onRender","onClick","to","div","FileResultsStatus","visibleResultCount","truncated","PrimerLink","id","href","codeNavSearchPath","owner","ownerLogin","name","searchTerm","outline","outlineOffset","boxShadow","mx","FilesSearchBox","ariaActiveDescendant","ariaExpanded","ariaHasPopup","ariaControls","onKeyDown","key","shiftKey","metaKey","altKey","ctrlKey","event","blur","container","getScrollableParent","min","preventDefault","onPreload","onSearch","newQuery","onBlur","contains","relatedTarget","onFocus","minWidth","AnchoredOverlay","anchorRef","open","renderAnchor","onClose","focusZoneSettings","disabled","focusTrapSettings","align","overlayProps","span","screenReaderOnly","aria-label","Spinner","size","FileResultRow","positionsList","leadingIcon","DirectoryIcon","FileResultIcon","border","Item","as","Link","onSelect","fontWeight","textDecoration","data-focus-visible-added","tabIndex","HighlightMatch","text","color","LeadingIcon","pl","whiteSpace","Octicon","icon","FileDirectoryFillIcon","FileIcon","parts","lastPosition","Number","push","allowSlashWrapping","mark","displayName","textValue","setTextValue","debouncedOnSearch","debounce","clearAction","TextInput","Action","XCircleFillIcon","autoFocus","value","onChange","target","display","aria-activedescendant","aria-controls","aria-expanded","aria-haspopup","autoCorrect","spellCheck","placeholder","leadingVisual","SearchIcon","trailingAction","trailingVisual","AllShortcutsEnabled","kbd","select","params","URLSearchParams","ssrSafeLocation","search","get"],"sourceRoot":""}