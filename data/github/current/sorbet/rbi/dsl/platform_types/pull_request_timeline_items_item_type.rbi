# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::PullRequestTimelineItemsItemType`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::PullRequestTimelineItemsItemType`.

module PlatformTypes::PullRequestTimelineItemsItemType
  sig { returns(T::Boolean) }
  def added_to_merge_queue_event?; end

  sig { returns(T::Boolean) }
  def added_to_project_event?; end

  sig { returns(T::Boolean) }
  def added_to_project_v2_event?; end

  sig { returns(T::Boolean) }
  def assigned_event?; end

  sig { returns(T::Boolean) }
  def auto_merge_disabled_event?; end

  sig { returns(T::Boolean) }
  def auto_merge_enabled_event?; end

  sig { returns(T::Boolean) }
  def auto_rebase_enabled_event?; end

  sig { returns(T::Boolean) }
  def auto_squash_enabled_event?; end

  sig { returns(T::Boolean) }
  def automatic_base_change_failed_event?; end

  sig { returns(T::Boolean) }
  def automatic_base_change_succeeded_event?; end

  sig { returns(T::Boolean) }
  def base_ref_changed_event?; end

  sig { returns(T::Boolean) }
  def base_ref_deleted_event?; end

  sig { returns(T::Boolean) }
  def base_ref_force_pushed_event?; end

  sig { returns(T::Boolean) }
  def closed_event?; end

  sig { returns(T::Boolean) }
  def comment_deleted_event?; end

  sig { returns(T::Boolean) }
  def connected_event?; end

  sig { returns(T::Boolean) }
  def convert_to_draft_event?; end

  sig { returns(T::Boolean) }
  def converted_from_draft_event?; end

  sig { returns(T::Boolean) }
  def converted_note_to_issue_event?; end

  sig { returns(T::Boolean) }
  def converted_to_discussion_event?; end

  sig { returns(T::Boolean) }
  def cross_referenced_event?; end

  sig { returns(T::Boolean) }
  def demilestoned_event?; end

  sig { returns(T::Boolean) }
  def deployed_event?; end

  sig { returns(T::Boolean) }
  def deployment_environment_changed_event?; end

  sig { returns(T::Boolean) }
  def disconnected_event?; end

  sig { returns(T::Boolean) }
  def head_ref_deleted_event?; end

  sig { returns(T::Boolean) }
  def head_ref_force_pushed_event?; end

  sig { returns(T::Boolean) }
  def head_ref_restored_event?; end

  sig { returns(T::Boolean) }
  def issue_comment?; end

  sig { returns(T::Boolean) }
  def labeled_event?; end

  sig { returns(T::Boolean) }
  def locked_event?; end

  sig { returns(T::Boolean) }
  def marked_as_duplicate_event?; end

  sig { returns(T::Boolean) }
  def mentioned_event?; end

  sig { returns(T::Boolean) }
  def merged_event?; end

  sig { returns(T::Boolean) }
  def milestoned_event?; end

  sig { returns(T::Boolean) }
  def moved_columns_in_project_event?; end

  sig { returns(T::Boolean) }
  def pinned_event?; end

  sig { returns(T::Boolean) }
  def project_v2_item_status_changed_event?; end

  sig { returns(T::Boolean) }
  def pull_request_commit?; end

  sig { returns(T::Boolean) }
  def pull_request_commit_comment_thread?; end

  sig { returns(T::Boolean) }
  def pull_request_review?; end

  sig { returns(T::Boolean) }
  def pull_request_review_thread?; end

  sig { returns(T::Boolean) }
  def pull_request_revision_marker?; end

  sig { returns(T::Boolean) }
  def ready_for_review_event?; end

  sig { returns(T::Boolean) }
  def referenced_event?; end

  sig { returns(T::Boolean) }
  def removed_from_merge_queue_event?; end

  sig { returns(T::Boolean) }
  def removed_from_project_event?; end

  sig { returns(T::Boolean) }
  def removed_from_project_v2_event?; end

  sig { returns(T::Boolean) }
  def renamed_title_event?; end

  sig { returns(T::Boolean) }
  def reopened_event?; end

  sig { returns(T::Boolean) }
  def review_dismissed_event?; end

  sig { returns(T::Boolean) }
  def review_request_removed_event?; end

  sig { returns(T::Boolean) }
  def review_requested_event?; end

  sig { returns(T::Boolean) }
  def subscribed_event?; end

  sig { returns(T::Boolean) }
  def transferred_event?; end

  sig { returns(T::Boolean) }
  def unassigned_event?; end

  sig { returns(T::Boolean) }
  def unlabeled_event?; end

  sig { returns(T::Boolean) }
  def unlocked_event?; end

  sig { returns(T::Boolean) }
  def unmarked_as_duplicate_event?; end

  sig { returns(T::Boolean) }
  def unpinned_event?; end

  sig { returns(T::Boolean) }
  def unsubscribed_event?; end

  sig { returns(T::Boolean) }
  def user_blocked_event?; end

  ADDED_TO_MERGE_QUEUE_EVENT = T.let("ADDED_TO_MERGE_QUEUE_EVENT", String)
  ADDED_TO_PROJECT_EVENT = T.let("ADDED_TO_PROJECT_EVENT", String)
  ADDED_TO_PROJECT_V2_EVENT = T.let("ADDED_TO_PROJECT_V2_EVENT", String)
  ASSIGNED_EVENT = T.let("ASSIGNED_EVENT", String)
  AUTOMATIC_BASE_CHANGE_FAILED_EVENT = T.let("AUTOMATIC_BASE_CHANGE_FAILED_EVENT", String)
  AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT = T.let("AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT", String)
  AUTO_MERGE_DISABLED_EVENT = T.let("AUTO_MERGE_DISABLED_EVENT", String)
  AUTO_MERGE_ENABLED_EVENT = T.let("AUTO_MERGE_ENABLED_EVENT", String)
  AUTO_REBASE_ENABLED_EVENT = T.let("AUTO_REBASE_ENABLED_EVENT", String)
  AUTO_SQUASH_ENABLED_EVENT = T.let("AUTO_SQUASH_ENABLED_EVENT", String)
  BASE_REF_CHANGED_EVENT = T.let("BASE_REF_CHANGED_EVENT", String)
  BASE_REF_DELETED_EVENT = T.let("BASE_REF_DELETED_EVENT", String)
  BASE_REF_FORCE_PUSHED_EVENT = T.let("BASE_REF_FORCE_PUSHED_EVENT", String)
  CLOSED_EVENT = T.let("CLOSED_EVENT", String)
  COMMENT_DELETED_EVENT = T.let("COMMENT_DELETED_EVENT", String)
  CONNECTED_EVENT = T.let("CONNECTED_EVENT", String)
  CONVERTED_FROM_DRAFT_EVENT = T.let("CONVERTED_FROM_DRAFT_EVENT", String)
  CONVERTED_NOTE_TO_ISSUE_EVENT = T.let("CONVERTED_NOTE_TO_ISSUE_EVENT", String)
  CONVERTED_TO_DISCUSSION_EVENT = T.let("CONVERTED_TO_DISCUSSION_EVENT", String)
  CONVERT_TO_DRAFT_EVENT = T.let("CONVERT_TO_DRAFT_EVENT", String)
  CROSS_REFERENCED_EVENT = T.let("CROSS_REFERENCED_EVENT", String)
  DEMILESTONED_EVENT = T.let("DEMILESTONED_EVENT", String)
  DEPLOYED_EVENT = T.let("DEPLOYED_EVENT", String)
  DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT = T.let("DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT", String)
  DISCONNECTED_EVENT = T.let("DISCONNECTED_EVENT", String)
  HEAD_REF_DELETED_EVENT = T.let("HEAD_REF_DELETED_EVENT", String)
  HEAD_REF_FORCE_PUSHED_EVENT = T.let("HEAD_REF_FORCE_PUSHED_EVENT", String)
  HEAD_REF_RESTORED_EVENT = T.let("HEAD_REF_RESTORED_EVENT", String)
  ISSUE_COMMENT = T.let("ISSUE_COMMENT", String)
  LABELED_EVENT = T.let("LABELED_EVENT", String)
  LOCKED_EVENT = T.let("LOCKED_EVENT", String)
  MARKED_AS_DUPLICATE_EVENT = T.let("MARKED_AS_DUPLICATE_EVENT", String)
  MENTIONED_EVENT = T.let("MENTIONED_EVENT", String)
  MERGED_EVENT = T.let("MERGED_EVENT", String)
  MILESTONED_EVENT = T.let("MILESTONED_EVENT", String)
  MOVED_COLUMNS_IN_PROJECT_EVENT = T.let("MOVED_COLUMNS_IN_PROJECT_EVENT", String)
  PINNED_EVENT = T.let("PINNED_EVENT", String)
  PROJECT_V2_ITEM_STATUS_CHANGED_EVENT = T.let("PROJECT_V2_ITEM_STATUS_CHANGED_EVENT", String)
  PULL_REQUEST_COMMIT = T.let("PULL_REQUEST_COMMIT", String)
  PULL_REQUEST_COMMIT_COMMENT_THREAD = T.let("PULL_REQUEST_COMMIT_COMMENT_THREAD", String)
  PULL_REQUEST_REVIEW = T.let("PULL_REQUEST_REVIEW", String)
  PULL_REQUEST_REVIEW_THREAD = T.let("PULL_REQUEST_REVIEW_THREAD", String)
  PULL_REQUEST_REVISION_MARKER = T.let("PULL_REQUEST_REVISION_MARKER", String)
  READY_FOR_REVIEW_EVENT = T.let("READY_FOR_REVIEW_EVENT", String)
  REFERENCED_EVENT = T.let("REFERENCED_EVENT", String)
  REMOVED_FROM_MERGE_QUEUE_EVENT = T.let("REMOVED_FROM_MERGE_QUEUE_EVENT", String)
  REMOVED_FROM_PROJECT_EVENT = T.let("REMOVED_FROM_PROJECT_EVENT", String)
  REMOVED_FROM_PROJECT_V2_EVENT = T.let("REMOVED_FROM_PROJECT_V2_EVENT", String)
  RENAMED_TITLE_EVENT = T.let("RENAMED_TITLE_EVENT", String)
  REOPENED_EVENT = T.let("REOPENED_EVENT", String)
  REVIEW_DISMISSED_EVENT = T.let("REVIEW_DISMISSED_EVENT", String)
  REVIEW_REQUESTED_EVENT = T.let("REVIEW_REQUESTED_EVENT", String)
  REVIEW_REQUEST_REMOVED_EVENT = T.let("REVIEW_REQUEST_REMOVED_EVENT", String)
  SUBSCRIBED_EVENT = T.let("SUBSCRIBED_EVENT", String)
  TRANSFERRED_EVENT = T.let("TRANSFERRED_EVENT", String)
  UNASSIGNED_EVENT = T.let("UNASSIGNED_EVENT", String)
  UNLABELED_EVENT = T.let("UNLABELED_EVENT", String)
  UNLOCKED_EVENT = T.let("UNLOCKED_EVENT", String)
  UNMARKED_AS_DUPLICATE_EVENT = T.let("UNMARKED_AS_DUPLICATE_EVENT", String)
  UNPINNED_EVENT = T.let("UNPINNED_EVENT", String)
  UNSUBSCRIBED_EVENT = T.let("UNSUBSCRIBED_EVENT", String)
  USER_BLOCKED_EVENT = T.let("USER_BLOCKED_EVENT", String)
end
