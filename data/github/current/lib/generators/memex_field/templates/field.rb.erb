# typed: strict
# frozen_string_literal: true

class MemexProjectColumn::<%= class_name %> < MemexProjectColumn::Field
  extend T::Sig

  sig { override.returns(Elastomer::Interfaces::Mapping::FieldDataType) }
  def self.elasticsearch_mapping
    # TODO: Return the appropriate mapping type for this field. For example:
    # Elastomer::Interfaces::Mapping::FieldDataTypes::KeywordMultiField.new
  end

  sig do
    override
      .params(item: MemexProjectItem)
      .returns(Elastomer::Interfaces::Document::MemexProjectItem::<%= class_name %>Value)
  end
  def elasticsearch_document(item)
    # TODO: Return the appropriate value for this field given the memex project item.
  end

  sig do
    override
      .params(context: Elastomer::Interfaces::Document::MemexProjectItem::SeedContext)
      .returns(Elastomer::Interfaces::Document::MemexProjectItem::<%= class_name %>Value)
  end
  def seed_elasticsearch_document(context)
    # TODO: Return a seed value for this field used for seeding our benchmark tests
    # (Used in `bin/seed memex_elasticsearch_benchmark`)
  end
end
