<%= render(
  Primer::Box.new(
    display: :flex,
    test_selector: "secret-scanning-table-component-row",
  )
) do %>
  <%= render(Primer::Box.new(display: :flex, mr: 2 , mt: 1)) do %>
    <%= render(SecurityCenter::StateComponent.new(icon: alert_state_icon)) %>
  <% end %>

  <%= render(Primer::Box.new(style: "width: 100%;")) do %>
    <%= render(
      Primer::Box.new(
        display: :flex,
        flex_wrap: :reverse,
        justify_content: :space_between
      )
    ) do %>
      <%= render(Primer::Box.new(display: :flex, flex_wrap: :wrap)) do %>
        <% link_component = Primer::Beta::Link.new(
            font_size: 4,
            font_weight: :bold,
            href: label_href,
            mr: 1,
            scheme: :primary,
            id: "alert-#{alert_number}",
            "aria-label": "Alert #{alert_number} with secret type #{alert.label}",
          ).with_content(alert.label) %>
        <% if show_unlock_dialog? %>
            <%= render(SecurityCenter::AlertCentricView::UnlockRepositoryComponent.new(
              test_selector: "unlock-repository-alert-trigger",
              link_text: alert.label,
              form_url: enterprise_user_namespace_repository_path(repository_id: alert.repository.id),
              return_to: label_href,
              scheme: :link,
              color: :default,
              font_size: 4,
              font_weight: :bold,
              mr: 1
            )) %>
        <% else %>
          <%= render(link_component) %>
        <% end %>

        <%= render(Primer::Beta::Markdown.new(mr: 1, test_selector: "secret-scanning-table-row-raw-secret")) do %>
          <code class="ws-normal">
            <%= render(Primer::Beta::Truncate.new) do |c| %>
              <% c.with_item(max_width: 225) do %>
                <%= raw_secret_display %>
              <% end %>
            <% end %>
          </code>
        <% end %>


        <% if token_active? %>
          <%= render(Primer::Box.new(test_selector: "secret-scanning-token-active-badge")) do %>
            <%= render(Primer::Beta::Label.new(hidden: false)) { "Active" } %>
          <% end %>
        <% end %>
      <% end %>


      <% if @show_repository %>
        <% link_component = SecurityCenter::RepositoryLinkComponent.new(
          alert_number: alert_number,
          href: repository_token_scanning_results_path(alert.repository.owner, alert.repository),
          repository: alert.repository,
          show_owner: @show_owner,
          test_selector: "secret-scanning-table-row-repository",
        ) %>
        <%= render(Primer::Box.new(style: "max-width: 40%")) do %>
          <% if show_unlock_dialog? %>
            <%= render(SecurityCenter::AlertCentricView::UnlockRepositoryComponent.new(
              test_selector: "unlock-repository-repo-trigger",
              icon: alert.repository.repo_type_icon,
              link_text: link_component.text,
              form_url: enterprise_user_namespace_repository_path(repository_id: alert.repository.id),
              return_to: link_component.href
            )) %>
          <% else %>
            <%= render(link_component) %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>


    <%= render(
      Primer::Box.new(
        display: :flex,
        flex_wrap: :wrap,
        color: :muted,
        font_size: 6,
        test_selector: "secret-scanning-table-row-other-information"
      )
    ) do %>
      <%= render(Primer::Box.new) do %>
        <% if show_alert_number %>
          <span <%= test_selector("secret-scanning-table-row-alert-number") %>>#<%= alert_number %></span>
        <% end %>

        <% state_text = alert_closed? ? "closed" : "opened" %>
        <%= show_alert_number ? state_text : state_text.capitalize %>

        <% if alert_closed? %>
          as <%= render Primer::Beta::Link.new(
            font_size: 6,
            font_weight: :bold,
            href: resolution_href,
            scheme: :secondary,
            test_selector: "secret-scanning-table-row-closed-reason"
          ).with_content(resolution_description) %>
        <% end %>

        <%= render Primer::Beta::RelativeTime.new(datetime: alert_state_changed_at, tense: :past, mr: 1) %>
      <% end %>

      <%= render(Primer::Box.new) do %>
        <% if !alert.raw_secret_in_git_history? %>
          &bull; Secret is no longer present in git history
        <% elsif alert.first_location.present? %>
          &bull; Detected <span <%= test_selector("secret-scanning-table-row-secret-classification") %>>
            <%= secret_classification %>
          </span> in <span><%= first_detected_location %></span>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
