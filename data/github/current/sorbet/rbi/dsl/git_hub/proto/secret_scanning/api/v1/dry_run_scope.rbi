# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V1::DryRunScope`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V1::DryRunScope`.

class GitHub::Proto::SecretScanning::Api::V1::DryRunScope
  sig do
    params(
      custom_pattern_id: T.nilable(Integer),
      job_group_id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      owner_scope: T.nilable(T.any(Symbol, Integer)),
      pattern_id: T.nilable(Integer),
      row_version: T.nilable(String)
    ).void
  end
  def initialize(custom_pattern_id: nil, job_group_id: nil, owner_id: nil, owner_scope: nil, pattern_id: nil, row_version: nil); end

  sig { void }
  def clear_custom_pattern_id; end

  sig { void }
  def clear_job_group_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_scope; end

  sig { void }
  def clear_pattern_id; end

  sig { void }
  def clear_row_version; end

  sig { returns(Integer) }
  def custom_pattern_id; end

  sig { params(value: Integer).void }
  def custom_pattern_id=(value); end

  sig { returns(Integer) }
  def job_group_id; end

  sig { params(value: Integer).void }
  def job_group_id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_scope=(value); end

  sig { returns(Integer) }
  def pattern_id; end

  sig { params(value: Integer).void }
  def pattern_id=(value); end

  sig { returns(String) }
  def row_version; end

  sig { params(value: String).void }
  def row_version=(value); end

  sig { returns(T.nilable(Symbol)) }
  def selector; end
end
