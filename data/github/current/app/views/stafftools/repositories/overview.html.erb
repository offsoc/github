<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# `view` is an instance of Stafftools::RepositoryViews::ShowView %>
<% page_info :title => view.page_title %>

<div class="boxed-group">
  <h3>Overview</h3>
  <div class="boxed-group-inner clearfix">
    <ul class="status-check-list">
      <%= view.db_state %>
      <%= view.billing_state %>
      <%= view.git_state %>
      <%= view.fs_state %>
      <%= view.fork_parent_state %>
      <% if GitHub.public_push_enabled? %>
        <%= view.fork_sanity %>
      <% end %>
      <% if view.network_consistent? %>
        <li>
          <%= primer_octicon(:check) %> Repository network: ok
        </li>
      <% else %>
        <li class="failed">
          <%= primer_octicon(:alert) %> Repository network:
          <%= render layout: "shared/details_dialog", locals: {
            button_class: "btn-link",
            button_text: "inconsistent",
            title: "#{view.repository.name_with_owner} network consistency"
          } do %>
            <div>
              <% view.network_errors.each do |error| %>
                <div class="Box-row"><%= error %></div>
              <% end %>
            </div>
          <% end %>
        </li>
      <% end %>
      <%= view.disabled_state %>
      <%= view.backup_state %>
    </ul>

    <% unless view.repository.active? %>
      <p><strong>This repository is flagged as deleted!</strong></p>
    <% end %>

    <p>
      <div class="summary">
        <dl>
          <dt>Name</dt>
          <dd><%= view.repository.name %></dd>
        </dl>
        <dl>
          <dt>Created</dt>
          <dd><%= view.repository.created_at.in_time_zone %></dd>
        </dl>
        <dl>
          <dt>Visibility</dt>
          <dd><%= view.permissions %></dd>
        </dl>
        <dl>
          <dt>Merge Button</dt>
          <dd>
            Squash merge <%= view.repository.squash_merge_allowed? ? "allowed" : "blocked" %>
            /
            Rebase merge <%= view.repository.rebase_merge_allowed? ? "allowed" : "blocked" %>
            /
            Merge commit <%= view.repository.merge_commit_allowed? ? "allowed" : "blocked" %>
          </dd>
        </dl>
        <dl>
          <dt>Auto Merge</dt>
          <dd><%= view.repository.auto_merge_allowed? ? "allowed" : "blocked" %></dd>
        </dl>
        <dl>
          <dt>Merge Queue</dt>
          <dd>
            <%= view.repository.default_merge_queue ? "enabled" : "disabled" %>
          </dd>
        </dl>
        <dl>
          <dt>Owner</dt>
          <dd>
            <%= link_to view.repository.owner,
                  stafftools_user_path(view.repository.owner) %>
          </dd>
        </dl>
        <% if view.repository.organization %>
          <dl>
            <dt>Organization</dt>
            <dd>
              <%= link_to view.repository.organization,
                    stafftools_user_path(view.repository.organization) %>
            </dd>
          </dl>
        <% end %>
        <% unless view.is_plan_owner? %>
          <dl>
            <dt>Plan owner</dt>
            <dd>
              <%= link_to view.plan_owner,
                          stafftools_user_path(view.plan_owner) %>
            </dd>
          </dl>
        <% end %>
        <% if view.fork? %>
          <dl>
            <dt>Parent repository</dt>
            <dd>
              <% if view.parent_missing? %>
                MISSING!
              <% else %>
                <%= link_to view.parent.name_with_owner,
                      gh_stafftools_repository_path(view.parent) %>
                (<%= view.permissions view.parent %>)
              <% end %>
            </dd>
          </dl>
          <% if view.parent != view.root %>
            <dl>
              <dt>Root repo</dt>
              <dd>
                <%= link_to view.root.name_with_owner,
                      gh_stafftools_repository_path(view.root) %>
                (<%= view.permissions view.root %>)
              </dd>
            </dl>
          <% end %>
        <% end %>
        <% if view.mirror? %>
          <dl>
            <dt>Mirror source</dt>
            <dd><%= link_to view.mirror.url %></dd>
          </dl>
        <% end %>
        <dl>
          <dt>Last push</dt>
          <dd>
            <%= view.last_push %>
          </dd>
        </dl>
        <dl>
          <dt>Successful maintenance</dt>
          <dd><%= view.repository.network.last_maintenance_at || "Never" %></dd>
        </dl>
        <dl>
          <dt>Attempted maintenance</dt>
          <dd><%= view.repository.network.last_maintenance_attempted_at || "Never" %></dd>
        </dl>
        <dl>
          <dt>Maintenance status</dt>
          <dd><%= view.repository.network.maintenance_status&.capitalize %></dd>
        </dl>
        <dl>
          <dt>Source code</dt>
          <dd>
            <%= link_to "View code", repository_url_to_main_site(view.repository) %>
          </dd>
        </dl>
        <dl>
          <dt>Disk use</dt>
        <% if GitHub.storage_cluster_enabled? -%>
          <dd>
            <%= view.total_disk_usage %>
          </dd>
          <dt>&nbsp; Git</dt>
          <dd>
            &nbsp; <%= view.git_disk_usage %>
          </dd>
          <dt>&nbsp; Git LFS</dt>
          <dd>
            &nbsp; <%= view.media_blob_disk_usage %>
          </dd>
          <dt>&nbsp; Release files</dt>
          <dd>
            &nbsp; <%= view.release_asset_disk_usage %>
          </dd>
          <dt>&nbsp; Repository uploads</dt>
          <dd>
            &nbsp; <%= view.repository_file_disk_usage %>
          </dd>
        <% else -%>
          <dd>
            <%= view.git_disk_usage %>
          </dd>
        <% end -%>
        </dl>
        <% unless GitHub.enterprise? %>
          <dl>
            <dt>Exceptions</dt>
            <dd>
              <a href="<%= view.sentry_link %>">Search Sentry</a>
            </dd>
          </dl>
        <% end %>
        <% if (renames = view.errored_branch_renames).any? %>
          <%= render "stafftools/repositories/errored_branch_renames", renames: renames %>
        <% end %>
        <dl>
          <dt>Stars</dt>
          <dd>
            <strong <%= test_selector("star-count") %>><%= number_with_delimiter(view.repository.stargazer_count) %></strong>
            <%= "star".pluralize(view.repository.stargazer_count) %>
            <% if view.last_starrer %>
              / Last starred by <a <%= test_selector("last-starrer") %> href="<%= stafftools_user_path(view.last_starrer) %>" <%= safe_data_attributes(hovercard_data_attributes_for_user(view.last_starrer)) %>>
                <%= view.last_starrer %>
              </a>
              <%= time_ago_in_words_js(view.last_star.created_at) %>
            <% end %>
            /
            <%= form_tag stafftools_repository_star_counts_path(view.repository.owner_login, view.repository), class: "d-inline" do %>
              <%= render Primer::ButtonComponent.new(
                type: :submit,
                scheme: :link,
              ).with_content("Recalculate") %>
            <% end %>
          </dd>
        </dl>
      </div>
    </p>
  </div>
</div>
