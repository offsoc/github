# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Codespaces::Environment`.
# Please instead update this file by running `bin/tapioca dsl Codespaces::Environment`.

class Codespaces::Environment
  sig { returns(T.nilable(::Time)) }
  def active; end

  sig { params(value: T.nilable(::Time)).returns(T.nilable(::Time)) }
  def active=(value); end

  sig { returns(T.nilable(::Integer)) }
  def auto_shutdown_delay_minutes; end

  sig { params(value: T.nilable(::Integer)).returns(T.nilable(::Integer)) }
  def auto_shutdown_delay_minutes=(value); end

  sig { returns(T.untyped) }
  def container; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def container=(value); end

  sig { returns(T.nilable(::String)) }
  def container_image; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def container_image=(value); end

  sig { returns(T.nilable(T::Boolean)) }
  def create_from_prebuild; end

  sig { params(value: T.nilable(T::Boolean)).returns(T.nilable(T::Boolean)) }
  def create_from_prebuild=(value); end

  sig { returns(T.nilable(::Time)) }
  def created; end

  sig { params(value: T.nilable(::Time)).returns(T.nilable(::Time)) }
  def created=(value); end

  sig { returns(T.nilable(T::Boolean)) }
  def display_storage_utilization_in_kb; end

  sig { params(value: T.nilable(T::Boolean)).returns(T.nilable(T::Boolean)) }
  def display_storage_utilization_in_kb=(value); end

  sig { returns(T.untyped) }
  def failover_details; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def failover_details=(value); end

  sig { returns(T.untyped) }
  def features; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def features=(value); end

  sig { returns(T.nilable(::String)) }
  def friendly_name; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def friendly_name=(value); end

  sig { returns(T.untyped) }
  def git_status; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def git_status=(value); end

  sig { returns(T.nilable(::String)) }
  def id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def id=(value); end

  sig { returns(T.nilable(::String)) }
  def last_state_update_reason; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def last_state_update_reason=(value); end

  sig { returns(T.nilable(::Time)) }
  def last_used; end

  sig { params(value: T.nilable(::Time)).returns(T.nilable(::Time)) }
  def last_used=(value); end

  sig { returns(T.nilable(::String)) }
  def location; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def location=(value); end

  sig { returns(T.nilable(::String)) }
  def owner_id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def owner_id=(value); end

  sig { returns(T.nilable(::String)) }
  def plan_id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def plan_id=(value); end

  sig { returns(T.nilable(::String)) }
  def prebuild_type; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def prebuild_type=(value); end

  sig { returns(T.untyped) }
  def recent_folders; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def recent_folders=(value); end

  sig { returns(T.untyped) }
  def runtime_constraints; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def runtime_constraints=(value); end

  sig { returns(T.untyped) }
  def seed; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def seed=(value); end

  sig { returns(T.nilable(::String)) }
  def sku_display_name; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def sku_display_name=(value); end

  sig { returns(T.nilable(::String)) }
  def sku_name; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def sku_name=(value); end

  sig { returns(T.nilable(::String)) }
  def state; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def state=(value); end

  sig { returns(T.nilable(::Integer)) }
  def storage_utilization_in_kb; end

  sig { params(value: T.nilable(::Integer)).returns(T.nilable(::Integer)) }
  def storage_utilization_in_kb=(value); end

  sig { returns(T.nilable(::String)) }
  def type; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def type=(value); end

  sig { returns(T.nilable(::Time)) }
  def updated; end

  sig { params(value: T.nilable(::Time)).returns(T.nilable(::Time)) }
  def updated=(value); end

  sig { returns(T.untyped) }
  def user_controlled_failure_reason; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def user_controlled_failure_reason=(value); end

  sig { returns(T.untyped) }
  def using_copilot_workspace_config; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def using_copilot_workspace_config=(value); end
end
