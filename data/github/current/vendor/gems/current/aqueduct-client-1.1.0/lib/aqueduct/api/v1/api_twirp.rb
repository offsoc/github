# Code generated by protoc-gen-twirp_ruby 1.9.0, DO NOT EDIT.
require 'twirp'
require_relative 'api_pb.rb'

module Aqueduct
  module Api
    module V1
      class JobQueueServiceService < Twirp::Service
        package 'aqueduct.api.v1'
        service 'JobQueueService'
        rpc :Send, SendRequest, SendResponse, :ruby_method => :send
        rpc :SendBatch, SendBatchRequest, SendBatchResponse, :ruby_method => :send_batch
        rpc :Receive, ReceiveRequest, ReceiveResponse, :ruby_method => :receive
        rpc :Heartbeat, HeartbeatRequest, HeartbeatResponse, :ruby_method => :heartbeat
        rpc :Ack, AckRequest, AckResponse, :ruby_method => :ack
        rpc :ListQueues, ListQueuesRequest, ListQueuesResponse, :ruby_method => :list_queues
        rpc :QueueDepth, QueueDepthRequest, QueueDepthResponse, :ruby_method => :queue_depth
        rpc :Peek, PeekRequest, PeekResponse, :ruby_method => :peek
        rpc :InProgressJobs, InProgressJobsRequest, InProgressJobsResponse, :ruby_method => :in_progress_jobs
        rpc :Scheduled, ScheduledRequest, ScheduledResponse, :ruby_method => :scheduled
        rpc :ScheduledCount, ScheduledCountRequest, ScheduledCountResponse, :ruby_method => :scheduled_count
        rpc :Pause, PauseRequest, EmptyResponse, :ruby_method => :pause
        rpc :Resume, ResumeRequest, EmptyResponse, :ruby_method => :resume
        rpc :Paused, PausedRequest, PausedResponse, :ruby_method => :paused
        rpc :AddWorkerLimit, AddWorkerLimitRequest, EmptyResponse, :ruby_method => :add_worker_limit
        rpc :RemoveWorkerLimit, RemoveWorkerLimitRequest, EmptyResponse, :ruby_method => :remove_worker_limit
        rpc :WorkerLimits, WorkerLimitsRequest, WorkerLimitsResponse, :ruby_method => :worker_limits
        rpc :EnableThrottlePop, EnableThrottlePopRequest, EmptyResponse, :ruby_method => :enable_throttle_pop
        rpc :DisableThrottlePop, DisableThrottlePopRequest, EmptyResponse, :ruby_method => :disable_throttle_pop
        rpc :GetEnabledThrottledQueues, GetEnabledThrottledQueuesRequest, GetEnabledThrottledQueuesResponse, :ruby_method => :get_enabled_throttled_queues
        rpc :BackendIds, BackendIdsRequest, BackendIdsResponse, :ruby_method => :backend_ids
        rpc :AddPausingRule, AddPausingRuleRequest, AddPausingRuleResponse, :ruby_method => :add_pausing_rule
        rpc :RemovePausingRule, RemovePausingRuleRequest, RemovePausingRuleResponse, :ruby_method => :remove_pausing_rule
        rpc :PausingRules, PausingRulesRequest, PausingRulesResponse, :ruby_method => :pausing_rules
      end

      class JobQueueServiceClient < Twirp::Client
        client_for JobQueueServiceService
      end

      class AdminServiceService < Twirp::Service
        package 'aqueduct.api.v1'
        service 'AdminService'
        rpc :StateTableCounts, StateTableCountsRequest, StateTableCountsResponse, :ruby_method => :state_table_counts
        rpc :DisableScheduling, DisableSchedulingRequest, EmptyResponse, :ruby_method => :disable_scheduling
        rpc :EnableScheduling, EnableSchedulingRequest, EmptyResponse, :ruby_method => :enable_scheduling
        rpc :SchedulingDisabled, SchedulingDisabledRequest, SchedulingDisabledResponse, :ruby_method => :scheduling_disabled
        rpc :EnforceAuth, EnforceAuthRequest, EmptyResponse, :ruby_method => :enforce_auth
        rpc :DisableAuthEnforcement, DisableAuthEnforcementRequest, EmptyResponse, :ruby_method => :disable_auth_enforcement
        rpc :EnableHighThroughput, EnableHighThroughputRequest, EmptyResponse, :ruby_method => :enable_high_throughput
        rpc :DisableHighThroughput, DisableHighThroughputRequest, EmptyResponse, :ruby_method => :disable_high_throughput
        rpc :HighThroughputEnabled, HighThroughputEnabledRequest, HighThroughputEnabledResponse, :ruby_method => :high_throughput_enabled
        rpc :EnableHighThroughputTag, EnableHighThroughputTagRequest, EmptyResponse, :ruby_method => :enable_high_throughput_tag
        rpc :DisableHighThroughputTag, DisableHighThroughputTagRequest, EmptyResponse, :ruby_method => :disable_high_throughput_tag
        rpc :HighThroughputTagEnabled, HighThroughputTagEnabledRequest, HighThroughputTagEnabledResponse, :ruby_method => :high_throughput_tag_enabled
        rpc :DescribeQueues, DescribeQueuesRequest, DescribeQueuesResponse, :ruby_method => :describe_queues
        rpc :AddInactiveQueue, AddInactiveQueueRequest, AddInactiveQueueResponse, :ruby_method => :add_inactive_queue
        rpc :RemoveInactiveQueue, RemoveInactiveQueueRequest, RemoveInactiveQueueResponse, :ruby_method => :remove_inactive_queue
        rpc :InactiveQueues, InactiveQueuesRequest, InactiveQueuesResponse, :ruby_method => :inactive_queues
      end

      class AdminServiceClient < Twirp::Client
        client_for AdminServiceService
      end

      class AuthServiceService < Twirp::Service
        package 'aqueduct.api.v1'
        service 'AuthService'
        rpc :GenerateApiKey, GenerateApiKeyRequest, GenerateApiKeyResponse, :ruby_method => :generate_api_key
        rpc :GetApiKey, GetApiKeyRequest, GetApiKeyResponse, :ruby_method => :get_api_key
        rpc :RevokeApiKey, RevokeApiKeyRequest, EmptyResponse, :ruby_method => :revoke_api_key
        rpc :Test, AuthTestRequest, EmptyResponse, :ruby_method => :test
      end

      class AuthServiceClient < Twirp::Client
        client_for AuthServiceService
      end
    end
  end
end
