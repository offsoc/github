# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::RepositoryCountryUnblocked`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::RepositoryCountryUnblocked`.

class Hydro::Schemas::Github::V1::RepositoryCountryUnblocked
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      country_codes: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      country_names: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      type: T.nilable(T.any(Symbol, Integer)),
      unblocked_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(actor: nil, country_codes: T.unsafe(nil), country_names: T.unsafe(nil), repository: nil, type: nil, unblocked_at: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_country_codes; end

  sig { void }
  def clear_country_names; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_type; end

  sig { void }
  def clear_unblocked_at; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def country_codes; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def country_codes=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def country_names; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def country_names=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def unblocked_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def unblocked_at=(value); end
end
