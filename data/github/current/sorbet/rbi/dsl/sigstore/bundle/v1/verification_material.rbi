# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Sigstore::Bundle::V1::VerificationMaterial`.
# Please instead update this file by running `bin/tapioca dsl Sigstore::Bundle::V1::VerificationMaterial`.

class Sigstore::Bundle::V1::VerificationMaterial
  sig do
    params(
      certificate: T.nilable(Sigstore::Common::V1::X509Certificate),
      public_key: T.nilable(Sigstore::Common::V1::PublicKeyIdentifier),
      timestamp_verification_data: T.nilable(Sigstore::Bundle::V1::TimestampVerificationData),
      tlog_entries: T.nilable(T.any(Google::Protobuf::RepeatedField[Sigstore::Rekor::V1::TransparencyLogEntry], T::Array[Sigstore::Rekor::V1::TransparencyLogEntry])),
      x509_certificate_chain: T.nilable(Sigstore::Common::V1::X509CertificateChain)
    ).void
  end
  def initialize(certificate: nil, public_key: nil, timestamp_verification_data: nil, tlog_entries: T.unsafe(nil), x509_certificate_chain: nil); end

  sig { returns(T.nilable(Sigstore::Common::V1::X509Certificate)) }
  def certificate; end

  sig { params(value: T.nilable(Sigstore::Common::V1::X509Certificate)).void }
  def certificate=(value); end

  sig { void }
  def clear_certificate; end

  sig { void }
  def clear_public_key; end

  sig { void }
  def clear_timestamp_verification_data; end

  sig { void }
  def clear_tlog_entries; end

  sig { void }
  def clear_x509_certificate_chain; end

  sig { returns(T.nilable(Symbol)) }
  def content; end

  sig { returns(T.nilable(Sigstore::Common::V1::PublicKeyIdentifier)) }
  def public_key; end

  sig { params(value: T.nilable(Sigstore::Common::V1::PublicKeyIdentifier)).void }
  def public_key=(value); end

  sig { returns(T.nilable(Sigstore::Bundle::V1::TimestampVerificationData)) }
  def timestamp_verification_data; end

  sig { params(value: T.nilable(Sigstore::Bundle::V1::TimestampVerificationData)).void }
  def timestamp_verification_data=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Sigstore::Rekor::V1::TransparencyLogEntry]) }
  def tlog_entries; end

  sig { params(value: Google::Protobuf::RepeatedField[Sigstore::Rekor::V1::TransparencyLogEntry]).void }
  def tlog_entries=(value); end

  sig { returns(T.nilable(Sigstore::Common::V1::X509CertificateChain)) }
  def x509_certificate_chain; end

  sig { params(value: T.nilable(Sigstore::Common::V1::X509CertificateChain)).void }
  def x509_certificate_chain=(value); end
end
