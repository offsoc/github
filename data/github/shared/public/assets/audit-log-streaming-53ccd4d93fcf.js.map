{"version":3,"file":"audit-log-streaming-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/audit-log-streaming/azure-blob.ts","app/assets/modules/audit-log-streaming/helpers.ts","app/assets/modules/audit-log-streaming.ts","app/assets/modules/audit-log-streaming/splunk.ts","app/assets/modules/audit-log-streaming/azure-hubs.ts","app/assets/modules/audit-log-streaming/s3.ts","app/assets/modules/audit-log-streaming/google-cloud.ts","app/assets/modules/audit-log-streaming/datadog.ts","ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts"],"sourcesContent":["export function checkBlobField(): boolean {\n  const container = <HTMLInputElement>document.getElementById('container')\n  return container?.value.length > 0\n}\n\nfunction maybeShowInvalidUrlErrorMessage(blobUrlFormGroupElement: HTMLElement, showError: boolean) {\n  const errorMessageElement = document.getElementById('blob-error-message')\n  const show = 'display: flex !important'\n  const hide = 'display: none !important'\n\n  if (showError) {\n    blobUrlFormGroupElement.classList.add('errored')\n    errorMessageElement?.setAttribute('style', show)\n  } else {\n    blobUrlFormGroupElement.classList.remove('errored')\n    errorMessageElement?.setAttribute('style', hide)\n  }\n}\n\nexport function autofillBlobContainerInput() {\n  const blobUrlInputElement = document.getElementById('blob_sas_url_secret') as HTMLInputElement\n\n  if (blobUrlInputElement) {\n    blobUrlInputElement.addEventListener('input', e => {\n      const target = e.target as HTMLInputElement\n      if (target) {\n        const blobUrlFormGroupElement = document.getElementsByClassName('form-group')[0] as HTMLElement\n        if (target.value === '') {\n          maybeShowInvalidUrlErrorMessage(blobUrlFormGroupElement, false)\n          return\n        }\n        const blobUrl = new URL(target.value.trim(), window.location.origin)\n        const isValidBlobUrl = blobUrl.host.endsWith('.blob.core.windows.net') && blobUrl.pathname !== ''\n        if (isValidBlobUrl) {\n          maybeShowInvalidUrlErrorMessage(blobUrlFormGroupElement, false)\n          const blobContainerName = blobUrl.pathname.slice(1)\n          const blobContainerInputElement = document.getElementById('container') as HTMLInputElement\n          blobContainerInputElement.value = blobContainerName\n        } else {\n          maybeShowInvalidUrlErrorMessage(blobUrlFormGroupElement, true)\n        }\n      }\n    })\n  }\n}\n","export function flipEndpointLanguage() {\n  const successEndpointDiv = document.getElementById('success-endpoint-message')\n  const checkEndpointDiv = document.getElementById('check-endpoint-message')\n  const saveButton = document.getElementsByName('store_button')[0] as HTMLButtonElement\n\n  const show = 'display: flex !important'\n  const hide = 'display: none !important'\n\n  if (saveButton.disabled) {\n    successEndpointDiv?.setAttribute('style', hide)\n    checkEndpointDiv?.setAttribute('style', show)\n  } else {\n    checkEndpointDiv?.setAttribute('style', hide)\n    successEndpointDiv?.setAttribute('style', show)\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {serialize} from '@github-ui/form-utils'\nimport {checkSplunkFields} from './audit-log-streaming/splunk'\nimport {checkHubsField} from './audit-log-streaming/azure-hubs'\nimport {checkBlobField, autofillBlobContainerInput} from './audit-log-streaming/azure-blob'\nimport {checkGoogleCloudField} from './audit-log-streaming/google-cloud'\nimport {checkS3Fields, toggleS3Form} from './audit-log-streaming/s3'\nimport {flipEndpointLanguage} from './audit-log-streaming/helpers'\nimport {checkDatadogField, datadogSiteFieldListener} from './audit-log-streaming/datadog'\n\nfunction maybeEnableButton(form: HTMLFormElement, button: HTMLButtonElement) {\n  const loadForm = serialize(form)\n  const inputs = form.querySelectorAll<HTMLInputElement>('input')\n  for (const input of inputs) {\n    input.addEventListener('input', function () {\n      if (button.name === 'store_button') {\n        const changesToSavedForm = serialize(form) !== loadForm\n        button.disabled = changesToSavedForm\n      } else if (button.name === 'check_button') {\n        maybeEnableEndpointButton(button)\n      }\n    })\n  }\n}\n\nfunction maybeEnableEndpointButton(button: HTMLButtonElement) {\n  const inputNotEmpty = checkFormFields()\n  if (inputNotEmpty) {\n    button.disabled = false\n    flipEndpointLanguage()\n  } else {\n    button.disabled = true\n  }\n}\n\nfunction checkFormFields(): boolean {\n  return (\n    checkSplunkFields() ||\n    checkHubsField() ||\n    checkS3Fields() ||\n    checkGoogleCloudField() ||\n    checkBlobField() ||\n    checkDatadogField()\n  )\n}\n\nautofillBlobContainerInput()\ntoggleS3Form()\ndatadogSiteFieldListener(flipEndpointLanguage)\n\n// Observe the save button\nobserve('.js-encrypt-bulk-submit-enable-empty', {\n  add(form) {\n    const saveButtonList = document.getElementsByName('store_button')\n    if (!form || saveButtonList.length === 0 || (saveButtonList[0] as HTMLButtonElement).disabled) {\n      return\n    }\n    maybeEnableButton(form as HTMLFormElement, saveButtonList[0] as HTMLButtonElement)\n  },\n})\n\n// Observe the check endpoint button\nobserve('.js-encrypt-bulk-submit-enable-empty', {\n  add(form) {\n    const endpointButtonList = document.getElementsByName('check_button')\n    if (!form || endpointButtonList.length === 0) {\n      return\n    }\n    const inputNotEmpty = checkFormFields()\n    const endpointButton = endpointButtonList[0] as HTMLButtonElement\n    if (!inputNotEmpty) {\n      endpointButton.disabled = true\n    }\n    maybeEnableButton(form as HTMLFormElement, endpointButton)\n  },\n})\n","export function checkSplunkFields(): boolean {\n  const domain = <HTMLInputElement>document.getElementById('domain')\n  const port = <HTMLInputElement>document.getElementById('port')\n  return domain?.value.length > 0 && port?.value.length > 0\n}\n","export function checkHubsField(): boolean {\n  const name = <HTMLInputElement>document.getElementById('name')\n  return name?.value.length > 0\n}\n","import {flipEndpointLanguage} from './helpers'\n\nexport function checkS3Fields(): boolean {\n  const bucket = <HTMLInputElement>document.getElementById('s3_bucket')\n  const oidcAuditlogInputField = <HTMLInputElement>document.getElementById('arn_role')\n  const authenticationTypeHiddenField = <HTMLInputElement>document.getElementById('authentication_type')\n\n  if (authenticationTypeHiddenField?.value === 'oidc_auditlog') {\n    return bucket?.value.length > 0 && oidcAuditlogInputField?.value.length > 0\n  } else {\n    return bucket?.value.length > 0\n  }\n}\n\nexport function toggleS3Form() {\n  const accessKeysButton = document.getElementById('s3-access-keys-button') as HTMLButtonElement\n  const accessKeyInputDiv = document.getElementById('s3-access-key-input') as HTMLDivElement\n  const secretKeyInputDiv = document.getElementById('s3-secret-key-input') as HTMLDivElement\n\n  const oidcAuditlogButton = document.getElementById('s3-oidc-auditlog-button') as HTMLButtonElement\n  const oidcAuditlogInputDiv = document.getElementById('s3-oidc-auditlog-input') as HTMLDivElement\n\n  const authenticationTypeHiddenField = document.getElementById('authentication_type') as HTMLInputElement\n\n  const endpointButton = document.getElementsByName('check_button')[0] as HTMLButtonElement\n  const saveButton = document.getElementsByName('store_button')[0] as HTMLButtonElement\n\n  const accessKeyInputField = document.getElementById('key_id_secret') as HTMLInputElement\n  const secretKeyInputField = document.getElementById('key_secret') as HTMLInputElement\n  const oidcAuditlogInputField = document.getElementById('arn_role') as HTMLInputElement\n\n  const show = 'display: block !important'\n  const hide = 'display: none !important'\n\n  if (accessKeysButton && oidcAuditlogButton && accessKeyInputDiv && secretKeyInputDiv && oidcAuditlogInputDiv) {\n    accessKeysButton.addEventListener('click', () => {\n      accessKeysButton.style.color = '#ffffff'\n      accessKeysButton.style.backgroundColor = '#2da44e'\n      oidcAuditlogButton.style.color = '#24292f'\n      oidcAuditlogButton.style.backgroundColor = '#f6f8fa'\n\n      accessKeyInputDiv.setAttribute('style', show)\n      secretKeyInputDiv.setAttribute('style', show)\n      oidcAuditlogInputDiv.setAttribute('style', hide)\n\n      authenticationTypeHiddenField.value = 'access_keys'\n\n      saveButton.disabled = true\n      endpointButton.disabled = true\n      oidcAuditlogInputField.value = ''\n\n      flipEndpointLanguage()\n    })\n\n    oidcAuditlogButton.addEventListener('click', () => {\n      oidcAuditlogButton.style.color = '#ffffff'\n      oidcAuditlogButton.style.backgroundColor = '#2da44e'\n      accessKeysButton.style.color = '#24292f'\n      accessKeysButton.style.backgroundColor = '#f6f8fa'\n\n      oidcAuditlogInputDiv.setAttribute('style', show)\n      accessKeyInputDiv.setAttribute('style', hide)\n      secretKeyInputDiv.setAttribute('style', hide)\n\n      authenticationTypeHiddenField.value = 'oidc_auditlog'\n\n      saveButton.disabled = true\n      endpointButton.disabled = true\n      accessKeyInputField.value = ''\n      accessKeyInputField.placeholder = ''\n      secretKeyInputField.value = ''\n      secretKeyInputField.placeholder = ''\n\n      flipEndpointLanguage()\n    })\n  }\n}\n","export function checkGoogleCloudField(): boolean {\n  const bucket = <HTMLInputElement>document.getElementById('gcs_bucket')\n  return bucket?.value.length > 0\n}\n","export function checkDatadogField() {\n  const site = <HTMLInputElement>document.getElementById('site')\n  return site?.value.length > 0\n}\n\nexport function datadogSiteFieldListener(flipEndpointLanguage: () => void) {\n  const site = <HTMLInputElement>document.getElementById('site')\n  const saveButton = document.getElementsByName('store_button')[0] as HTMLButtonElement\n\n  if (site) {\n    const startValue = site.value\n\n    site.setAttribute('save', String(saveButton.disabled))\n    site.addEventListener('change', () => {\n      if (site.value !== startValue) {\n        saveButton.disabled = true\n        flipEndpointLanguage()\n      } else {\n        if (site.getAttribute('save') === 'false') {\n          saveButton.disabled = false\n          flipEndpointLanguage()\n        }\n      }\n    })\n  }\n}\n","import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n"],"names":["maybeShowInvalidUrlErrorMessage","blobUrlFormGroupElement","showError","errorMessageElement","document","getElementById","classList","add","setAttribute","remove","flipEndpointLanguage","successEndpointDiv","checkEndpointDiv","saveButton","getElementsByName","show","hide","disabled","maybeEnableButton","form","button","loadForm","serialize","input","querySelectorAll","addEventListener","name","changesToSavedForm","checkFormFields","checkSplunkFields","domain","port","value","length","checkHubsField","checkS3Fields","bucket","oidcAuditlogInputField","authenticationTypeHiddenField","checkGoogleCloudField","checkBlobField","container","checkDatadogField","site","autofillBlobContainerInput","blobUrlInputElement","e","target","getElementsByClassName","blobUrl","URL","trim","window","location","origin","host","endsWith","pathname","blobContainerName","slice","blobContainerInputElement","toggleS3Form","accessKeysButton","accessKeyInputDiv","secretKeyInputDiv","oidcAuditlogButton","oidcAuditlogInputDiv","endpointButton","accessKeyInputField","secretKeyInputField","style","color","backgroundColor","placeholder","datadogSiteFieldListener","startValue","String","getAttribute","observe","saveButtonList","endpointButtonList","inputNotEmpty","fire","cancelable","dispatchEvent","CustomEvent","bubbles","requestSubmit","submitter","checkButtonValidity","HTMLFormElement","HTMLElement","type","persistSubmitButtonValue","submit","changeValue","HTMLInputElement","checked","fillFormValues","fields","element","elements","namedItem","HTMLTextAreaElement","isFormField","nodeName","toLowerCase","isContentEditable","searchParamsFromFormData","formData","URLSearchParams","combineGetFormSearchParams","formAction","allSearchParams","search","key","append","toString","FormData","closest","findPersistedSubmitButtonValue","defaultValue","matches","createElement","prepend","querySelector"],"sourceRoot":""}