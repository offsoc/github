# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Meuse::V0::UsageThresholdReached`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Meuse::V0::UsageThresholdReached`.

class Hydro::Schemas::Meuse::V0::UsageThresholdReached
  sig do
    params(
      amount_limit: T.nilable(Float),
      billing_period_id: T.nilable(Integer),
      billing_period_start_time: T.nilable(Google::Protobuf::Timestamp),
      bucket_id: T.nilable(Integer),
      budget_id: T.nilable(Integer),
      current_amount: T.nilable(Float),
      customer_id: T.nilable(Integer),
      entitlement_plan_id: T.nilable(Integer),
      product: T.nilable(Hydro::Schemas::Meuse::V0::Entities::Product),
      product_sku: T.nilable(Hydro::Schemas::Meuse::V0::Entities::ProductSKU),
      reached_at: T.nilable(Google::Protobuf::Timestamp),
      threshold_amount: T.nilable(Integer),
      threshold_type: T.nilable(T.any(Symbol, Integer)),
      usage_line_item_id: T.nilable(Integer)
    ).void
  end
  def initialize(amount_limit: nil, billing_period_id: nil, billing_period_start_time: nil, bucket_id: nil, budget_id: nil, current_amount: nil, customer_id: nil, entitlement_plan_id: nil, product: nil, product_sku: nil, reached_at: nil, threshold_amount: nil, threshold_type: nil, usage_line_item_id: nil); end

  sig { returns(Float) }
  def amount_limit; end

  sig { params(value: Float).void }
  def amount_limit=(value); end

  sig { returns(Integer) }
  def billing_period_id; end

  sig { params(value: Integer).void }
  def billing_period_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def billing_period_start_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def billing_period_start_time=(value); end

  sig { returns(Integer) }
  def bucket_id; end

  sig { params(value: Integer).void }
  def bucket_id=(value); end

  sig { returns(Integer) }
  def budget_id; end

  sig { params(value: Integer).void }
  def budget_id=(value); end

  sig { void }
  def clear_amount_limit; end

  sig { void }
  def clear_billing_period_id; end

  sig { void }
  def clear_billing_period_start_time; end

  sig { void }
  def clear_bucket_id; end

  sig { void }
  def clear_budget_id; end

  sig { void }
  def clear_current_amount; end

  sig { void }
  def clear_customer_id; end

  sig { void }
  def clear_entitlement_plan_id; end

  sig { void }
  def clear_product; end

  sig { void }
  def clear_product_sku; end

  sig { void }
  def clear_reached_at; end

  sig { void }
  def clear_threshold_amount; end

  sig { void }
  def clear_threshold_type; end

  sig { void }
  def clear_usage_line_item_id; end

  sig { returns(Float) }
  def current_amount; end

  sig { params(value: Float).void }
  def current_amount=(value); end

  sig { returns(Integer) }
  def customer_id; end

  sig { params(value: Integer).void }
  def customer_id=(value); end

  sig { returns(Integer) }
  def entitlement_plan_id; end

  sig { params(value: Integer).void }
  def entitlement_plan_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Meuse::V0::Entities::Product)) }
  def product; end

  sig { params(value: T.nilable(Hydro::Schemas::Meuse::V0::Entities::Product)).void }
  def product=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Meuse::V0::Entities::ProductSKU)) }
  def product_sku; end

  sig { params(value: T.nilable(Hydro::Schemas::Meuse::V0::Entities::ProductSKU)).void }
  def product_sku=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def reached_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def reached_at=(value); end

  sig { returns(Integer) }
  def threshold_amount; end

  sig { params(value: Integer).void }
  def threshold_amount=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def threshold_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def threshold_type=(value); end

  sig { returns(Integer) }
  def usage_line_item_id; end

  sig { params(value: Integer).void }
  def usage_line_item_id=(value); end
end
