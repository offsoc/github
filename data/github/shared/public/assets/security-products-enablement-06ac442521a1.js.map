{"version":3,"file":"security-products-enablement-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/alive/alive.ts","ui/packages/alive/connect-alive-subscription.ts","ui/packages/alive/session.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/failbot/failbot.ts","ui/packages/fuzzy-score/fuzzy-filter.ts","ui/packages/fuzzy-score/fuzzy-score.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/react-core/use-feature-flag.ts","ui/packages/repos-filter/providers/custom-properties.ts","ui/packages/repos-filter/providers/languages.ts","ui/packages/repos-filter/providers/static.ts","ui/packages/security-products-enablement/components/ConfirmationDialog.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/PolicySection.tsx","ui/packages/security-products-enablement/contexts/AppContext.tsx","ui/packages/security-products-enablement/App.tsx","ui/packages/security-products-enablement/contexts/RepositoryContext.tsx","ui/packages/security-products-enablement/utils/api-helpers.ts","ui/packages/security-products-enablement/utils/banner-helper.ts","ui/packages/security-products-enablement/components/Flash.tsx","ui/packages/control-group/components/ControlGroupContainer.tsx","ui/packages/control-group/components/Title.tsx","ui/packages/control-group/components/Description.tsx","ui/packages/control-group/components/Controls.tsx","ui/packages/control-group/components/utils.ts","ui/packages/control-group/components/Item.tsx","ui/packages/control-group/components/LinkItem.tsx","ui/packages/control-group/ControlGroup.tsx","ui/packages/security-products-enablement/components/ControlGroupDropDown.tsx","ui/packages/security-products-enablement/contexts/DialogContext.tsx","ui/packages/security-products-enablement/hooks/UseNewRepoPolicyDropdown.tsx","ui/packages/security-products-enablement/security-products-enablement-types.ts","ui/packages/security-products-enablement/contexts/SecuritySettingsContext.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/Setting.tsx","ui/packages/security-products-enablement/components/SecurityProducts/Dependabot.tsx","ui/packages/security-products-enablement/components/SecurityProducts/DependencyGraph.tsx","ui/packages/security-products-enablement/utils/helpers.ts","ui/packages/security-products-enablement/components/FailureReasonDialog.tsx","ui/packages/security-products-enablement/components/RepositoryConfigurationStatus.tsx","ui/packages/security-products-enablement/contexts/SelectedRepositoryContext.tsx","ui/packages/security-products-enablement/utils/dialog-helpers.ts","ui/packages/security-products-enablement/components/RepositoryTable.tsx","ui/packages/security-products-enablement/components/Team.tsx","ui/packages/security-products-enablement/components/SearchFilter.tsx","ui/packages/security-products-enablement/components/FailureBanner.tsx","ui/packages/security-products-enablement/components/LicenseSection.tsx","ui/packages/security-products-enablement/components/RepositorySection.tsx","ui/packages/security-products-enablement/components/Subhead.tsx","ui/packages/security-products-enablement/components/Banner.tsx","ui/packages/security-products-enablement/components/BlankSlate.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/ApplyToButton.tsx","ui/packages/security-products-enablement/components/RowLabel.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/Row.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/Table.tsx","ui/packages/security-products-enablement/routes/OrganizationSettingsSecurityProducts.tsx","ui/packages/security-products-enablement/components/Validation.tsx","ui/packages/security-products-enablement/components/SecurityProducts/CodeScanning.tsx","ui/packages/security-products-enablement/components/SecurityProducts/SecretScanning.tsx","ui/packages/security-products-enablement/components/SecurityProducts/AdvancedSecurity.tsx","ui/packages/security-products-enablement/components/SecurityProducts/PrivateVulnerabilityReporting.tsx","ui/packages/security-products-enablement/components/SecurityConfiguration/FooterSection.tsx","ui/packages/security-products-enablement/utils/security-configuration-reducer.ts","ui/packages/security-products-enablement/routes/SecurityConfiguration.tsx","ui/packages/security-products-enablement/security-products-enablement.ts","ui/packages/trusted-types-policies/alive.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/use-debounce/use-debounce.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/use-tracking-ref/use-tracking-ref.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/list-view/src/ListItem/Description.module.css","ui/packages/list-view/src/ListItem/Description.tsx","ui/packages/list-view/src/ListItem/MainContent.module.css","ui/packages/list-view/src/ListItem/MainContent.tsx","ui/packages/list-view/src/ListItem/Metadata.module.css","ui/packages/list-view/src/ListItem/Metadata.tsx","ui/packages/list-view/src/ListItem/TrailingBadge.module.css","ui/packages/list-view/src/ListItem/TrailingBadge.tsx","ui/packages/list-view/src/ListView/Metadata.tsx","ui/packages/list-view/src/density-gap.module.css","ui/packages/list-view/src/ListView/ActionBar.module.css","ui/packages/list-view/src/ListView/ActionBar.tsx","ui/packages/list-view/src/ListView/Metadata.module.css","ui/packages/list-view/src/ListView/SectionFilters.module.css","ui/packages/list-view/src/ListView/SectionFilters.tsx","ui/packages/list-view/src/ListView/SelectAllCheckbox.module.css","ui/packages/list-view/src/ListView/SelectAllCheckbox.tsx","ui/packages/onboarding-tip-banner/OnboardingTipBanner.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/react-core/Link.tsx","ui/packages/skeleton/LoadingSkeleton.tsx"],"sourcesContent":["import type {AliveEvent, MetadataUpdate, Notifier, Subscription} from '@github/alive-client'\nimport {PresenceMetadataSet, SubscriptionSet, isPresenceChannel} from '@github/alive-client'\nimport {AliveSession} from './session'\nimport {debounce} from '@github/mini-throttle'\nimport {ready} from '@github-ui/document-ready'\nimport safeStorage from '@github-ui/safe-storage'\nimport {alivePolicy, InvalidSourceRelError} from '@github-ui/trusted-types-policies/alive'\nimport {isSafari} from '@braintree/browser-detection'\n\nexport interface Dispatchable {\n  dispatchEvent: (e: Event) => unknown\n}\n\nfunction isSharedWorkerSupported(): boolean {\n  // There is currently a bug in safari that causes shared workers to stop working after a while\n  // see https://github.com/github/web-systems/issues/965\n  if (isSafari()) return false\n  return 'SharedWorker' in window && safeStorage('localStorage').getItem('bypassSharedWorker') !== 'true'\n}\n\nexport function workerSrc(): string | null {\n  const url =\n    document.head.querySelector<HTMLLinkElement>(`link[rel=shared-web-socket-src]`)?.getAttribute('href') ?? ''\n  try {\n    return alivePolicy.createScriptURL(url)\n  } catch (e) {\n    if (e instanceof InvalidSourceRelError) {\n      return null\n    }\n    throw e\n  }\n}\n\nfunction socketUrl(): string | null {\n  return document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.href ?? null\n}\n\nfunction socketRefreshUrl(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-refresh-url') ??\n    null\n  )\n}\n\nfunction sessionIdentifier(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-session-id') ?? null\n  )\n}\n\n/**\n * dispatches events of type: 'socket:message' | 'socket:presence'\n */\nfunction notify(subscribers: Iterable<Dispatchable>, {channel, type, data}: AliveEvent) {\n  for (const el of subscribers) {\n    el.dispatchEvent(\n      new CustomEvent(`socket:${type}`, {\n        bubbles: false,\n        cancelable: false,\n        detail: {name: channel, data},\n      }),\n    )\n  }\n}\n\nclass AliveSessionProxy {\n  private worker: SharedWorker\n  private subscriptions = new SubscriptionSet<Dispatchable>()\n  private presenceMetadata = new PresenceMetadataSet<Dispatchable>()\n  private notify: Notifier<Dispatchable>\n\n  constructor(src: string, url: string, refreshUrl: string, sessionId: string, notifier: Notifier<Dispatchable>) {\n    this.notify = notifier\n    // eslint-disable-next-line ssr-friendly/no-dom-globals-in-constructor, compat/compat\n    this.worker = new SharedWorker(src, `github-socket-worker-v2-${sessionId}`)\n    this.worker.port.onmessage = ({data}) => this.receive(data)\n    this.worker.port.postMessage({connect: {url, refreshUrl}})\n  }\n\n  subscribe(subs: Array<Subscription<Dispatchable>>) {\n    const added = this.subscriptions.add(...subs)\n    if (added.length) {\n      this.worker.port.postMessage({subscribe: added})\n    }\n\n    // We may be adding a subscription to a presence channel which is already subscribed.\n    // In this case, we need to explicitly ask the SharedWorker to send us the presence data.\n    const addedChannels = new Set(added.map(topic => topic.name))\n    const redundantPresenceChannels = subs.reduce((redundantChannels, subscription) => {\n      const channel = subscription.topic.name\n\n      if (isPresenceChannel(channel) && !addedChannels.has(channel)) {\n        redundantChannels.add(channel)\n      }\n\n      return redundantChannels\n    }, new Set<string>())\n\n    if (redundantPresenceChannels.size) {\n      this.worker.port.postMessage({requestPresence: Array.from(redundantPresenceChannels)})\n    }\n  }\n\n  unsubscribeAll(...subscribers: Dispatchable[]) {\n    const removed = this.subscriptions.drain(...subscribers)\n    if (removed.length) {\n      this.worker.port.postMessage({unsubscribe: removed})\n    }\n\n    const updatedPresenceChannels = this.presenceMetadata.removeSubscribers(subscribers)\n    this.sendPresenceMetadataUpdate(updatedPresenceChannels)\n  }\n\n  updatePresenceMetadata(metadataUpdates: Array<MetadataUpdate<Dispatchable>>) {\n    const updatedChannels = new Set<string>()\n\n    for (const update of metadataUpdates) {\n      // update the local metadata for this specific element\n      this.presenceMetadata.setMetadata(update)\n      updatedChannels.add(update.channelName)\n    }\n\n    // Send the full local metadata for these channels to the SharedWorker\n    this.sendPresenceMetadataUpdate(updatedChannels)\n  }\n\n  sendPresenceMetadataUpdate(channelNames: Set<string>) {\n    if (!channelNames.size) {\n      return\n    }\n\n    const updatesForSharedWorker: Array<Omit<MetadataUpdate<Element>, 'subscriber'>> = []\n\n    for (const channelName of channelNames) {\n      // get all metadata for this channel (from all elements) to send to the SharedWorker\n      updatesForSharedWorker.push({\n        channelName,\n        metadata: this.presenceMetadata.getChannelMetadata(channelName),\n      })\n    }\n\n    // Send the full metadata updates to the SharedWorker\n    this.worker.port.postMessage({updatePresenceMetadata: updatesForSharedWorker})\n  }\n\n  online() {\n    this.worker.port.postMessage({online: true})\n  }\n\n  offline() {\n    this.worker.port.postMessage({online: false})\n  }\n\n  hangup() {\n    this.worker.port.postMessage({hangup: true})\n  }\n\n  private notifyPresenceDebouncedByChannel = new Map<string, Notifier<Dispatchable>>()\n  private receive(event: AliveEvent) {\n    const {channel} = event\n\n    if (event.type === 'presence') {\n      // There are times when we get a flood of messages from the SharedWorker, such as a tab that has been idle for a long time and then comes back to the foreground.\n      // Since each presence message for a channel contains the full list of users, we can debounce the events and only notify subscribers with the last one\n      let debouncedNotify = this.notifyPresenceDebouncedByChannel.get(channel)\n      if (!debouncedNotify) {\n        debouncedNotify = debounce((subscribers, debouncedEvent) => {\n          this.notify(subscribers, debouncedEvent)\n          this.notifyPresenceDebouncedByChannel.delete(channel)\n        }, 100)\n        this.notifyPresenceDebouncedByChannel.set(channel, debouncedNotify)\n      }\n\n      debouncedNotify(this.subscriptions.subscribers(channel), event)\n      return\n    }\n\n    // For non-presence messages, we can send them through immediately since they may contain different messages/data\n    this.notify(this.subscriptions.subscribers(channel), event)\n  }\n}\n\nasync function connect() {\n  const src = workerSrc()\n  if (!src) return\n\n  const url = socketUrl()\n  if (!url) return\n\n  const refreshUrl = socketRefreshUrl()\n  if (!refreshUrl) return\n\n  const sessionId = sessionIdentifier()\n  if (!sessionId) return\n\n  const createSession = () => {\n    if (isSharedWorkerSupported()) {\n      try {\n        return new AliveSessionProxy(src, url, refreshUrl, sessionId, notify)\n      } catch (_) {\n        // ignore errors.  CSP will some times block SharedWorker creation. Fall back to standard AliveSession.\n      }\n    }\n\n    return new AliveSession(url, refreshUrl, false, notify)\n  }\n  const session = createSession()\n\n  window.addEventListener('online', () => session.online())\n  window.addEventListener('offline', () => session.offline())\n  window.addEventListener('pagehide', () => {\n    if ('hangup' in session) session.hangup()\n  })\n\n  return session\n}\n\nasync function connectWhenReady() {\n  await ready\n  return connect()\n}\n\nlet sessionPromise: undefined | ReturnType<typeof connectWhenReady>\n\nexport function getSession() {\n  return (sessionPromise ||= connectWhenReady())\n}\n","import type {getSession} from '@github-ui/alive'\nimport {Topic} from '@github/alive-client'\n\n/**\n * Connect to an Alive subscription\n * @param aliveSession the Alive session\n * @param channelName the signed channel name\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\n\nexport function connectAliveSubscription<T>(\n  aliveSession: Awaited<ReturnType<typeof getSession>>,\n  channelName: string | null,\n  callback: (data: T) => unknown,\n) {\n  if (!aliveSession) {\n    // the alive session failed to connect\n    throw new Error('Not connected to alive')\n  }\n\n  if (!channelName) {\n    throw new Error('No channel name')\n  }\n\n  const topic = Topic.parse(channelName)\n\n  if (!topic) {\n    throw new Error('Invalid channel name')\n  }\n\n  const aliveSubscription = {\n    subscriber: {\n      dispatchEvent: (event: Event) => {\n        if (event instanceof CustomEvent) {\n          const subscriptionEvent = event.detail\n          callback(subscriptionEvent.data)\n        }\n      },\n    },\n    topic,\n  }\n\n  aliveSession.subscribe([aliveSubscription])\n  return {\n    unsubscribe: () => aliveSession.unsubscribeAll(aliveSubscription.subscriber),\n  }\n}\n","import {AliveSession as BaseAliveSession} from '@github/alive-client'\nimport type {Notifier} from '@github/alive-client'\nexport class AliveSession<T> extends BaseAliveSession<T> {\n  constructor(\n    url: string,\n    private refreshUrl: string,\n    shared: boolean,\n    notify: Notifier<T>,\n  ) {\n    super(url, () => this.getUrlFromRefreshUrl(), shared, notify)\n  }\n\n  private getUrlFromRefreshUrl() {\n    return fetchRefreshUrl(this.refreshUrl)\n  }\n}\n\ntype PostUrl = {url?: string; token?: string}\nasync function fetchRefreshUrl(url: string): Promise<string | null> {\n  const data = await fetchJSON<PostUrl>(url)\n  return data && data.url && data.token ? post(data.url, data.token) : null\n}\n\nasync function fetchJSON<T>(url: string): Promise<T | null> {\n  const response = await fetch(url, {headers: {Accept: 'application/json'}})\n  if (response.ok) {\n    return response.json()\n  } else if (response.status === 404) {\n    return null\n  } else {\n    throw new Error('fetch error')\n  }\n}\n\nasync function post(url: string, csrf: string): Promise<string> {\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'same-origin',\n    headers: {\n      'Scoped-CSRF-Token': csrf,\n    },\n  })\n  if (response.ok) {\n    return response.text()\n  } else {\n    throw new Error('fetch error')\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import {NO_MATCH, fuzzyScore} from './fuzzy-score'\n\ntype fuzzyFilterProps<T> = {\n  items: T[]\n  filter: string\n  key: (option: T) => string\n  // Used when you want to compare against two attributes, and take the highest score.\n  // An example could be comparing against a users login, and then name, and taking the highest score.\n  secondaryKey?: (option: T) => string\n}\n\nexport const fuzzyFilter = <T>({items, filter, key, secondaryKey}: fuzzyFilterProps<T>): T[] => {\n  let filteredItems = items.map(i => [fuzzyScore(filter, key(i)), i] as const)\n\n  if (secondaryKey) {\n    filteredItems = filteredItems.map(\n      ([keyScore, i]) => [Math.max(keyScore, fuzzyScore(filter, secondaryKey(i))), i] as const,\n    )\n  }\n\n  return filteredItems\n    .filter(([s]) => s > NO_MATCH)\n    .sort(([aScore, a], [bScore, b]) => {\n      if (bScore === aScore) {\n        // Default to sorting alphabetically if scores are the same.\n        return key(a).localeCompare(key(b))\n      }\n      return bScore - aScore\n    })\n    .map(([, o]) => o)\n}\n","import {score} from 'fzy.js'\n\nexport const DIRECT_MATCH = Infinity\nexport const NO_MATCH = -Infinity\nexport const BONUS_POINT = 1\n\nexport const fuzzyScore = (searchQuery: string, text: string, bonusForStartOrEndMatch = BONUS_POINT): number => {\n  const safeSearchQuery = searchQuery.trim().toLowerCase()\n  const safeText = text.trim().toLowerCase()\n\n  if (safeSearchQuery === safeText) {\n    return DIRECT_MATCH\n  }\n\n  if (safeText.length === 0 || safeSearchQuery.length === 0) {\n    return NO_MATCH\n  }\n\n  const fzyScore = score(safeSearchQuery, safeText)\n\n  // fzy unintuitively returns Infinity if the length of the item is less than or equal to the length of the query\n  if (fzyScore === Infinity && safeSearchQuery !== safeText) {\n    return NO_MATCH\n  }\n\n  // Bonus points awarding to direct matches on individual components\n  if (safeText.startsWith(safeSearchQuery) || safeText.endsWith(safeSearchQuery)) {\n    return fzyScore + bonusForStartOrEndMatch\n  } else {\n    return fzyScore\n  }\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","import {useAppPayload} from './use-app-payload'\n\nexport type AppPayloadWithFeatureFlags = {enabled_features?: EnabledFeatures}\nexport type EnabledFeatures = {[key: string]: boolean | undefined}\n\n/**\n * Fetches all client side feature flags.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlags = () => useAppPayload<AppPayloadWithFeatureFlags>()?.enabled_features ?? {}\n\n/**\n * Fetches a specific client side feature flag.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlag = (featureName: string) => !!useFeatureFlags()[featureName]\n","import type {ValueType} from '@github-ui/custom-properties-types'\nimport {FilterProviderType, type SuppliedFilterProviderOptions} from '@github-ui/filter'\nimport {StaticFilterProvider} from '@github-ui/filter/providers'\nimport {NoteIcon} from '@primer/octicons-react'\n\nimport {TRUE_FALSE_FILTER_VALUES} from './static'\n\nexport interface PropertyDefinition {\n  propertyName: string\n  allowedValues?: string[] | null\n  required?: boolean\n  valueType: ValueType\n}\n\nexport function getCustomPropertiesProviders(definitions: PropertyDefinition[]) {\n  return definitions.map(definition => new CustomPropertyFilterProvider(definition))\n}\n\nconst NOT_SHOWN = 10\n\nclass CustomPropertyFilterProvider extends StaticFilterProvider {\n  constructor(definition: PropertyDefinition) {\n    const {propertyName, valueType} = definition\n\n    const allowedValues = definition.allowedValues || []\n    const filter = {\n      displayName: `Property: ${propertyName}`,\n      key: `props.${propertyName}`,\n      priority: NOT_SHOWN,\n      icon: NoteIcon,\n    }\n\n    const values = allowedValues.map((value, index) => ({value, displayName: value, priority: index + 1}))\n\n    const filterValues = valueType === 'true_false' ? TRUE_FALSE_FILTER_VALUES : values\n    const filterOptions = getFilterOptions(definition)\n\n    super(filter, filterValues, filterOptions)\n\n    this.type = this.filterProviderType(valueType)\n  }\n\n  filterProviderType = (valueType: ValueType) => {\n    switch (valueType) {\n      case 'single_select':\n        return FilterProviderType.Select\n      case 'multi_select':\n        return FilterProviderType.Select\n      case 'true_false':\n        return FilterProviderType.Boolean\n      case 'string':\n        return FilterProviderType.Text\n    }\n  }\n}\n\nfunction getFilterOptions({valueType, required}: PropertyDefinition): SuppliedFilterProviderOptions {\n  return {\n    filterTypes: {multiKey: valueType === 'multi_select', multiValue: true, valueless: !required},\n  }\n}\n","import {type FilterKey, FilterProviderType} from '@github-ui/filter'\nimport {StaticFilterProvider} from '@github-ui/filter/providers'\nimport {CodeIcon} from '@primer/octicons-react'\n\nexport class LanguageStaticFilterProvider extends StaticFilterProvider {\n  constructor() {\n    const values = LANGUAGES.map(({name, color}) => ({\n      value: name,\n      displayName: name,\n      color,\n      priority: POPULAR_LANGUAGES.includes(name) ? 5 : 10,\n      iconColor: color,\n    }))\n    // Regardless of priority, they are displayed by order of appearance\n    values.sort((a, b) => a.priority - b.priority)\n    super(LANGUAGES_FILTER, values, {filterTypes: {multiKey: false, multiValue: true, valueless: false}})\n    this.type = FilterProviderType.Select\n  }\n}\n\nconst LANGUAGES_FILTER: FilterKey = {\n  displayName: 'Language',\n  key: 'language',\n  description: 'Programming language',\n  priority: 3,\n  icon: CodeIcon,\n}\n\ninterface Language {\n  name: string\n  color: string\n  priority?: number\n}\n\nconst POPULAR_LANGUAGES = ['C++', 'Go', 'Java', 'JavaScript', 'PHP', 'Python', 'Ruby', 'TypeScript']\n\n// NOTE: this is not intended to be an exhaustive list of supported languages,\n// but just a list suitable to be rendered as suggestions. The list is copied\n// from Blackbird frontend (which is not reference-able from ui/packages):\n// app/components/search/suggestions/languages.ts\nexport const LANGUAGES: Language[] = [\n  {name: 'ABAP', color: '#E8274B'},\n  {name: 'AGS Script', color: '#B9D9FF'},\n  {name: 'AMPL', color: '#E6EFBB'},\n  {name: 'ANTLR', color: '#9DC3FF'},\n  {name: 'API Blueprint', color: '#2ACCA8'},\n  {name: 'APL', color: '#5A8164'},\n  {name: 'ASP', color: '#6a40fd'},\n  {name: 'ATS', color: '#1ac620'},\n  {name: 'ActionScript', color: '#882B0F'},\n  {name: 'Ada', color: '#02f88c'},\n  {name: 'Agda', color: '#315665'},\n  {name: 'Alloy', color: '#64C800'},\n  {name: 'AngelScript', color: '#C7D7DC'},\n  {name: 'AppleScript', color: '#101F1F'},\n  {name: 'Arc', color: '#aa2afe'},\n  {name: 'AspectJ', color: '#a957b0'},\n  {name: 'Assembly', color: '#6E4C13'},\n  {name: 'Asymptote', color: '#4a0c0c'},\n  {name: 'AutoHotkey', color: '#6594b9'},\n  {name: 'AutoIt', color: '#1C3552'},\n  {name: 'Ballerina', color: '#FF5000'},\n  {name: 'Batchfile', color: '#C1F12E'},\n  {name: 'BlitzMax', color: '#cd6400'},\n  {name: 'Boo', color: '#d4bec1'},\n  {name: 'C', color: '#555555'},\n  {name: 'C++', color: '#f34b7d'},\n  {name: 'C#', color: '#178600'},\n  {name: 'CSS', color: '#563d7c'},\n  {name: 'Ceylon', color: '#dfa535'},\n  {name: 'Chapel', color: '#8dc63f'},\n  {name: 'Cirru', color: '#ccccff'},\n  {name: 'Clarion', color: '#db901e'},\n  {name: 'Clean', color: '#3F85AF'},\n  {name: 'Click', color: '#E4E6F3'},\n  {name: 'Clojure', color: '#db5855'},\n  {name: 'CoffeeScript', color: '#244776'},\n  {name: 'ColdFusion', color: '#ed2cd6'},\n  {name: 'Common Lisp', color: '#3fb68b'},\n  {name: 'Common Workflow Language', color: '#B5314C'},\n  {name: 'Component Pascal', color: '#B0CE4E'},\n  {name: 'Crystal', color: '#000100'},\n  {name: 'Cuda', color: '#3A4E3A'},\n  {name: 'D', color: '#ba595e'},\n  {name: 'DM', color: '#447265'},\n  {name: 'Dart', color: '#00B4AB'},\n  {name: 'DataWeave', color: '#003a52'},\n  {name: 'Dhall', color: '#dfafff'},\n  {name: 'Dockerfile', color: '#384d54'},\n  {name: 'Dogescript', color: '#cca760'},\n  {name: 'Dylan', color: '#6c616e'},\n  {name: 'E', color: '#ccce35'},\n  {name: 'ECL', color: '#8a1267'},\n  {name: 'EQ', color: '#a78649'},\n  {name: 'Eiffel', color: '#946d57'},\n  {name: 'Elixir', color: '#6e4a7e'},\n  {name: 'Elm', color: '#60B5CC'},\n  {name: 'Emacs Lisp', color: '#c065db'},\n  {name: 'EmberScript', color: '#FFF4F3'},\n  {name: 'Erlang', color: '#B83998'},\n  {name: 'F#', color: '#b845fc'},\n  {name: 'F*', color: '#572e30'},\n  {name: 'FLUX', color: '#88ccff'},\n  {name: 'Factor', color: '#636746'},\n  {name: 'Fancy', color: '#7b9db4'},\n  {name: 'Fantom', color: '#14253c'},\n  {name: 'Forth', color: '#341708'},\n  {name: 'Fortran', color: '#4d41b1'},\n  {name: 'FreeMarker', color: '#0050b2'},\n  {name: 'Frege', color: '#00cafe'},\n  {name: 'G-code', color: '#D08CF2'},\n  {name: 'GDScript', color: '#355570'},\n  {name: 'Game Maker Language', color: '#71b417'},\n  {name: 'Genie', color: '#fb855d'},\n  {name: 'Gherkin', color: '#5B2063'},\n  {name: 'Glyph', color: '#c1ac7f'},\n  {name: 'Gnuplot', color: '#f0a9f0'},\n  {name: 'Go', color: '#00ADD8'},\n  {name: 'Groovy', color: '#e69f56'},\n  {name: 'HTML', color: '#e34c26'},\n  {name: 'Hack', color: '#878787'},\n  {name: 'Harbour', color: '#0e60e3'},\n  {name: 'Haskell', color: '#5e5086'},\n  {name: 'Haxe', color: '#df7900'},\n  {name: 'HCL', color: '#844fba'},\n  {name: 'HiveQL', color: '#dce200'},\n  {name: 'HolyC', color: '#ffefaf'},\n  {name: 'Hy', color: '#7790B2'},\n  {name: 'IDL', color: '#a3522f'},\n  {name: 'Idris', color: '#b30000'},\n  {name: 'Io', color: '#a9188d'},\n  {name: 'Ioke', color: '#078193'},\n  {name: 'Isabelle', color: '#FEFE00'},\n  {name: 'J', color: '#9EEDFF'},\n  {name: 'Java', color: '#b07219'},\n  {name: 'JavaScript', color: '#f1e05a'},\n  {name: 'JSONiq', color: '#40d47e'},\n  {name: 'Jolie', color: '#843179'},\n  {name: 'Jsonnet', color: '#0064bd'},\n  {name: 'Julia', color: '#a270ba'},\n  {name: 'Jupyter Notebook', color: '#DA5B0B'},\n  {name: 'KRL', color: '#28430A'},\n  {name: 'Kotlin', color: '#F18E33'},\n  {name: 'LFE', color: '#4C3023'},\n  {name: 'LLVM', color: '#185619'},\n  {name: 'LSL', color: '#3d9970'},\n  {name: 'Lasso', color: '#999999'},\n  {name: 'Lex', color: '#DBCA00'},\n  {name: 'LiveScript', color: '#499886'},\n  {name: 'LookML', color: '#652B81'},\n  {name: 'Lua', color: '#000080'},\n  {name: 'MATLAB', color: '#e16737'},\n  {name: 'MAXScript', color: '#00a6a6'},\n  {name: 'MQL4', color: '#62A8D6'},\n  {name: 'MQL5', color: '#4A76B8'},\n  {name: 'MTML', color: '#b7e1f4'},\n  {name: 'Makefile', color: '#427819'},\n  {name: 'Markdown', color: '#083fa1'},\n  {name: 'Mask', color: '#f97732'},\n  {name: 'Max', color: '#c4a79c'},\n  {name: 'Mercury', color: '#ff2b2b'},\n  {name: 'Meson', color: '#007800'},\n  {name: 'Metal', color: '#8f14e9'},\n  {name: 'Mirah', color: '#c7a938'},\n  {name: 'Modula-3', color: '#223388'},\n  {name: 'NCL', color: '#28431f'},\n  {name: 'Nearley', color: '#990000'},\n  {name: 'Nemerle', color: '#3d3c6e'},\n  {name: 'NetLinx', color: '#0aa0ff'},\n  {name: 'NetLinx+ERB', color: '#747faa'},\n  {name: 'NetLogo', color: '#ff6375'},\n  {name: 'NewLisp', color: '#87AED7'},\n  {name: 'Nextflow', color: '#3ac486'},\n  {name: 'Nim', color: '#37775b'},\n  {name: 'Nit', color: '#009917'},\n  {name: 'Nix', color: '#7e7eff'},\n  {name: 'Nu', color: '#c9df40'},\n  {name: 'OCaml', color: '#3be133'},\n  {name: 'ObjectScript', color: '#424893'},\n  {name: 'Objective-C', color: '#438eff'},\n  {name: 'Objective-C++', color: '#6866fb'},\n  {name: 'Objective-J', color: '#ff0c5a'},\n  {name: 'Omgrofl', color: '#cabbff'},\n  {name: 'Opal', color: '#f7ede0'},\n  {name: 'Oxygene', color: '#cdd0e3'},\n  {name: 'Oz', color: '#fab738'},\n  {name: 'P4', color: '#7055b5'},\n  {name: 'PLSQL', color: '#dad8d8'},\n  {name: 'Pan', color: '#cc0000'},\n  {name: 'Papyrus', color: '#6600cc'},\n  {name: 'Parrot', color: '#f3ca0a'},\n  {name: 'Pascal', color: '#E3F171'},\n  {name: 'Pawn', color: '#dbb284'},\n  {name: 'Pep8', color: '#C76F5B'},\n  {name: 'Perl', color: '#0298c3'},\n  {name: 'Perl 6', color: '#0000fb'},\n  {name: 'PHP', color: '#4F5D95'},\n  {name: 'PigLatin', color: '#fcd7de'},\n  {name: 'Pike', color: '#005390'},\n  {name: 'PogoScript', color: '#d80074'},\n  {name: 'PostScript', color: '#da291c'},\n  {name: 'PowerBuilder', color: '#8f0f8d'},\n  {name: 'PowerShell', color: '#012456'},\n  {name: 'Processing', color: '#0096D8'},\n  {name: 'Prolog', color: '#74283c'},\n  {name: 'Propeller Spin', color: '#7fa2a7'},\n  {name: 'Puppet', color: '#302B6D'},\n  {name: 'PureBasic', color: '#5a6986'},\n  {name: 'PureScript', color: '#1D222D'},\n  {name: 'Protocol Buffers', color: '#CCCCCC'},\n  {name: 'Python', color: '#3572A5'},\n  {name: 'QML', color: '#44a51c'},\n  {name: 'Quake', color: '#882233'},\n  {name: 'R', color: '#198CE7'},\n  {name: 'RAML', color: '#77d9fb'},\n  {name: 'Racket', color: '#3c5caa'},\n  {name: 'Ragel', color: '#9d5200'},\n  {name: 'Rascal', color: '#fffaa0'},\n  {name: 'Rebol', color: '#358a5b'},\n  {name: 'Red', color: '#f50000'},\n  {name: \"Ren'Py\", color: '#ff7f7f'},\n  {name: 'Ring', color: '#2D54CB'},\n  {name: 'Roff', color: '#ecdebe'},\n  {name: 'Rouge', color: '#cc0088'},\n  {name: 'Ruby', color: '#701516'},\n  {name: 'Rust', color: '#dea584'},\n  {name: 'SAS', color: '#B34936'},\n  {name: 'SQF', color: '#3F3F3F'},\n  {name: 'SRecode Template', color: '#348a34'},\n  {name: 'SaltStack', color: '#646464'},\n  {name: 'Scala', color: '#c22d40'},\n  {name: 'Scheme', color: '#1e4aec'},\n  {name: 'Self', color: '#0579aa'},\n  {name: 'Shell', color: '#89e051'},\n  {name: 'Shen', color: '#120F14'},\n  {name: 'Slash', color: '#007eff'},\n  {name: 'Slice', color: '#003fa2'},\n  {name: 'Smalltalk', color: '#596706'},\n  {name: 'Solidity', color: '#AA6746'},\n  {name: 'SourcePawn', color: '#5c7611'},\n  {name: 'Squirrel', color: '#800000'},\n  {name: 'Stan', color: '#b2011d'},\n  {name: 'Standard ML', color: '#dc566d'},\n  {name: 'SuperCollider', color: '#46390b'},\n  {name: 'Swift', color: '#ffac45'},\n  {name: 'SystemVerilog', color: '#DAE1C2'},\n  {name: 'TI Program', color: '#A0AA87'},\n  {name: 'Tcl', color: '#e4cc98'},\n  {name: 'TeX', color: '#3D6117'},\n  {name: 'Terra', color: '#00004c'},\n  {name: 'Turing', color: '#cf142b'},\n  {name: 'TypeScript', color: '#2b7489'},\n  {name: 'UnrealScript', color: '#a54c4d'},\n  {name: 'VCL', color: '#148AA8'},\n  {name: 'VHDL', color: '#adb2cb'},\n  {name: 'Vala', color: '#fbe5cd'},\n  {name: 'Verilog', color: '#b2b7f8'},\n  {name: 'Vim script', color: '#199f4b'},\n  {name: 'Visual Basic', color: '#945db7'},\n  {name: 'Volt', color: '#1F1F1F'},\n  {name: 'Vue', color: '#2c3e50'},\n  {name: 'WebAssembly', color: '#04133b'},\n  {name: 'Wollok', color: '#a23738'},\n  {name: 'X10', color: '#4B6BEF'},\n  {name: 'XC', color: '#99DA07'},\n  {name: 'XQuery', color: '#5232e7'},\n  {name: 'XSLT', color: '#EB8CEB'},\n  {name: 'YARA', color: '#220000'},\n  {name: 'YASnippet', color: '#32AB90'},\n  {name: 'Yacc', color: '#4B6C4B'},\n  {name: 'ZAP', color: '#0d665e'},\n  {name: 'ZIL', color: '#dc75e5'},\n  {name: 'ZenScript', color: '#00BCD1'},\n  {name: 'Zephir', color: '#118f9e'},\n  {name: 'Zig', color: '#ec915c'},\n  {name: 'eC', color: '#913960'},\n  {name: 'mcfunction', color: '#E22837'},\n  {name: 'nesC', color: '#94B0C7'},\n  {name: 'ooc', color: '#b0b77e'},\n  {name: 'sed', color: '#64b970'},\n  {name: 'wdl', color: '#42f1f4'},\n  {name: 'wisp', color: '#7582D1'},\n  {name: 'xBase', color: '#403a40'},\n]\n","import {\n  type FilterKey,\n  FilterProviderType,\n  type FilterSuggestion,\n  ProviderSupportStatus,\n  type SuppliedFilterProviderOptions,\n} from '@github-ui/filter'\nimport {StaticFilterProvider} from '@github-ui/filter/providers'\nimport {\n  ArchiveIcon,\n  CalendarIcon,\n  CodeIcon,\n  EyeIcon,\n  FileCodeIcon,\n  FileIcon,\n  HeartIcon,\n  IssueOpenedIcon,\n  MirrorIcon,\n  RepoForkedIcon,\n  RepoTemplateIcon,\n  SortAscIcon,\n  StarIcon,\n  TelescopeIcon,\n  TypographyIcon,\n} from '@primer/octicons-react'\n\nconst single: SuppliedFilterProviderOptions = {filterTypes: {multiKey: false, multiValue: false, valueless: false}}\nconst comma: SuppliedFilterProviderOptions = {filterTypes: {multiKey: false, multiValue: true, valueless: false}}\nconst multiKey: SuppliedFilterProviderOptions = {filterTypes: {multiKey: true, multiValue: false, valueless: false}}\nconst multiComma: SuppliedFilterProviderOptions = {filterTypes: {multiKey: true, multiValue: true, valueless: false}}\n\nexport function getAllStaticProviders() {\n  return [\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.has, REPOS_STATIC_FILTER_VALUES.has, single),\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.is, REPOS_STATIC_FILTER_VALUES.is, {\n      ...comma,\n      support: {\n        status: ProviderSupportStatus.Deprecated,\n        message: 'Filter \"is:\" is deprecated, use \"visibility:\" or \"sponsorable:\" instead',\n      },\n    }),\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.license, REPOS_STATIC_FILTER_VALUES.license, comma),\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.sort, REPOS_STATIC_FILTER_VALUES.sort, multiKey),\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.topic, REPOS_STATIC_FILTER_VALUES.topic, multiComma),\n    new ValuesFilterProvider(REPOS_STATIC_FILTER_KEYS.visibility, REPOS_STATIC_FILTER_VALUES.visibility, comma),\n\n    new BooleanFilterProvider(REPOS_STATIC_FILTER_KEYS.fork),\n    new BooleanFilterProvider(REPOS_STATIC_FILTER_KEYS.archived),\n    new BooleanFilterProvider(REPOS_STATIC_FILTER_KEYS.mirror),\n    new BooleanFilterProvider(REPOS_STATIC_FILTER_KEYS.sponsorable),\n    new BooleanFilterProvider(REPOS_STATIC_FILTER_KEYS.template),\n  ]\n}\n\nconst NOT_SHOWN = 10\n\nconst REPOS_STATIC_FILTER_KEYS = {\n  archived: {displayName: 'Archived', key: 'archived', description: '', priority: NOT_SHOWN, icon: ArchiveIcon},\n  fork: {displayName: 'Fork', key: 'fork', description: '', priority: 3, icon: RepoForkedIcon},\n  has: {displayName: 'Has', key: 'has', description: '', priority: NOT_SHOWN, icon: FileIcon},\n  is: {displayName: 'Is', key: 'is', description: '', priority: NOT_SHOWN, icon: EyeIcon},\n  license: {displayName: 'License', key: 'license', description: '', priority: 4, icon: FileCodeIcon},\n  mirror: {displayName: 'Mirror', key: 'mirror', description: '', priority: 3, icon: MirrorIcon},\n  sort: {displayName: 'Sort', key: 'sort', description: 'Order of results', priority: NOT_SHOWN, icon: SortAscIcon},\n  sponsorable: {\n    displayName: 'Sponsorable',\n    key: 'sponsorable',\n    description: '',\n    priority: NOT_SHOWN,\n    icon: HeartIcon,\n  },\n  template: {displayName: 'Template', key: 'template', description: '', priority: NOT_SHOWN, icon: RepoTemplateIcon},\n  topic: {displayName: 'Topic', key: 'topic', priority: NOT_SHOWN, icon: TelescopeIcon},\n  visibility: {displayName: 'Visibility', key: 'visibility', description: '', priority: 3, icon: EyeIcon},\n}\n\nconst VISIBILITY_FILTER_VALUES = [\n  {value: 'public', displayName: 'Public', priority: 1},\n  {value: 'private', displayName: 'Private', priority: 2},\n  {value: 'internal', displayName: 'Internal', priority: 3},\n]\n\nexport const TRUE_FALSE_FILTER_VALUES = [\n  {value: 'true', displayName: 'True', priority: 1},\n  {value: 'false', displayName: 'False', priority: 1},\n]\n\nconst REPOS_STATIC_FILTER_VALUES = {\n  has: [{value: 'funding-file', displayName: 'Funding file', priority: 1}],\n  is: [...VISIBILITY_FILTER_VALUES, {value: 'sponsorable', displayName: 'Sponsorable', priority: 4}],\n  license: [\n    {value: '0bsd', displayName: 'BSD Zero Clause License', priority: 1},\n    {value: 'mit', displayName: 'MIT License', priority: 2},\n    {value: 'apache-2.0', displayName: 'Apache License 2.0', priority: 3},\n    {value: 'cc', displayName: 'Creative Commons', priority: 4},\n    {value: 'gpl', displayName: 'GNU General Public License', priority: 5},\n    {value: 'lgpl', displayName: 'GNU Lesser General Public License', priority: 6},\n  ],\n  sort: [\n    {value: 'updated', displayName: 'Recently pushed', icon: CalendarIcon, priority: 1},\n    {value: 'name-asc', displayName: 'Name', icon: TypographyIcon, priority: 2},\n    {value: 'language-asc', displayName: 'Language', icon: CodeIcon, priority: 3},\n    {value: 'license-asc', displayName: 'License', icon: FileCodeIcon, priority: 3},\n    {value: 'topics', displayName: 'Topics', icon: TelescopeIcon, priority: 3},\n    {value: 'size', displayName: 'Size', icon: FileIcon, priority: 3},\n    {value: 'stars', displayName: 'Total stars', icon: StarIcon, priority: 3},\n    {value: 'forks', displayName: 'Total forks', icon: RepoForkedIcon, priority: 3},\n    {value: 'updated-asc', displayName: 'Recently pushed (descending)', icon: CalendarIcon, priority: NOT_SHOWN},\n    {value: 'name', displayName: 'Name (descending)', icon: TypographyIcon, priority: NOT_SHOWN},\n    {value: 'language', displayName: 'Language (descending)', icon: CodeIcon, priority: NOT_SHOWN},\n    {value: 'license', displayName: 'License (descending)', icon: FileCodeIcon, priority: NOT_SHOWN},\n    {value: 'topics-asc', displayName: 'Topics (ascending)', icon: TelescopeIcon, priority: NOT_SHOWN},\n    {value: 'size-asc', displayName: 'Size (ascending)', icon: FileIcon, priority: NOT_SHOWN},\n    {value: 'stars-asc', displayName: 'Total stars (ascending)', icon: StarIcon, priority: NOT_SHOWN},\n    {value: 'forks-asc', displayName: 'Total forks (ascending)', icon: RepoForkedIcon, priority: NOT_SHOWN},\n    {\n      value: 'help-wanted-issues-asc',\n      displayName: 'Help-wanted issues (ascending)',\n      icon: IssueOpenedIcon,\n      priority: 5,\n    },\n    {value: 'help-wanted-issues', displayName: 'Help-wanted issues (descending)', icon: IssueOpenedIcon, priority: 5},\n  ],\n  topic: [],\n  visibility: VISIBILITY_FILTER_VALUES,\n}\n\nclass ValuesFilterProvider extends StaticFilterProvider {\n  constructor(filter: FilterKey, values: FilterSuggestion[], options?: SuppliedFilterProviderOptions) {\n    super(filter, values, options)\n    this.type = values.length === 0 ? FilterProviderType.RawText : FilterProviderType.Select\n  }\n}\n\nclass BooleanFilterProvider extends StaticFilterProvider {\n  constructor(filter: FilterKey) {\n    super(filter, TRUE_FALSE_FILTER_VALUES, single)\n    this.type = FilterProviderType.Boolean\n  }\n}\n","import type React from 'react'\nimport pluralize from 'pluralize'\nimport {Spinner, Text, Link as PrimerLink} from '@primer/react'\nimport Flash from './Flash'\nimport ControlGroupDropDown from './ControlGroupDropDown'\nimport {useNewRepoPolicyDropdown} from '../hooks/UseNewRepoPolicyDropdown'\nimport {\n  RequestStatus,\n  type ConfigurationConfirmationSummary,\n  type PendingConfigurationChanges,\n} from '../security-products-enablement-types'\nimport {testIdProps} from '@github-ui/test-id-props'\n\ntype ConfirmationDialogProps = {\n  confirmationDialogSummary: ConfigurationConfirmationSummary | null\n  pendingConfigurationChanges: PendingConfigurationChanges\n  hasPublicRepos: boolean\n  showDefaultForNewReposDropDown?: boolean\n  ghasPurchased: boolean\n  docsBillingUrl: string\n}\n\ntype ErrorObject = {\n  message: string\n  variant: 'danger' | 'warning' | undefined\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  confirmationDialogSummary,\n  pendingConfigurationChanges,\n  showDefaultForNewReposDropDown = false,\n  hasPublicRepos,\n  ghasPurchased,\n  docsBillingUrl,\n}) => {\n  const {config} = pendingConfigurationChanges\n  const {\n    public_repo_count,\n    private_and_internal_repo_count,\n    licenses_needed,\n    private_and_internal_repos_count_exceeding_licenses,\n    requestStatus,\n  } = confirmationDialogSummary || {}\n\n  const getConfirmationDialogErrors = (): ErrorObject[] => {\n    const errors: Array<{message: string; variant: string}> = []\n\n    const exceeded_message =\n      private_and_internal_repos_count_exceeding_licenses === 0\n        ? `Private repositories that do not have GitHub Advanced Security will only have free features enabled.`\n        : `${private_and_internal_repos_count_exceeding_licenses} private ${pluralize(\n            'repository',\n            private_and_internal_repos_count_exceeding_licenses,\n          )} do not have GitHub Advanced Security and will only have free features enabled.`\n\n    const additional_license_sentence =\n      licenses_needed && licenses_needed > 0\n        ? `You need ${licenses_needed} additional ${pluralize('license', licenses_needed)}. `\n        : ''\n\n    if (confirmationDialogSummary?.errors) {\n      for (const error of confirmationDialogSummary?.errors) {\n        switch (error) {\n          case 'internal_ghas_error':\n            errors.push({\n              message: 'An error ocurred and license usage could not be calculated.',\n              variant: 'danger',\n            })\n            break\n          case 'license_limit_exceeded':\n            errors.push({\n              message: `${additional_license_sentence}${exceeded_message}`,\n              variant: 'warning',\n            })\n            break\n          case 'blocked_by_enterprise_policy':\n            errors.push({\n              message:\n                'Modifying GitHub Advanced Security and related settings has been blocked by an enterprise policy. Continue with free features for all repositories, or cancel and change your selection.',\n              variant: 'warning',\n            })\n            break\n          case 'ghas_not_purchased':\n            if (private_and_internal_repo_count && private_and_internal_repo_count > 0)\n              errors.push({\n                message:\n                  'This organization does not have GitHub Advanced Security. Private repositories will only have free features enabled.',\n                variant: 'warning',\n              })\n            break\n          default:\n            // If the error is not recognized, skip it\n            break\n        }\n      }\n    }\n    return errors.map(error => ({message: error.message, variant: error.variant as 'danger' | 'warning'}))\n  }\n\n  const publicReposSection = (\n    <li>\n      <Text sx={{fontWeight: 'bold'}}>{public_repo_count}</Text> public {pluralize('repository', public_repo_count)}\n    </li>\n  )\n\n  const applyReposSection = (\n    <p>\n      This will apply {pendingConfigurationChanges.config.name} to{' '}\n      {pluralize('repository', confirmationDialogSummary?.total_repo_count, true)}.\n    </p>\n  )\n\n  const enforceReposSection = (\n    <p>\n      This will <Text sx={{fontWeight: 'bold'}}>apply and enforce</Text> {pendingConfigurationChanges.config.name} to{' '}\n      {pluralize('repository', confirmationDialogSummary?.total_repo_count, true)}. Repository admins will not to be\n      able change security settings set by this configuration.\n    </p>\n  )\n\n  const privateAndInternalReposSection = (\n    <li>\n      <Text sx={{fontWeight: 'bold'}}>{private_and_internal_repo_count}</Text> private and internal{' '}\n      {pluralize('repository', private_and_internal_repo_count)}\n    </li>\n  )\n\n  const unableToCalculateLicenseMessage = (\n    <>\n      We are currently unable to calculate the required number of licenses for this application. To get an estimate, try\n      selecting fewer repositories at a time. Alternatively, you can proceed by clicking &#39;Apply&#39;.\n    </>\n  )\n\n  const licensesNeededSection = (\n    <li>\n      {licenses_needed === null ? (\n        unableToCalculateLicenseMessage\n      ) : (\n        <>\n          <Text sx={{fontWeight: 'bold'}}>{licenses_needed}</Text> GitHub Advanced Security{' '}\n          {pluralize('license', licenses_needed)} required\n        </>\n      )}\n      <br />\n      <PrimerLink inline href={docsBillingUrl} target=\"_blank\">\n        Learn about license consumption\n      </PrimerLink>\n    </li>\n  )\n\n  const summarySection = () => {\n    switch (requestStatus) {\n      case RequestStatus.InProgress:\n        return (\n          <div className=\"text-center\">\n            <Spinner size=\"small\" />\n          </div>\n        )\n      case RequestStatus.Success:\n        return (\n          <div>\n            {config.enforcement === 'enforced' ? enforceReposSection : applyReposSection}\n            <ul className=\"ml-4 pt-2\">\n              {publicReposSection}\n              {privateAndInternalReposSection}\n              {ghasPurchased && licensesNeededSection}\n            </ul>\n          </div>\n        )\n      default:\n        return unableToCalculateLicenseMessage\n    }\n  }\n\n  const DefaultForNewReposDropDown = () => {\n    const {options, onSelect} = useNewRepoPolicyDropdown({hasPublicRepos})\n\n    const newRepoDefaultProps = {\n      title: 'Use as default for newly created repositories:',\n      testId: 'repo-default',\n      options,\n      onSelect,\n    }\n\n    return <ControlGroupDropDown {...newRepoDefaultProps} />\n  }\n\n  return (\n    <div {...testIdProps('confirmation-dialog-content')}>\n      {getConfirmationDialogErrors().map((error, index) => (\n        <Flash key={index} message={error.message} variant={error.variant} />\n      ))}\n      {summarySection()}\n      {requestStatus === RequestStatus.Success && (\n        <>\n          <br />\n          {showDefaultForNewReposDropDown && DefaultForNewReposDropDown()}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default ConfirmationDialog\n\ntry{ ConfirmationDialog.displayName ||= 'ConfirmationDialog' } catch {}\ntry{ DefaultForNewReposDropDown.displayName ||= 'DefaultForNewReposDropDown' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport ControlGroupDropDown, {type ControlGroupDropDownOption} from '../ControlGroupDropDown'\nimport {useDialogContext} from '../../contexts/DialogContext'\nimport {useNewRepoPolicyDropdown} from '../../hooks/UseNewRepoPolicyDropdown'\nimport {useAppContext} from '../../contexts/AppContext'\nimport {Box, Text} from '@primer/react'\n\nconst SecurityConfigurationPolicySection: React.FC = () => {\n  const appContext = useAppContext()\n  const {configurationPolicy, setConfigurationPolicy} = useDialogContext()\n\n  const NewRepoDefaultRow = () => {\n    const {options, onSelect} = useNewRepoPolicyDropdown({hasPublicRepos: appContext.capabilities.hasPublicRepos})\n\n    const newRepoDefaultProps = {\n      title: 'Use as default for newly created repositories',\n      testId: 'repo-default',\n      options,\n      onSelect,\n    }\n\n    return <ControlGroupDropDown {...newRepoDefaultProps} />\n  }\n\n  const enforcementRow = () => {\n    const options: ControlGroupDropDownOption[] = [\n      {name: \"Don't enforce\", id: 'not_enforced', selected: configurationPolicy.enforcement === 'not_enforced'},\n      {name: 'Enforce', id: 'enforced', selected: configurationPolicy.enforcement === 'enforced'},\n    ]\n    const onSelect = (option: ControlGroupDropDownOption) => {\n      // The option's ID map to expected values of 'enforced' / 'not_enforced' so we can use it directly:\n      setConfigurationPolicy({...configurationPolicy, enforcement: option.id})\n    }\n\n    const enforcementRowProps = {\n      title: 'Enforce configuration',\n      description:\n        'Block repository owners from changing features that are enabled or disabled by this configuration. Repository owners will still be able to change features that are not set.',\n      testId: '',\n      options,\n      onSelect,\n    }\n\n    return <ControlGroupDropDown {...enforcementRowProps} />\n  }\n\n  return (\n    <>\n      <Box sx={{my: 3}}>\n        <Text as=\"strong\" sx={{fontSize: 4}}>\n          Policy\n        </Text>\n      </Box>\n      <ControlGroup>\n        {NewRepoDefaultRow()}\n        {enforcementRow()}\n      </ControlGroup>\n    </>\n  )\n}\n\nexport default SecurityConfigurationPolicySection\n\ntry{ SecurityConfigurationPolicySection.displayName ||= 'SecurityConfigurationPolicySection' } catch {}\ntry{ NewRepoDefaultRow.displayName ||= 'NewRepoDefaultRow' } catch {}","import {createContext, useContext} from 'react'\nimport type {AppContextValue} from '../security-products-enablement-types'\n\nexport const AppContext = createContext<AppContextValue | undefined>(undefined)\n\nexport function useAppContext() {\n  const context = useContext(AppContext)\n  if (!context) {\n    throw new Error('useAppContext must be used within a AppContext.Provider')\n  }\n  return context\n}\n\ntry{ AppContext.displayName ||= 'AppContext' } catch {}","import type React from 'react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {AppContextValue} from './security-products-enablement-types'\nimport {AppContext} from './contexts/AppContext'\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nconst App: React.FC<{children?: React.ReactNode}> = ({children}) => {\n  const appContextValue = useRoutePayload<AppContextValue>()\n\n  return (\n    <>\n      <AppContext.Provider value={appContextValue}>{children}</AppContext.Provider>\n    </>\n  )\n}\nexport default App\n\ntry{ App.displayName ||= 'App' } catch {}","import {createContext, useContext} from 'react'\nimport type {RepositoryContextValue} from '../security-products-enablement-types'\n\nexport const RepositoryContext = createContext<RepositoryContextValue | undefined>(undefined)\n\nexport function useRepositoryContext() {\n  const context = useContext(RepositoryContext)\n  if (!context) {\n    throw new Error('useRepositoryContext must be used within a RepositoryContext.Provider')\n  }\n  return context\n}\n\ntry{ RepositoryContext.displayName ||= 'RepositoryContext' } catch {}","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {ChangesInProgress} from '../security-products-enablement-types'\nimport {\n  settingsOrgSecurityProductsEnablementInProgressPath,\n  settingsOrgSecurityProductsRefreshPath,\n} from '@github-ui/paths'\n\nexport async function fetchInProgressStatus(org: string, repositoryIds?: number[]) {\n  const result = await verifiedFetchJSON(settingsOrgSecurityProductsEnablementInProgressPath({org}), {\n    method: 'POST',\n    body: {repository_ids: repositoryIds},\n  })\n\n  if (result.ok) return (await result.json()) as ChangesInProgress\n}\n\nexport async function fetchRefresh(org: string, repositoryIds?: number[]) {\n  const fetchOptions = repositoryIds ? {method: 'POST', body: {repository_ids: repositoryIds}} : {method: 'GET'}\n  const result = await verifiedFetchJSON(settingsOrgSecurityProductsRefreshPath({org}), fetchOptions)\n\n  if (result.ok) return await result.json()\n}\n","import type {PathFunction} from '@github-ui/paths'\n\nexport const dismissNoticePath: PathFunction<{notice: string}> = ({notice}) => `/settings/dismiss-notice/${notice}`\n","import type React from 'react'\nimport {Flash as PrimerFlash, Octicon, type SxProp} from '@primer/react'\nimport {AlertIcon, CheckIcon, InfoIcon} from '@primer/octicons-react'\nimport {useLocation} from 'react-router-dom'\nimport {testIdProps} from '@github-ui/test-id-props'\n\nexport type FlashProps = {\n  message?: string\n  variant?: 'default' | 'warning' | 'success' | 'danger'\n} & SxProp\n\nconst Flash: React.FC<FlashProps> = props => {\n  const location = useLocation()\n  const flash = props?.message ? props : location?.state?.flash\n\n  if (!flash?.message) return null\n\n  const message = flash.message\n  const variant = flash.variant || 'default'\n\n  const icon = (() => {\n    switch (variant) {\n      case 'danger':\n      case 'warning':\n        return AlertIcon\n      case 'success':\n        return CheckIcon\n      default:\n        return InfoIcon\n    }\n  })()\n\n  return (\n    <PrimerFlash sx={{mb: 3, ...props.sx}} variant={variant} {...testIdProps('flash')}>\n      <Octicon icon={icon} sx={{mr: 2}} />\n      {message}\n    </PrimerFlash>\n  )\n}\n\nexport default Flash\n","import {Box} from '@primer/react'\n\ntype ControlGroupContainerProps = {\n  children: React.ReactNode\n  border?: boolean\n  fullWidth?: boolean\n  ['data-testid']?: string\n}\n\nconst ControlGroupContainer = ({\n  children,\n  fullWidth = false,\n  border = true,\n  'data-testid': testId,\n}: ControlGroupContainerProps) => {\n  return (\n    <Box\n      sx={{\n        '--link-item-padding': fullWidth ? 'var(--base-size-12)' : 0,\n        '--link-item-margin': fullWidth ? 'calc(var(--base-size-12) * -1)' : 0,\n        borderRadius: 2,\n        backgroundColor: 'canvas.default',\n        border: '1px solid',\n        borderColor: border ? 'border.muted' : 'transparent',\n        // The lobotomized owl selector: Add border-top to all direct children except the first one\n        '> * + * > *': {\n          borderTop: '1px solid',\n          borderColor: 'border.muted',\n        },\n        '> :first-child, > :first-child > :first-child ': {\n          borderTopLeftRadius: 2,\n          borderTopRightRadius: 2,\n        },\n        '> :last-child, > :last-child > :last-child': {\n          borderBottomLeftRadius: 2,\n          borderBottomRightRadius: 2,\n        },\n      }}\n      data-testid={testId}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default ControlGroupContainer\n\ntry{ ControlGroupContainer.displayName ||= 'ControlGroupContainer' } catch {}","import type {SxProp} from '@primer/react'\nimport {Heading} from '@primer/react'\n\nexport type TitleProps = React.HTMLAttributes<HTMLElement> & {\n  children: React.ReactNode | string\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  sx?: SxProp\n}\n\nconst Title = ({children, as = 'h3', sx, ...restProps}: TitleProps) => {\n  return (\n    <Heading\n      as={as}\n      sx={{\n        font: 'var(--text-body-shorthand-medium)',\n        fontWeight: 'var(--text-title-weight-medium)',\n        ...sx,\n      }}\n      {...restProps}\n    >\n      {children}\n    </Heading>\n  )\n}\nTitle.displayName = 'ControlGroup.Title'\n\nexport default Title\n","import {Box, Text} from '@primer/react'\n\ntype DescriptionProps = {\n  children: React.ReactNode | string\n}\n\nconst Description = ({children}: DescriptionProps) => {\n  if (typeof children === 'string') {\n    return (\n      <Text as=\"p\" sx={{font: 'var(--text-body-shorthand-small)', lineHeight: 1.5, color: 'fg.muted', margin: 0}}>\n        {children}\n      </Text>\n    )\n  }\n\n  return (\n    <Box as=\"span\" sx={{font: 'var(--text-body-shorthand-small)', color: 'fg.muted'}}>\n      {children}\n    </Box>\n  )\n}\nDescription.displayName = 'ControlGroup.Description'\n\nexport default Description\n","import {PencilIcon} from '@primer/octicons-react'\nimport {Box, ToggleSwitch as PrimerToggleSwitch, IconButton, Button as PrimerButton} from '@primer/react'\n\n/* --------------\n  Custom Control: Allow consumers to add their own custom controls to the ControlGroup\n----------------*/\n\ntype CustomProps = {\n  children: React.ReactNode\n}\n\nexport const Custom = ({children}: CustomProps) => {\n  return <>{children}</>\n}\nCustom.displayName = 'ControlGroup.Custom'\n\n/* --------------\n      Toggle\n----------------*/\n\ntype ToggleSwitchProps = React.ComponentProps<typeof PrimerToggleSwitch>\n\nexport const ToggleSwitch = (props: ToggleSwitchProps) => {\n  return <PrimerToggleSwitch size=\"small\" {...props} />\n}\n\nToggleSwitch.displayName = 'ControlGroup.ToggleSwitch'\n\n/* --------------\n      Button\n----------------*/\n\ntype ButtonProps = React.ComponentProps<typeof PrimerButton>\n\nexport const Button = (props: ButtonProps) => {\n  return <PrimerButton {...props}>{props.children}</PrimerButton>\n}\n\nButton.displayName = 'ControlGroup.Button'\n\n/* --------------\n    Inline Edit\n----------------*/\n\ntype InlineEditProps = {\n  value?: string | null\n}\n\ntype IconButtonProps = React.ComponentProps<typeof IconButton>\ntype OmittedIconButtonProps = Omit<IconButtonProps, 'icon' | 'aria-labelledby' | 'value'>\n\nexport const InlineEdit = ({value = null, ...props}: InlineEditProps & OmittedIconButtonProps) => {\n  return (\n    <>\n      <Box className=\"inlineEdit\" sx={{display: 'flex', alignItems: 'center', gap: 3, justifyContent: 'flex-start'}}>\n        <span>{value}</span>\n        {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n        <IconButton\n          unsafeDisableTooltip={true}\n          icon={PencilIcon}\n          aria-label=\"Edit\"\n          sx={{color: 'fg.muted'}}\n          {...props}\n        />\n      </Box>\n    </>\n  )\n}\n\nInlineEdit.displayName = 'ControlGroup.InlineEdit'\n","export const getPaddingInlineStart = (nestedLevel: number) =>\n  nestedLevel ? `calc(var(--base-size-12) * ${nestedLevel + 1})` : 'var(--base-size-12)'\n","import {Box} from '@primer/react'\nimport {useSlots} from '@primer/react/drafts'\nimport styled from 'styled-components'\nimport Title from './Title'\nimport Description from './Description'\nimport {Button, InlineEdit, ToggleSwitch, Custom} from './Controls'\nimport {getPaddingInlineStart} from './utils'\n\nexport type ControlGroupItemProps = {\n  children: React.ReactNode\n  nestedLevel?: 0 | 1 | 2\n  disabled?: boolean\n}\n\nconst slotConfig = {\n  title: Title,\n  description: Description,\n  custom: Custom,\n  toggle: ToggleSwitch,\n  button: Button,\n  inlineEdit: InlineEdit,\n}\n\nconst StyledItemBox = styled(Box)`\n  container-name: controlbox;\n  container-type: inline-size;\n`\n\nconst ItemContainerQuery = `\n  @container (max-width: 500px) {\n    ${StyledItemBox} .controlBoxContainer {\n      column-gap: 0;\n      row-gap: 2px;\n      align-items: center;\n    }\n    ${StyledItemBox} .inlineControl {\n      grid-row: 1;\n      grid-column: 2 / 3;\n      align-self: start;\n    }\n    ${StyledItemBox} .blockControl {\n      grid-column: 1 / 3;\n      grid-row: auto;\n      margin-top: 8px;\n    }\n    ${StyledItemBox} .titleBox {\n      grid-column: 1 / 2;\n    }\n    ${StyledItemBox} .descriptionBox {\n      grid-column: 1 / 3;\n    }\n    ${StyledItemBox} .inlineEdit {\n      justify-content: space-between;\n    }\n  }\n`\n\nconst Item = ({children, nestedLevel = 0, disabled = false}: ControlGroupItemProps) => {\n  const [slots] = useSlots(children, slotConfig)\n  const {title, description, custom, toggle, button, inlineEdit} = slots\n\n  const paddingInlineStart = getPaddingInlineStart(nestedLevel)\n\n  return (\n    <>\n      <StyledItemBox sx={{pl: paddingInlineStart, pr: 'var(--base-size-12)', bg: disabled ? 'canvas.inset' : ''}}>\n        {/*\n          This is a workaround so we can use `@container` without upgrading `styled-components` to 6.x\n          We skip rendering the workaround in the test environment because our version of `jest-styled-components`\n          won't be able to parse `@container`.\n        */}\n        {process.env.NODE_ENV !== 'test' && <style type=\"text/css\">{ItemContainerQuery}</style>}\n        <Box\n          className={`controlBoxContainer`}\n          sx={{\n            py: 'var(--base-size-12)',\n            display: 'grid',\n            gridTemplateColumns: '1fr auto',\n            columnGap: 4,\n            justifyContent: 'space-between',\n            alignItems: description ? 'flex-start' : 'center',\n          }}\n        >\n          {title && (\n            <Box className=\"titleBox\" sx={{gridRow: 1, gridColumn: '1 / 3'}}>\n              {title}\n            </Box>\n          )}\n          {description && (\n            <Box\n              className=\"descriptionBox\"\n              sx={{\n                gridRow: 2,\n                gridColumn: '1 / 3',\n              }}\n            >\n              {description}\n            </Box>\n          )}\n\n          {/* Render for vertically aligned layout */}\n          {(button || inlineEdit || custom || toggle) && (\n            <Box\n              className={`${toggle ? 'inlineControl' : 'blockControl'}`}\n              sx={{\n                gridRow: description && '1 / 3',\n                gridColumn: 3,\n                marginTop: 0,\n              }}\n            >\n              {/* Was having typescript errors so solved it by wrapping this in a fragment */}\n              <>{button || inlineEdit || custom || toggle}</>\n            </Box>\n          )}\n        </Box>\n      </StyledItemBox>\n    </>\n  )\n}\n\nexport default Item\n\ntry{ StyledItemBox.displayName ||= 'StyledItemBox' } catch {}\ntry{ Item.displayName ||= 'Item' } catch {}","import {ChevronRightIcon} from '@primer/octicons-react'\nimport {Box, Link} from '@primer/react'\nimport {useSlots} from '@primer/react/drafts'\nimport Title from './Title'\nimport Description from './Description'\nimport styled from 'styled-components'\nimport {getPaddingInlineStart} from './utils'\n\nconst slotConfig = {\n  title: Title,\n  description: Description,\n}\n\nexport type ControlGroupLinkProps = {\n  href: string\n  children: React.ReactNode\n  leadingIcon?: React.ReactNode\n  nestedLevel?: 0 | 1 | 2\n  value?: string\n}\n\n// Using inclusive component styles for the link as per:\n// https://inclusive-components.design/cards/\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  :hover {\n    text-decoration: none;\n  }\n  ::after {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    content: '';\n  }\n  :focus {\n    text-decoration: underline;\n  }\n`\n\nconst StyledLinkItem = styled(Box)`\n  container-name: controlbox;\n  container-type: inline-size;\n  :focus {\n    text-decoration: underline;\n  }\n  :focus-within {\n    outline: 5px auto Highlight;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n  /* Fallback so that browsers that don't have focus-within will still see focus style */\n  :focus-within a:focus {\n    text-decoration: none;\n  }\n`\n\nconst LinkItemContainerQuery = `\n  @container (max-width: 500px) {\n    ${StyledLinkItem} .descriptionBox {\n      margin-top: 2px;\n    }\n  }\n`\n\nconst LinkItem = ({children, leadingIcon = null, href, value, nestedLevel = 0}: ControlGroupLinkProps) => {\n  const [slots] = useSlots(children, slotConfig)\n  const {title, description} = slots\n\n  // Nested items are indented\n  const paddingInlineStart = getPaddingInlineStart(nestedLevel)\n\n  return (\n    <StyledLinkItem\n      sx={{\n        pl: paddingInlineStart,\n        pr: 'var(--base-size-12)',\n        position: 'relative',\n        '&:hover': {\n          bg: 'var(--control-transparent-bgColor-hover, var(--color-action-list-item-default-hover-bg))',\n          cursor: 'pointer',\n        },\n        '&:hover > *, :hover + * > *': {\n          borderColor: 'transparent',\n        },\n      }}\n    >\n      {/*\n          This is a workaround so we can use `@container` without upgrading `styled-components` to 6.x\n          We skip rendering the workaround in the test environment because our version of `jest-styled-components`\n          won't be able to parse `@container`.\n        */}\n      {process.env.NODE_ENV !== 'test' && <style type=\"text/css\">{LinkItemContainerQuery}</style>}\n      <Box\n        sx={{\n          py: 'var(--base-size-12)',\n          px: 'var(--link-item-padding)',\n          mx: 'var(--link-item-margin)',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{display: 'flex', alignItems: 'center', gap: 'var(--base-size-12)'}}>\n          {leadingIcon && (\n            <Box\n              sx={{\n                display: 'flex',\n                border: '1px solid',\n                borderColor: 'border.muted',\n                borderRadius: 2,\n                boxShadow: 'shadow.small',\n                p: '10px',\n                color: 'fg.muted',\n                backgroundColor: 'canvas.default',\n              }}\n            >\n              {leadingIcon}\n            </Box>\n          )}\n          <div>\n            <StyledLink href={href}>{title}</StyledLink>\n            <Box className=\"descriptionBox\" sx={{lineHeight: 'var(--text-caption-lineHeight)'}}>\n              {description}\n            </Box>\n          </div>\n        </Box>\n        <Box sx={{color: 'fg.muted', display: 'flex', alignItems: 'center', gap: 1}}>\n          {value && <span>{value}</span>}\n          <ChevronRightIcon />\n        </Box>\n      </Box>\n    </StyledLinkItem>\n  )\n}\n\nexport default LinkItem\n\ntry{ StyledLink.displayName ||= 'StyledLink' } catch {}\ntry{ StyledLinkItem.displayName ||= 'StyledLinkItem' } catch {}\ntry{ LinkItem.displayName ||= 'LinkItem' } catch {}","import ControlGroupContainer from './components/ControlGroupContainer'\nimport Title from './components/Title'\nimport Description from './components/Description'\nimport Item from './components/Item'\nimport LinkItem from './components/LinkItem'\nimport {Button, InlineEdit, ToggleSwitch, Custom} from './components/Controls'\n\nexport const ControlGroup = Object.assign(ControlGroupContainer, {\n  Item,\n  LinkItem,\n  Title,\n  Description,\n  Custom,\n  ToggleSwitch,\n  Button,\n  InlineEdit,\n})\n\ntry{ ControlGroup.displayName ||= 'ControlGroup' } catch {}","import {ControlGroup} from '@github-ui/control-group'\nimport {ActionList, ActionMenu} from '@primer/react'\nimport {useState} from 'react'\n\ninterface ControlGroupDropDownProps {\n  title: string\n  description?: string\n  testId?: string\n  options: ControlGroupDropDownOption[]\n  onSelect: (option: ControlGroupDropDownOption) => void\n}\n\nexport type ControlGroupDropDownOption = {\n  id: string\n  name: string\n  selected: boolean\n}\n\nconst ControlGroupDropDown: React.FC<ControlGroupDropDownProps> = ({\n  title,\n  description,\n  testId = 'control-group-drop-down',\n  options: initialOptions,\n  onSelect,\n}) => {\n  const [options, setOptions] = useState<ControlGroupDropDownOption[]>(initialOptions)\n\n  const buttonTestId = `${testId}-button`\n\n  const handleSelect = (option: ControlGroupDropDownOption) => {\n    setOptions((prevOptions: ControlGroupDropDownOption[]) =>\n      // Set the selected option as selected:\n      prevOptions.map(prevOption => ({\n        ...prevOption,\n        selected: option.id === prevOption.id,\n      })),\n    )\n\n    // Pass selected option to parent node:\n    onSelect(option)\n  }\n\n  return (\n    <ControlGroup.Item>\n      <ControlGroup.Title>{title}</ControlGroup.Title>\n      {description && <ControlGroup.Description>{description}</ControlGroup.Description>}\n      <ControlGroup.Custom>\n        <ActionMenu>\n          <ActionMenu.Button data-testid={buttonTestId}>\n            {options.find(option => option.selected)?.name}\n          </ActionMenu.Button>\n\n          <ActionMenu.Overlay>\n            <ActionList selectionVariant=\"single\">\n              {options.map((option: ControlGroupDropDownOption) => (\n                <ActionList.Item\n                  key={option.id}\n                  selected={option.selected}\n                  onSelect={() => handleSelect(option)}\n                  data-testid={`${testId}-item-${option.id}`}\n                >\n                  {option.name}\n                </ActionList.Item>\n              ))}\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </ControlGroup.Custom>\n    </ControlGroup.Item>\n  )\n}\n\nexport default ControlGroupDropDown\n\ntry{ ControlGroupDropDown.displayName ||= 'ControlGroupDropDown' } catch {}","import {createContext, useContext} from 'react'\nimport type {DialogContextValue} from '../security-products-enablement-types'\n\nexport const DialogContext = createContext<DialogContextValue | undefined>(undefined)\n\nexport function useDialogContext() {\n  const context = useContext(DialogContext)\n  if (!context) {\n    throw new Error('useDialogContext must be used within a DialogProvider')\n  }\n  return context\n}\n\ntry{ DialogContext.displayName ||= 'DialogContext' } catch {}","import type {ControlGroupDropDownOption} from '../components/ControlGroupDropDown'\nimport {useDialogContext} from '../contexts/DialogContext'\n\ntype UseNewRepoPolicyDropdownArgs = {\n  hasPublicRepos: boolean\n}\n\ninterface UseNewRepoPolicyDropdownReturns {\n  options: ControlGroupDropDownOption[]\n  onSelect: (option: ControlGroupDropDownOption) => void\n}\n\nexport const useNewRepoPolicyDropdown = ({\n  hasPublicRepos,\n}: UseNewRepoPolicyDropdownArgs): UseNewRepoPolicyDropdownReturns => {\n  const {configurationPolicy, setConfigurationPolicy} = useDialogContext()\n\n  const options: ControlGroupDropDownOption[] = hasPublicRepos\n    ? [\n        {\n          id: 'none',\n          name: 'None',\n          selected: !configurationPolicy.defaultForNewPublicRepos && !configurationPolicy.defaultForNewPrivateRepos,\n        },\n        {\n          id: 'public',\n          name: 'Public',\n          selected: configurationPolicy.defaultForNewPublicRepos && !configurationPolicy.defaultForNewPrivateRepos,\n        },\n        {\n          id: 'private_and_internal',\n          name: 'Private and internal',\n          selected: !configurationPolicy.defaultForNewPublicRepos && configurationPolicy.defaultForNewPrivateRepos,\n        },\n        {\n          id: 'all',\n          name: 'All repositories',\n          selected: configurationPolicy.defaultForNewPublicRepos && configurationPolicy.defaultForNewPrivateRepos,\n        },\n      ]\n    : [\n        {\n          id: 'not_default',\n          name: 'Not default',\n          selected: !configurationPolicy.defaultForNewPrivateRepos,\n        },\n        {id: 'default', name: 'Default', selected: configurationPolicy.defaultForNewPrivateRepos},\n      ]\n\n  const onSelect = (option: ControlGroupDropDownOption) => {\n    let newDefaultForNewPublicRepos = configurationPolicy.defaultForNewPublicRepos\n    let newDefaultForNewPrivateRepos = configurationPolicy.defaultForNewPrivateRepos\n\n    switch (option.id) {\n      case 'none':\n      case 'not_default':\n        newDefaultForNewPublicRepos = false\n        newDefaultForNewPrivateRepos = false\n        break\n      case 'default':\n      case 'private_and_internal':\n        newDefaultForNewPublicRepos = false\n        newDefaultForNewPrivateRepos = true\n        break\n      case 'public':\n        newDefaultForNewPublicRepos = true\n        newDefaultForNewPrivateRepos = false\n        break\n      case 'all':\n        newDefaultForNewPublicRepos = true\n        newDefaultForNewPrivateRepos = true\n        break\n      default:\n        break\n    }\n\n    setConfigurationPolicy({\n      defaultForNewPublicRepos: newDefaultForNewPublicRepos,\n      defaultForNewPrivateRepos: newDefaultForNewPrivateRepos,\n      enforcement: configurationPolicy.enforcement,\n    })\n  }\n\n  return {\n    options,\n    onSelect,\n  }\n}\n","import type {PropertyDefinition} from '@github-ui/repos-filter/providers'\nimport type React from 'react'\n\nexport interface Repository {\n  id: number\n  name: string\n  visibility: 'public' | 'private' | 'internal'\n  pushed_at: string\n  licenses_required?: number\n  security_configuration?: {\n    name: string\n    status: SecurityConfigurationStatus\n    failure_reason?: string\n    repository_security_configuration_id: number\n    is_github_recommended_configuration: boolean\n  }\n  security_features_enabled: boolean\n}\n\nexport enum SecurityConfigurationStatus {\n  Attaching = 'attaching',\n  Attached = 'attached',\n  Removed = 'removed',\n  Failed = 'failed',\n  Updating = 'updating',\n  Enforced = 'enforced',\n  RemovedByEnterprise = 'removed_by_enterprise',\n}\n\n// Update this type to reflect the data you place in payload in Rails\nexport interface SecurityConfiguration {\n  id: number\n  name: string\n  target_type: string\n  description: string\n  enable_ghas: boolean\n  dependency_graph: SettingValue\n  dependency_graph_autosubmit_action: SettingValue\n  dependency_graph_autosubmit_action_options: SettingOptions\n  dependabot_alerts: SettingValue\n  dependabot_security_updates: SettingValue\n  code_scanning: SettingValue\n  secret_scanning: SettingValue\n  secret_scanning_validity_checks: SettingValue\n  secret_scanning_push_protection: SettingValue\n  secret_scanning_non_provider_patterns?: SettingValue\n  private_vulnerability_reporting: SettingValue\n  repositories_count: number\n  default_for_new_public_repos: boolean\n  default_for_new_private_repos: boolean\n  enforcement: string\n}\n\nexport enum SettingValue {\n  Enabled = 'enabled',\n  Disabled = 'disabled',\n  NotSet = 'not_set',\n}\n\n// For now, we treat settings hashes permissively, in future it may make sense to have\n// teams own a strict subtype of SettingOptions.\nexport type SettingOptions = Record<string, unknown>\n\nexport type SecuritySettings = {\n  dependencyGraph: SettingValue\n  dependencyGraphAutosubmitAction: SettingValue\n  dependabotAlerts: SettingValue\n  dependabotAlertsVEA: SettingValue\n  dependabotSecurityUpdates: SettingValue\n  codeScanning: SettingValue\n  secretScanning: SettingValue\n  secretScanningPushProtection: SettingValue\n  secretScanningValidityChecks: SettingValue\n  secretScanningNonProviderPatterns: SettingValue\n  privateVulnerabilityReporting: SettingValue\n}\n\nexport type SecuritySettingOptions = {\n  dependencyGraphAutosubmitActionOptions: SettingOptions\n}\n\nexport type SecurityConfigurationSettings = SecuritySettings & SecuritySettingOptions & {enableGHAS: boolean}\n\nexport type SecuritySettingOnChange = (\n  name: keyof SecuritySettings,\n  value: SettingValue,\n  options?: SettingOptions,\n) => void\n\nexport type SettingFeatureFlags = {\n  [key in keyof SecuritySettings]?: boolean\n}\n\nexport interface OrganizationLicensePayload {\n  allowanceExceeded: boolean\n  remainingSeats: number\n  consumedSeats: number\n  exceededSeats: number\n  failedToFetchLicenses: boolean\n  hasUnlimitedSeats: boolean\n  business?: string\n}\n\nexport interface OrganizationSecurityConfiguration {\n  id: number\n  name: string\n  description: string\n  enable_ghas: boolean\n  repositories_count: number\n  default_for_new_public_repos: boolean\n  default_for_new_private_repos: boolean\n  enforcement: string\n}\n\nexport interface OrganizationSettingsSecurityProductsPayload {\n  // Update this type to reflect the data you place in payload in Rails\n  repositories: Repository[]\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration\n  customSecurityConfigurations: OrganizationSecurityConfiguration[]\n  showInfoBanner: boolean\n  changesInProgress: ChangesInProgress\n  channel?: string\n  failureCounts: FailureCounts\n  licenses: OrganizationLicensePayload\n}\n\nexport interface SecurityConfigurationPayload {\n  securityConfiguration?: SecurityConfiguration\n  changesInProgress: ChangesInProgress\n  channel?: string\n  newRepoDefaults?: NewRepositoryDefaults\n}\n\n// Captures pending configuration changes to state when a user clicks Apply but we want to render confirmation dialog:\n//\n// Example param usages:\n// - Big green \"Apply to\" button:\n//   - \"All repositories\" -> overrideExistingConfig: true, applyToAll: true\n//   - \"All repositories without configurations\" -> overrideExistingConfig: false, applyToAll: true\n// - Repo table \"Apply configuration\" button:\n//   - overrideExistingConfig: true\n//   - applyToAll is true if selectedReposCount === totalRepositoryCount (select-all is used), else false\nexport interface PendingConfigurationChanges {\n  config: OrganizationSecurityConfiguration\n  overrideExistingConfig?: boolean\n  applyToAll?: boolean\n  repositoryFilterQuery?: string\n}\n\nexport interface ConfigurationConfirmationSummary {\n  total_repo_count: number\n  public_repo_count: number\n  private_and_internal_repo_count: number\n  private_and_internal_repos_count_exceeding_licenses: number\n  licenses_needed: number\n  errors: string[]\n  requestStatus: RequestStatus\n}\n\nexport enum RequestStatus {\n  InProgress = 'in_progress',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport interface ConfigurationPolicy {\n  defaultForNewPublicRepos: boolean\n  defaultForNewPrivateRepos: boolean\n  enforcement?: string\n}\n\nexport interface DialogContextValue {\n  configurationPolicy: ConfigurationPolicy\n  setConfigurationPolicy: React.Dispatch<React.SetStateAction<ConfigurationPolicy>>\n}\n\nexport interface RepositoryStatuses {\n  [id: number]: {\n    name?: string\n    configuration_id?: number\n    status?: SecurityConfigurationStatus\n    failure_reason?: string\n  }\n}\n\nexport enum SecurityProductAvailability {\n  Available = 'available',\n  Unavailable = 'unavailable',\n}\n\ntype Availability = {\n  availability: SecurityProductAvailability\n}\nexport interface AppContextValue {\n  pageCount: number\n  customPropertySuggestions: PropertyDefinition[]\n  securityConfiguration?: SecurityConfiguration\n  organization: string\n  capabilities: {\n    ghasPurchased: boolean\n    ghasFreeForPublicRepos: boolean\n    actionsAreBilled: boolean\n    hasPublicRepos: boolean\n    hasTeams: boolean\n    previewNext: boolean\n  }\n  securityProducts: {\n    dependency_graph: Availability & {\n      configurablePerRepo: boolean\n    }\n    dependency_graph_autosubmit_action: Availability\n    dependabot_alerts: Availability\n    dependabot_vea: Availability\n    dependabot_updates: Availability\n    code_scanning: Availability\n    secret_scanning: Availability\n    private_vulnerability_reporting: Availability\n  }\n  docsUrls: {\n    createConfig: string\n    ghasBilling: string\n    ghasTrial: string\n    installSecurityProducts: string\n  }\n}\n\nexport interface RepositoryContextValue {\n  repositories: Repository[]\n  setRepositories: React.Dispatch<React.SetStateAction<Repository[]>>\n  repositoryIds: number[]\n  setRepositoryIds: React.Dispatch<React.SetStateAction<number[]>>\n  totalRepositoryCount: number\n  setTotalRepositoryCount: React.Dispatch<React.SetStateAction<number>>\n  licenses: OrganizationLicensePayload\n  setLicenses: React.Dispatch<React.SetStateAction<OrganizationLicensePayload>>\n}\n\nexport interface SelectedRepositoryContextValue {\n  selectedReposMap: Record<number, Repository>\n  setSelectedRepos: React.Dispatch<React.SetStateAction<Record<number, Repository>>>\n  selectedReposCount: number\n  setSelectedReposCount: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport type InProgressType = 'applying_configuration' | 'enablement_changes'\nexport interface ChangesInProgress {\n  inProgress: boolean\n  type?: InProgressType\n  repositoryStatuses?: RepositoryStatuses\n}\n\nexport type AliveMessageType = 'configuration_updates' | 'repository_statuses'\nexport interface AliveEventData {\n  type: AliveMessageType\n  inProgress?: ChangesInProgress\n  configurations?: OrganizationSecurityConfiguration[]\n  repositories: Repository[]\n}\n\nexport interface NewRepositoryDefaults {\n  newPublicRepoDefaultConfig: NewRepositoryDefaultConfiguration | null\n  newPrivateRepoDefaultConfig: NewRepositoryDefaultConfiguration | null\n}\n\nexport interface NewRepositoryDefaultConfiguration {\n  id: number\n  name: string\n}\n\nexport interface ValidationErrors {\n  [key: string]: string[]\n}\n\nexport interface FailureCounts {\n  [key: string]: number\n}\n","import type React from 'react'\nimport {createContext, useContext} from 'react'\nimport type {\n  SecurityConfigurationSettings,\n  SecurityProductAvailability,\n  SecuritySettingOnChange,\n  SettingFeatureFlags,\n} from '../security-products-enablement-types'\n\ninterface ContextValue {\n  handleSettingChange: SecuritySettingOnChange\n  handleGhasSettingChange: SecuritySettingOnChange\n  renderInlineValidation: (name: string) => React.ReactNode\n  isAvailable: (availability: SecurityProductAvailability) => React.ReactNode\n  featureFlags?: SettingFeatureFlags\n}\n\nexport type SecuritySettingsContextValue = SecurityConfigurationSettings & ContextValue\nexport const SecuritySettingsContext = createContext<SecuritySettingsContextValue | undefined>(undefined)\n\nexport function useSecuritySettingsContext() {\n  const context = useContext(SecuritySettingsContext)\n  if (!context) {\n    throw new Error('useSecuritySettingsContext must be used within a SecuritySettingsContext.Provider')\n  }\n  return context\n}\n\ntry{ SecuritySettingsContext.displayName ||= 'SecuritySettingsContext' } catch {}","import type React from 'react'\nimport {CheckIcon, DashIcon} from '@primer/octicons-react'\nimport {Octicon, ActionList, ActionMenu, useTheme} from '@primer/react'\n\nimport type {SecuritySettings, SecuritySettingOnChange} from '../../security-products-enablement-types'\nimport {SettingValue} from '../../security-products-enablement-types'\nimport {useAppContext} from '../../contexts/AppContext'\n\ntype Description = {description: string}\ninterface Overrides {\n  enabled?: Description\n  disabled?: Description\n  notSet?: Description\n}\nexport interface SettingProps {\n  name: keyof SecuritySettings\n  value: SettingValue\n  onChange: SecuritySettingOnChange\n  disabled?: boolean\n  children?: React.ReactNode\n  overrides?: Overrides\n}\n\nconst settingStatusLabel = (value: SettingValue) => {\n  switch (value) {\n    case SettingValue.Enabled:\n      return 'Enabled'\n    case SettingValue.Disabled:\n      return 'Disabled'\n    case SettingValue.NotSet:\n      return 'Not set'\n  }\n}\n\nconst Setting: React.FC<SettingProps> = ({name, value, onChange, disabled = false, overrides, children}) => {\n  const {theme} = useTheme()\n  const {securityConfiguration} = useAppContext()\n  const showOnly = securityConfiguration?.target_type === 'global'\n\n  const settingStatus = children || (\n    <ActionMenu>\n      <ActionMenu.Button data-testid={name}>{settingStatusLabel(value)}</ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\">\n          <ActionList.Item\n            selected={value === SettingValue.Enabled}\n            onSelect={() => onChange(name, SettingValue.Enabled)}\n          >\n            Enabled\n            <ActionList.Description variant=\"block\">\n              Override existing repository settings and enable this feature.\n            </ActionList.Description>\n          </ActionList.Item>\n\n          <ActionList.Item\n            selected={value === SettingValue.Disabled}\n            onSelect={() => onChange(name, SettingValue.Disabled)}\n          >\n            Disabled\n            <ActionList.Description variant=\"block\">\n              {overrides?.disabled?.description || `Override existing repository settings and disable this feature.`}\n            </ActionList.Description>\n          </ActionList.Item>\n\n          <ActionList.Item\n            selected={value === SettingValue.NotSet}\n            onSelect={() => onChange(name, SettingValue.NotSet)}\n          >\n            Not set\n            <ActionList.Description variant=\"block\">\n              Do not override existing repository settings for this feature.\n            </ActionList.Description>\n          </ActionList.Item>\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n\n  const setting = () => {\n    if (disabled) {\n      return <span data-testid={name}>{settingStatusLabel(value)}</span>\n    } else if (showOnly) {\n      const icon = value === SettingValue.Enabled ? CheckIcon : DashIcon\n      const color = value === SettingValue.Enabled ? theme?.colors.open.fg : 'fg.subtitle'\n      return (\n        <div data-testid=\"setting-status\">\n          <Octicon icon={icon} size={16} sx={{color}} /> {settingStatusLabel(value)}\n        </div>\n      )\n    } else {\n      return settingStatus\n    }\n  }\n\n  return setting()\n}\n\nexport default Setting\n\ntry{ Setting.displayName ||= 'Setting' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport {Label} from '@primer/react'\n\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\nimport Setting from '../SecurityConfiguration/Setting'\n\nconst Dependabot: React.FC = () => {\n  const {\n    securityProducts: {\n      dependabot_alerts: {availability: alertsAvailability},\n      dependabot_updates: {availability: updatesAvailability},\n      dependabot_vea: {availability: veaAvailability},\n    },\n    capabilities: {ghasPurchased},\n  } = useAppContext()\n  const {\n    dependabotAlerts: alertsValue,\n    dependabotSecurityUpdates: updatesValue,\n    dependabotAlertsVEA: veaValue,\n    handleSettingChange: onSettingChange,\n    renderInlineValidation,\n    isAvailable,\n  } = useSecuritySettingsContext()\n\n  return (\n    isAvailable(alertsAvailability) && (\n      <>\n        <ControlGroup.Item nestedLevel={1}>\n          <ControlGroup.Title>Dependabot alerts</ControlGroup.Title>\n          <ControlGroup.Description>\n            Receive alerts for vulnerabilities that affect your dependencies.\n            {renderInlineValidation('dependabot_alerts')}\n          </ControlGroup.Description>\n          <ControlGroup.Custom>\n            <Setting name=\"dependabotAlerts\" value={alertsValue} onChange={onSettingChange} />\n          </ControlGroup.Custom>\n        </ControlGroup.Item>\n        {isAvailable(veaAvailability) && ghasPurchased && (\n          <ControlGroup.Item nestedLevel={2}>\n            <ControlGroup.Title>\n              <div>\n                <span>Vulnerable function calls</span> <Label>GitHub Advanced Security</Label>\n              </div>\n            </ControlGroup.Title>\n            <ControlGroup.Description>\n              See where your code calls vulnerable functions. Enabled when GitHub Advanced Security and Dependabot\n              alerts are enabled.\n              {renderInlineValidation('dependabot_alerts_vea')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"dependabotAlertsVEA\" disabled value={veaValue} onChange={onSettingChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n        )}\n        {isAvailable(updatesAvailability) && (\n          <ControlGroup.Item nestedLevel={2}>\n            <ControlGroup.Title>Security updates</ControlGroup.Title>\n            <ControlGroup.Description>\n              Allow Dependabot to open pull requests automatically to resolve alerts. For more specific pull request\n              configurations, disable this setting to use Dependabot rules.\n              {renderInlineValidation('dependabot_security_updates')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"dependabotSecurityUpdates\" value={updatesValue} onChange={onSettingChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n        )}\n      </>\n    )\n  )\n}\n\nexport default Dependabot\n\ntry{ Dependabot.displayName ||= 'Dependabot' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport {ActionList, ActionMenu, Box, Text} from '@primer/react'\n\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\nimport {SettingValue, type SettingOptions} from '../../security-products-enablement-types'\nimport Setting from '../SecurityConfiguration/Setting'\nimport Dependabot from './Dependabot'\n\nexport const DependencyGraphAutosubmitActionDefaultOptions = {labeled_runners: false}\n\nfunction settingStatusLabel(value: SettingValue, options?: SettingOptions) {\n  switch (value) {\n    case SettingValue.Enabled:\n      if (options!.labeled_runners) {\n        return 'Enabled for labeled runners'\n      } else {\n        return 'Enabled'\n      }\n    case SettingValue.Disabled:\n      return 'Disabled'\n    case SettingValue.NotSet:\n      return 'Not set'\n  }\n}\n\nconst DependencyGraph: React.FC = () => {\n  const {\n    securityProducts: {\n      dependency_graph: {availability: dependencyGraphAvailability, configurablePerRepo},\n      dependency_graph_autosubmit_action: {availability: autsubmitActionAvailability},\n    },\n  } = useAppContext()\n  const {\n    dependencyGraph: dependencyGraphValue,\n    dependencyGraphAutosubmitAction: autosubmitActionValue,\n    dependencyGraphAutosubmitActionOptions: autosubmitActionOptions,\n    renderInlineValidation,\n    handleSettingChange: onChange,\n    isAvailable,\n  } = useSecuritySettingsContext()\n  const disableDescriptionText =\n    'Override existing repository settings and disable this feature. Dependency graph cannot be disabled in public repositories.'\n\n  const autosubmitAction = () => {\n    const name = 'dependencyGraphAutosubmitAction'\n\n    return (\n      <ActionMenu>\n        <ActionMenu.Button data-testid={name}>\n          {settingStatusLabel(autosubmitActionValue, autosubmitActionOptions)}\n        </ActionMenu.Button>\n        <ActionMenu.Overlay width=\"medium\">\n          <ActionList selectionVariant=\"single\">\n            <ActionList.Item\n              selected={\n                autosubmitActionValue === SettingValue.Enabled && !(autosubmitActionOptions.labeled_runners as boolean)\n              }\n              onSelect={() => onChange(name, SettingValue.Enabled, DependencyGraphAutosubmitActionDefaultOptions)}\n            >\n              Enabled\n              <ActionList.Description variant=\"block\">\n                Override existing repository settings and enable this feature.\n              </ActionList.Description>\n            </ActionList.Item>\n\n            <ActionList.Item\n              selected={\n                autosubmitActionValue === SettingValue.Enabled && (autosubmitActionOptions.labeled_runners as boolean)\n              }\n              onSelect={() => onChange(name, SettingValue.Enabled, {labeled_runners: true})}\n            >\n              Enabled for labeled runners\n              <ActionList.Description variant=\"block\">\n                {\"Override and enable this feature on runners labeled 'dependency-submission'.\"}\n              </ActionList.Description>\n            </ActionList.Item>\n\n            <ActionList.Item\n              selected={autosubmitActionValue === SettingValue.Disabled}\n              onSelect={() => onChange(name, SettingValue.Disabled, DependencyGraphAutosubmitActionDefaultOptions)}\n            >\n              Disabled\n              <ActionList.Description variant=\"block\">\n                Override existing repository settings and disable this feature.\n              </ActionList.Description>\n            </ActionList.Item>\n\n            <ActionList.Item\n              selected={autosubmitActionValue === SettingValue.NotSet}\n              onSelect={() => onChange(name, SettingValue.NotSet, DependencyGraphAutosubmitActionDefaultOptions)}\n            >\n              Not set\n              <ActionList.Description variant=\"block\">\n                Do not override existing repository settings for this feature.\n              </ActionList.Description>\n            </ActionList.Item>\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    )\n  }\n\n  return (\n    isAvailable(dependencyGraphAvailability) && (\n      <Box sx={{marginY: 4}}>\n        <div style={{marginBottom: 12}}>\n          <Text as=\"strong\" sx={{fontSize: 2}}>\n            Dependency graph and Dependabot\n          </Text>\n        </div>\n        <ControlGroup>\n          <ControlGroup.Item>\n            <ControlGroup.Title>Dependency graph</ControlGroup.Title>\n            <ControlGroup.Description>\n              Display license information and vulnerability severity for your dependencies.\n              {configurablePerRepo\n                ? ' Always enabled for public repositories.'\n                : ' This setting is installed and managed at the instance level.'}\n              {renderInlineValidation('dependency_graph')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting\n                name=\"dependencyGraph\"\n                value={dependencyGraphValue}\n                disabled={!configurablePerRepo}\n                onChange={onChange}\n                overrides={{disabled: {description: disableDescriptionText}}}\n              />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n          {isAvailable(autsubmitActionAvailability) && (\n            <ControlGroup.Item nestedLevel={1}>\n              <ControlGroup.Title>Automatic dependency submission</ControlGroup.Title>\n              <ControlGroup.Description>\n                Automatically detect and report build-time dependencies for select ecosystems. Automatic dependency\n                submission uses GitHub Actions and costs Actions minutes.\n                {renderInlineValidation('dependency_graph_autosubmit_action')}\n              </ControlGroup.Description>\n              <ControlGroup.Custom>\n                <Setting name=\"dependencyGraphAutosubmitAction\" value={autosubmitActionValue} onChange={onChange}>\n                  {autosubmitAction()}\n                </Setting>\n              </ControlGroup.Custom>\n            </ControlGroup.Item>\n          )}\n          <Dependabot />\n        </ControlGroup>\n      </Box>\n    )\n  )\n}\n\nexport default DependencyGraph\n\ntry{ DependencyGraph.displayName ||= 'DependencyGraph' } catch {}","import type {FilterSuggestion} from '@github-ui/filter'\nimport config from '../../../../config/code_security_configuration_failures.json'\nimport {DependencyGraphAutosubmitActionDefaultOptions} from '../components/SecurityProducts/DependencyGraph'\nimport {SettingValue} from '../security-products-enablement-types'\n\ninterface FailureReasonProps {\n  frontend_label: string\n  frontend_dialog_title?: string\n  filter_token: string\n  filter_display: string\n  audit_log_allowed: boolean\n  audit_log_message?: string\n  frontend_banner_reason: string\n}\nexport const ENABLEMENT_FAILURES_MAP = new Map<string, FailureReasonProps>(Object.entries(config.failures))\n\nexport const getFailureReasonValues = () => {\n  const map = new Map<string, FilterSuggestion>()\n  for (const [_, {filter_token, filter_display}] of ENABLEMENT_FAILURES_MAP) {\n    if (!map.get(filter_token)) {\n      map.set(filter_token, {\n        value: filter_token,\n        displayName: filter_display,\n        priority: 1,\n      })\n    }\n  }\n\n  return Array.from(map.values()).sort((a, b) => a.displayName!.toString().localeCompare(b.displayName!.toString()))\n}\n\nexport const DEFAULT_SECURITY_CONFIGURATION_STATE = {\n  enableGHAS: true,\n  dependencyGraph: SettingValue.Enabled,\n  dependencyGraphAutosubmitAction: SettingValue.NotSet,\n  dependencyGraphAutosubmitActionOptions: DependencyGraphAutosubmitActionDefaultOptions,\n  dependabotAlerts: SettingValue.Enabled,\n  dependabotAlertsVEA: SettingValue.Enabled,\n  dependabotSecurityUpdates: SettingValue.NotSet,\n  codeScanning: SettingValue.Enabled,\n  secretScanning: SettingValue.Enabled,\n  secretScanningPushProtection: SettingValue.Enabled,\n  secretScanningValidityChecks: SettingValue.Enabled,\n  secretScanningNonProviderPatterns: SettingValue.Enabled,\n  privateVulnerabilityReporting: SettingValue.Enabled,\n}\n","import {Dialog} from '@primer/react/experimental'\nimport {Text, Box, Link} from '@primer/react'\nimport {ENABLEMENT_FAILURES_MAP} from '../utils/helpers'\nimport {useAppContext} from '../contexts/AppContext'\n\ninterface FailureReasonDialogProps {\n  reason: string\n  repositoryName: string\n  configurationName: string\n  setShowFailureReasonDialog: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface FailureDialogBodyMap {\n  [dialogTitle: string]: {\n    body: JSX.Element\n    remediations: JSX.Element[]\n  }\n}\n\nconst dialogTitleText = (failureReason: string | undefined) => {\n  if (!failureReason) return 'Something went wrong'\n\n  const reason: {frontend_dialog_title?: string} | undefined = ENABLEMENT_FAILURES_MAP.get(failureReason)\n\n  return reason && reason['frontend_dialog_title'] ? reason['frontend_dialog_title'] : 'Something went wrong'\n}\n\nconst FailureReasonDialog: React.FC<FailureReasonDialogProps> = ({\n  reason,\n  repositoryName,\n  configurationName,\n  setShowFailureReasonDialog,\n}) => {\n  const {docsUrls} = useAppContext()\n  const title = dialogTitleText(reason)\n  const repositoryNameText = <strong>{repositoryName}</strong>\n\n  const FAILURE_DIALOG_BODY_MAP: FailureDialogBodyMap = {\n    'Not enough licenses': {\n      body: (\n        <>\n          {configurationName} is enabling GitHub Advanced Security features but you don’t have enough licenses. As a\n          private repository, {repositoryNameText} requires 1 additional GitHub Advanced Security license.\n        </>\n      ),\n      remediations: [\n        <>Purchase more licenses and re-apply this configuration.</>,\n        <>Apply a configuration that excludes GitHub Advanced Security.</>,\n      ],\n    },\n    'Code scanning: Actions disabled': {\n      body: (\n        <>\n          {configurationName} is enabling code scanning default setup, which requires actions, but actions is disabled\n          at the repository/organization/enterprise level.\n        </>\n      ),\n      remediations: [\n        <>Enable Actions and re-apply this configuration.</>,\n        <>Apply a configuration that delegates code scanning default setup.</>,\n      ],\n    },\n    'Code scanning: Advanced setup conflict': {\n      body: (\n        <>\n          {configurationName} is enabling code scanning default setup but {repositoryNameText} has an existing advanced\n          setup.\n        </>\n      ),\n      remediations: [\n        <>Disable advanced setup on {repositoryNameText} and re-apply this configuration.</>,\n        <>Apply a configuration that delegates code scanning default setup.</>,\n      ],\n    },\n    'Code scanning: Runners unavailable': {\n      body: (\n        <>\n          Code scanning default setup can only be enabled if runners with the label <code>code-scanning</code> (or{' '}\n          <code>macOS</code> for Swift) are assigned to this repository.\n        </>\n      ),\n      remediations: [\n        <>\n          Create a runner with the label <code>code-scanning</code>.\n        </>,\n        <>Ensure that this repository has access to the runner.</>,\n      ],\n    },\n    'Something went wrong': {\n      body: <>Something unexpected went wrong.</>,\n      remediations: [\n        <>Re-apply this configuration</>,\n        <>\n          <Link inline href=\"https://support.github.com/\">\n            Contact GitHub Support\n          </Link>{' '}\n          if you continue having issues.\n        </>,\n      ],\n    },\n    'GHAS not allowed by enterprise': {\n      body: (\n        <>\n          This configuration is enabling GitHub Advanced Security features, but using GitHub Advanced Security is\n          restricted by your enterprise policy.\n        </>\n      ),\n      remediations: [\n        <>Contact your enterprise administrators to allow GitHub Advanced Security enablement on this organization.</>,\n        <>Apply a configuration that excludes GitHub Advanced Security.</>,\n      ],\n    },\n    'GHAS not purchased': {\n      body: (\n        <>\n          This configuration is enabling GitHub Advanced Security features, but GitHub Advanced Security has not been\n          purchased by your organization.\n        </>\n      ),\n      remediations: [\n        <>\n          <Link inline href={docsUrls.ghasTrial}>\n            Trial GitHub Advanced Security\n          </Link>\n          .\n        </>,\n        <>Apply a configuration that excludes GitHub Advanced Security.</>,\n      ],\n    },\n    'Automatic dependency submission: Actions disabled': {\n      body: (\n        <>\n          Automatic dependency submission requires actions, but actions is disabled at the\n          repository/organization/enterprise level.\n        </>\n      ),\n      remediations: [\n        <>Enable Actions and re-apply this configuration.</>,\n        <>Apply a configuration that delegates automatic dependency setup.</>,\n      ],\n    },\n    'Automatic dependency submission: Labeled runners unavailable': {\n      body: (\n        <>\n          Automatic dependency submission requires that the repository has access to runners with the label\n          &apos;dependency-submission&apos;\n        </>\n      ),\n      remediations: [\n        <>Create a runner group with the dependency-submission label.</>,\n        <>Ensure that this repository has been added to the runner group.</>,\n        <>Apply a configuration that delegates automatic dependency setup.</>,\n      ],\n    },\n  }\n\n  const body = FAILURE_DIALOG_BODY_MAP[title]?.body\n  const remediations = FAILURE_DIALOG_BODY_MAP[title]?.remediations || []\n\n  return (\n    <>\n      <Dialog title={title} onClose={() => setShowFailureReasonDialog(false)}>\n        <div data-testid=\"failure-dialog-body\">{body}</div>\n        <Box sx={{mt: 3, p: 3, borderRadius: 2, backgroundColor: 'neutral.muted'}}>\n          <Text sx={{fontWeight: 'bold', color: 'fg.muted'}}>Remediation options</Text>\n          <ul data-testid=\"failure-dialog-remediations\" style={{marginLeft: 20, marginTop: 4}}>\n            {remediations.map((remediation, i) => (\n              <li key={`remediation${i.toString()}`} style={{marginTop: 4}}>\n                {remediation}\n              </li>\n            ))}\n          </ul>\n        </Box>\n      </Dialog>\n    </>\n  )\n}\n\nexport default FailureReasonDialog\n\ntry{ FailureReasonDialog.displayName ||= 'FailureReasonDialog' } catch {}","import type React from 'react'\nimport {AlertIcon, ClockIcon, ShieldIcon, type Icon} from '@primer/octicons-react'\nimport {Button, Octicon, Text} from '@primer/react'\nimport {SecurityConfigurationStatus, type Repository} from '../security-products-enablement-types'\nimport {useRepositoryContext} from '../contexts/RepositoryContext'\nimport {ENABLEMENT_FAILURES_MAP} from '../utils/helpers'\nimport {useState} from 'react'\nimport FailureReasonDialog from './FailureReasonDialog'\n\ninterface RepositoryConfigurationStatusProps {\n  repository: Repository\n}\n\nconst leadingIconWithLabelMap: {\n  [status in Exclude<SecurityConfigurationStatus, 'attached'>]: {\n    icon: Icon\n    label: string\n  }\n} = {\n  attaching: {icon: ClockIcon, label: 'Applying'},\n  removed: {icon: AlertIcon, label: 'Removed'},\n  removed_by_enterprise: {icon: AlertIcon, label: 'Enterprise removed'},\n  failed: {icon: AlertIcon, label: 'Failed'},\n  updating: {icon: ClockIcon, label: 'Updating'},\n  enforced: {icon: ShieldIcon, label: 'Enforced'},\n}\n\nconst leadingIconWithLabel = (status: SecurityConfigurationStatus) => {\n  if (status === SecurityConfigurationStatus.Attached) return null\n\n  const {icon, label} = leadingIconWithLabelMap[status]\n\n  return (\n    <>\n      <Octicon icon={icon} className=\"pr-1\" /> {label}\n    </>\n  )\n}\n\nconst failureText = (failureReason: string) => {\n  const reason: {frontend_label?: string} | undefined = ENABLEMENT_FAILURES_MAP.get(failureReason)\n\n  return reason && reason['frontend_label'] ? `(${reason['frontend_label']})` : '(Unknown)'\n}\n\nconst RepositoryConfigurationStatus: React.FC<RepositoryConfigurationStatusProps> = ({repository}) => {\n  const {repositories} = useRepositoryContext()\n  const repositoryConfig = repositories.find(repo => repo.id === repository.id)?.security_configuration\n  const name = repositoryConfig?.name\n  const status = repositoryConfig?.status\n  const failureReason = repositoryConfig?.failure_reason\n  const [showFailureReasonDialog, setShowFailureReasonDialog] = useState(false)\n  const failureLabel = failureReason ? failureText(failureReason) : '(Unknown)'\n\n  if (name && status) {\n    if (status === SecurityConfigurationStatus.Failed) {\n      return (\n        <>\n          {showFailureReasonDialog && failureReason && (\n            <FailureReasonDialog\n              reason={failureReason}\n              repositoryName={repository.name}\n              configurationName={repository.security_configuration?.name || 'This configuration'}\n              setShowFailureReasonDialog={setShowFailureReasonDialog}\n            />\n          )}\n          <Button variant=\"invisible\" onClick={() => setShowFailureReasonDialog(true)}>\n            <Text sx={{color: 'danger.fg'}}>\n              {leadingIconWithLabel(status)} {failureLabel} {name}\n            </Text>\n          </Button>\n        </>\n      )\n    }\n\n    return (\n      <>\n        {leadingIconWithLabel(status)} {name}\n      </>\n    )\n  } else if (repository.security_features_enabled) {\n    return <>No configuration</>\n  } else {\n    return <>No security features enabled</>\n  }\n}\n\nexport default RepositoryConfigurationStatus\n\ntry{ RepositoryConfigurationStatus.displayName ||= 'RepositoryConfigurationStatus' } catch {}","import {createContext, useContext} from 'react'\nimport type {SelectedRepositoryContextValue} from '../security-products-enablement-types'\n\nexport const SelectedRepositoryContext = createContext<SelectedRepositoryContextValue | undefined>(undefined)\n\nexport function useSelectedRepositoryContext() {\n  const context = useContext(SelectedRepositoryContext)\n  if (!context) {\n    throw new Error('useSelectedRepositoryContext must be used within a SelectedRepositoryContext.Provider')\n  }\n  return context\n}\n\ntry{ SelectedRepositoryContext.displayName ||= 'SelectedRepositoryContext' } catch {}","import type {DialogButtonProps} from '@primer/react/experimental'\nimport {\n  RequestStatus,\n  type ConfigurationConfirmationSummary,\n  type DialogContextValue,\n  type OrganizationSecurityConfiguration,\n  type PendingConfigurationChanges,\n} from '../security-products-enablement-types'\nimport {\n  settingsOrgSecurityProductsRepositoriesApplyPath,\n  settingsOrgSecurityProductsPath,\n  settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath,\n} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\nexport type DialogButtonOptions = {\n  cancelOnClick?: () => void\n  confirmOnClick: () => void\n  confirmContent: string\n  confirmButtonType?: 'primary' | 'normal' | 'default' | 'danger' | undefined\n}\n\nexport const createDialogFooterButtons = ({\n  cancelOnClick,\n  confirmOnClick,\n  confirmContent,\n  confirmButtonType = 'primary',\n}: DialogButtonOptions): DialogButtonProps[] =>\n  cancelOnClick\n    ? [\n        {\n          buttonType: 'normal',\n          content: 'Cancel',\n          onClick: cancelOnClick,\n        },\n        {\n          buttonType: confirmButtonType,\n          content: confirmContent,\n          onClick: confirmOnClick,\n        },\n      ]\n    : [\n        {\n          buttonType: confirmButtonType,\n          content: confirmContent,\n          onClick: confirmOnClick,\n        },\n      ]\n\nexport const dialogSize = {width: '480px'}\n\nexport const applyConfiguration = async (\n  pendingConfigurationChanges: PendingConfigurationChanges,\n  organization: string,\n  navigate: (path: string) => void,\n  source: string,\n  selectedRepoIds?: number[],\n  setNewRepoDefaults?: boolean,\n  dialogContextValue?: DialogContextValue,\n  returnTo?: string,\n) => {\n  if (!pendingConfigurationChanges) return false\n\n  const {config, overrideExistingConfig, applyToAll, repositoryFilterQuery} = pendingConfigurationChanges\n  const request_payload = {\n    repository_ids: selectedRepoIds,\n    repository_query: repositoryFilterQuery,\n    override_existing_config: overrideExistingConfig,\n    default_for_new_public_repos: <boolean | undefined>undefined,\n    default_for_new_private_repos: <boolean | undefined>undefined,\n    source,\n  }\n\n  if (setNewRepoDefaults && dialogContextValue) {\n    const {\n      defaultForNewPublicRepos: default_for_new_public_repos,\n      defaultForNewPrivateRepos: default_for_new_private_repos,\n    } = dialogContextValue.configurationPolicy\n\n    request_payload.default_for_new_public_repos = default_for_new_public_repos\n    request_payload.default_for_new_private_repos = default_for_new_private_repos\n\n    dialogContextValue.setConfigurationPolicy({\n      defaultForNewPublicRepos: false,\n      defaultForNewPrivateRepos: false,\n    })\n  }\n\n  // If applyToAll argument is present, we are applying config to all repos in the organization\n  // thus, we need to clear the repository_ids array\n  if (applyToAll === true) {\n    request_payload['repository_ids'] = []\n  }\n\n  const result = await verifiedFetchJSON(\n    settingsOrgSecurityProductsRepositoriesApplyPath({\n      org: organization,\n      id: config.id,\n    }),\n    {\n      method: 'PUT',\n      body: request_payload,\n    },\n  )\n\n  if (result.ok) {\n    if (returnTo) {\n      navigate(returnTo)\n    } else {\n      navigate(settingsOrgSecurityProductsPath({org: organization}))\n    }\n  }\n\n  return result\n}\n\nexport const confirmationSummary = async (\n  setConfirmationDialogSummary: (value: React.SetStateAction<ConfigurationConfirmationSummary | null>) => void,\n  organization: string,\n  overrideExistingConfig?: boolean,\n  applyToAll?: boolean,\n  selectedRepoIds?: number[],\n  request?: string,\n  enableGhas?: boolean,\n) => {\n  const initialSummary = {\n    total_repo_count: 0,\n    public_repo_count: 0,\n    private_and_internal_repo_count: 0,\n    private_and_internal_repos_count_exceeding_licenses: 0,\n    licenses_needed: 0,\n    errors: [],\n    requestStatus: RequestStatus.InProgress,\n  }\n  let summary = initialSummary\n  setConfirmationDialogSummary(summary)\n\n  const summaryResult = await verifiedFetchJSON(\n    settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath({org: organization}),\n    {\n      method: 'POST',\n      body: {\n        no_configuration_only: overrideExistingConfig === true ? 'false' : 'true',\n        repository_ids: applyToAll === true ? [] : selectedRepoIds,\n        query: request,\n        enable_ghas: enableGhas,\n      },\n    },\n  )\n\n  if (summaryResult.ok) {\n    summary = await summaryResult.json()\n    summary.requestStatus = RequestStatus.Success\n  } else {\n    summary = {...initialSummary, requestStatus: RequestStatus.Error}\n  }\n  setConfirmationDialogSummary(summary)\n}\n\nexport const showDefaultForNewReposDropDown = (\n  customSecurityConfigurations: OrganizationSecurityConfiguration[],\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration,\n): boolean => {\n  let defaultIsSet = false\n  if (githubRecommendedConfiguration) {\n    defaultIsSet =\n      githubRecommendedConfiguration.default_for_new_private_repos ||\n      githubRecommendedConfiguration.default_for_new_public_repos\n  }\n\n  if (defaultIsSet) return false\n\n  for (const customConfig of customSecurityConfigurations) {\n    defaultIsSet = customConfig.default_for_new_private_repos || customConfig.default_for_new_public_repos\n    if (defaultIsSet) return false\n  }\n\n  return true\n}\n","import {useState, useCallback, useEffect, useMemo} from 'react'\nimport capitalize from 'lodash-es/capitalize'\nimport pluralize from 'pluralize'\nimport {ListView} from '@github-ui/list-view'\nimport {ListViewMetadata} from '@github-ui/list-view/ListViewMetadata'\nimport {ListItemDescription} from '@github-ui/list-view/ListItemDescription'\nimport {ListItemMainContent} from '@github-ui/list-view/ListItemMainContent'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItemMetadata} from '@github-ui/list-view/ListItemMetadata'\nimport {ListItemTrailingBadge} from '@github-ui/list-view/ListItemTrailingBadge'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {\n  settingsOrgSecurityProductsRepositoriesDeletePath,\n  repoSettingsSecurityAnalysisPath,\n  repositoryPath,\n} from '@github-ui/paths'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {\n  Box,\n  RelativeTime,\n  Text,\n  ActionList,\n  ActionMenu,\n  Button,\n  Octicon,\n  Flash as PrimerFlash,\n  Spinner,\n} from '@primer/react'\nimport {Blankslate} from '@primer/react/drafts'\nimport {Dialog} from '@primer/react/experimental'\nimport {AlertIcon, RepoIcon} from '@primer/octicons-react'\nimport ConfirmationDialog from './ConfirmationDialog'\nimport RepositoryConfigurationStatus from './RepositoryConfigurationStatus'\nimport {useRepositoryContext} from '../contexts/RepositoryContext'\nimport {useSelectedRepositoryContext} from '../contexts/SelectedRepositoryContext'\nimport type {\n  Repository,\n  OrganizationSecurityConfiguration,\n  ConfigurationConfirmationSummary,\n  PendingConfigurationChanges,\n  ChangesInProgress,\n} from '../security-products-enablement-types'\nimport {applyConfiguration, createDialogFooterButtons, confirmationSummary, dialogSize} from '../utils/dialog-helpers'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useAppContext} from '../contexts/AppContext'\n\ninterface RepositoryTableProps {\n  setChangesInProgress: React.Dispatch<React.SetStateAction<ChangesInProgress>>\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration\n  customSecurityConfigurations: OrganizationSecurityConfiguration[]\n  filterQuery: string\n  searchResultsLimitExceeded: boolean\n  pageCount: number\n  totalRepositoryCount: number\n  isQueryLoading: boolean\n}\n\n// This is a work around to style the link for selecting and clearing all.\n// This needs to be an inline style because there is a React class that overrides the GitHub `.btn-link` class.\n// Once Primer addresses the \"Select all\" we can make this cleaner.\nconst selectAllStyle = {\n  display: 'inline-block',\n  padding: '0',\n  fontSize: 'inherit',\n  color: 'var(--fgColor-accent, var(--color-accent-fg))',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  backgroundColor: 'transparent',\n  border: 'none',\n  boxShadow: 'none',\n}\n\nconst RepositoryTable: React.FC<RepositoryTableProps> = ({\n  setChangesInProgress,\n  githubRecommendedConfiguration,\n  customSecurityConfigurations,\n  filterQuery,\n  searchResultsLimitExceeded,\n  pageCount,\n  totalRepositoryCount,\n  isQueryLoading,\n}) => {\n  const navigate = useNavigate()\n  const {organization, capabilities, docsUrls} = useAppContext()\n  const {repositories, setRepositories, setRepositoryIds} = useRepositoryContext()\n  const orgHasRepos = totalRepositoryCount > 0\n  const {selectedReposMap, setSelectedRepos, selectedReposCount, setSelectedReposCount} = useSelectedRepositoryContext()\n  const selectedRepoIds = Object.keys(selectedReposMap).map(Number)\n  const hasSelectedRepos = selectedRepoIds.length > 0\n  const [showConfirmationDialog, setShowConfirmationDialog] = useState<boolean>(false)\n  const [showUpdateFailureConfirmationDialog, setShowUpdateFailureConfirmationDialog] = useState<boolean>(false)\n  const [confirmationDialogSummary, setConfirmationDialogSummary] = useState<ConfigurationConfirmationSummary | null>(\n    null,\n  )\n  const [pendingConfigurationChanges, setPendingConfigurationChanges] = useState({} as PendingConfigurationChanges)\n  const [showNoConfigConfirmationDialog, setshowNoConfigConfirmationDialog] = useState<boolean>(false)\n\n  useEffect(() => {\n    setRepositoryIds(repositories.map(({id}) => id))\n    setRepositories(repositories)\n  }, [repositories, setRepositories, setRepositoryIds])\n\n  const filterQueryEmpty = filterQuery.trim() === ''\n\n  const spinnerAction = useMemo(\n    () => ({\n      key: 'spinner',\n      render: () => <Spinner size=\"small\" data-testid=\"spinner\" />,\n    }),\n    [],\n  )\n\n  const actionsMenuItems = () => {\n    let actions = []\n\n    if (selectedRepoIds.length === repositories.length && pageCount > 1) {\n      actions.push({\n        key: 'select-all',\n        render: () => (\n          <div className=\"pr-2\">\n            <Button onClick={() => setAllReposAsSelected()} style={selectAllStyle}>\n              Select all\n            </Button>\n          </div>\n        ),\n      })\n    }\n\n    if (orgHasRepos && selectedReposCount === totalRepositoryCount) {\n      actions = [] // If select all button has been clicked, empty the actions menu\n\n      actions.push({\n        key: 'clear-selection',\n        render: () => (\n          <div className=\"pr-2\">\n            <Button onClick={() => clearAllReposAsSelected()} style={selectAllStyle}>\n              Clear selection\n            </Button>\n          </div>\n        ),\n      })\n    }\n\n    // If we uncheck a repo, we need to remove the clear selection button\n    if (selectedRepoIds.length !== repositories.length) actions = []\n\n    if (hasSelectedRepos === true) {\n      actions.push({\n        key: 'apply-configuration',\n        render: () => (\n          <div className=\"pr-2\">\n            <ActionMenu>\n              <ActionMenu.Button>Apply configuration</ActionMenu.Button>\n              <ActionMenu.Overlay width=\"medium\">\n                <ActionList>\n                  {githubRecommendedConfiguration && (\n                    <ActionList.Item\n                      sx={{span: {fontWeight: 'bold'}}}\n                      onSelect={() =>\n                        confirmConfigApplication(\n                          githubRecommendedConfiguration,\n                          true,\n                          selectedReposCount === totalRepositoryCount,\n                          filterQuery,\n                        )\n                      }\n                    >\n                      {githubRecommendedConfiguration.name}\n                    </ActionList.Item>\n                  )}\n                  {customSecurityConfigurations.map(config => (\n                    <ActionList.Item\n                      sx={{span: {fontWeight: 'bold'}}}\n                      key={config.id}\n                      onSelect={() =>\n                        confirmConfigApplication(config, true, selectedReposCount === totalRepositoryCount, filterQuery)\n                      }\n                    >\n                      {config.name}\n                    </ActionList.Item>\n                  ))}\n                  <ActionList.Divider />\n                  <ActionList.Item onSelect={() => setshowNoConfigConfirmationDialog(true)}>\n                    No configuration\n                    <ActionList.Description variant=\"block\">\n                      <Text sx={{color: 'fg.muted'}}>\n                        Detach configurations from selected repositories. This will not change repository settings.\n                      </Text>\n                    </ActionList.Description>\n                  </ActionList.Item>\n                </ActionList>\n              </ActionMenu.Overlay>\n            </ActionMenu>\n          </div>\n        ),\n      })\n    }\n\n    return actions\n  }\n\n  const metadata = (\n    <>\n      <ListViewMetadata\n        title={<Text sx={{fontWeight: 'bold'}}>{pluralize('repository', totalRepositoryCount, true)}</Text>}\n        onToggleSelectAll={(isSelectAllChecked: boolean) => {\n          if (isSelectAllChecked) {\n            setSelectedRepos(repositories.reduce((acc, repo) => Object.assign(acc, {[repo.id]: repo}), {}))\n            setSelectedReposCount(repositories.length)\n          } else {\n            clearAllReposAsSelected()\n          }\n        }}\n        actionsLabel=\"Actions\"\n        actions={isQueryLoading ? [spinnerAction] : actionsMenuItems()}\n      />\n\n      {searchResultsLimitExceeded && (\n        <PrimerFlash variant=\"warning\" {...testIdProps('search-results-limit-exceeded-banner')}>\n          <Octicon icon={AlertIcon} sx={{mr: 2}} />\n          <Text sx={{fontWeight: 'bold'}}>configuration</Text>, <Text sx={{fontWeight: 'bold'}}>config-status</Text> and{' '}\n          <Text sx={{fontWeight: 'bold'}}>team</Text> filters can only return up to 10,000 results. Try narrowing down\n          search to see all results.\n        </PrimerFlash>\n      )}\n    </>\n  )\n\n  const setAllReposAsSelected = () => {\n    // Set the \"X of X selected\" text in the table header:\n    setSelectedReposCount(totalRepositoryCount)\n\n    // Mark all checkboxes on the table as set:\n    setSelectedRepos(repositories.reduce((acc, repo) => Object.assign(acc, {[repo.id]: repo}), {}))\n  }\n\n  const clearAllReposAsSelected = () => {\n    setSelectedReposCount(0)\n    setSelectedRepos({})\n  }\n\n  const confirmConfigApplication = async (\n    config: OrganizationSecurityConfiguration,\n    overrideExistingConfig?: boolean,\n    applyToAll?: boolean,\n    repositoryFilterQuery?: string,\n  ) => {\n    setPendingConfigurationChanges({\n      config,\n      overrideExistingConfig,\n      applyToAll,\n      repositoryFilterQuery,\n    })\n    setShowConfirmationDialog(true)\n\n    await confirmationSummary(\n      setConfirmationDialogSummary,\n      organization,\n      overrideExistingConfig,\n      applyToAll,\n      selectedRepoIds,\n      filterQuery,\n      config.enable_ghas,\n    )\n  }\n\n  const applyPendingConfigurationChanges = async () => {\n    const result = await applyConfiguration(\n      pendingConfigurationChanges,\n      organization,\n      navigate,\n      'repos_table',\n      selectedRepoIds,\n    )\n\n    if (result && result.status === 422) setShowUpdateFailureConfirmationDialog(true)\n  }\n\n  const detachConfiguration = async (applyToAll: boolean, repositoryFilterQuery?: string) => {\n    const result = await verifiedFetchJSON(settingsOrgSecurityProductsRepositoriesDeletePath({org: organization}), {\n      method: 'DELETE',\n      body: {repository_ids: applyToAll ? [] : selectedRepoIds, repository_query: repositoryFilterQuery},\n    })\n    if (result.ok) {\n      clearAllReposAsSelected()\n      setChangesInProgress({inProgress: true, type: 'applying_configuration'})\n    }\n  }\n\n  const onRepoSelectToggle = useCallback(\n    (repo: Repository) => {\n      const {[repo.id]: selectedRepo, ...otherRepos} = selectedReposMap\n      const updatedSelectedRepos = selectedRepo ? {...otherRepos} : {...otherRepos, [repo.id]: repo}\n\n      // If the \"select all\" button was previously clicked, filter out repositories not on the current page\n      if (selectedRepoIds.length === totalRepositoryCount) {\n        const currentPageRepos = repositories.filter(r => r.id !== repo.id)\n        setSelectedRepos(currentPageRepos.reduce((acc, currentRepo) => ({...acc, [currentRepo.id]: currentRepo}), {}))\n        setSelectedReposCount(currentPageRepos.length)\n      } else {\n        setSelectedRepos(updatedSelectedRepos)\n        setSelectedReposCount(Object.keys(updatedSelectedRepos).length)\n      }\n    },\n    [\n      selectedReposMap,\n      selectedRepoIds.length,\n      totalRepositoryCount,\n      repositories,\n      setSelectedRepos,\n      setSelectedReposCount,\n    ],\n  )\n\n  const onCloseDialog = (dialogName: string) => {\n    switch (dialogName) {\n      case 'confirmation':\n        setShowConfirmationDialog(false)\n        setConfirmationDialogSummary(null)\n        break\n      case 'noConfig':\n        setshowNoConfigConfirmationDialog(false)\n        break\n      default:\n        // do nothing\n        break\n    }\n  }\n\n  const updateFailureConfirmationDialog = (\n    <Dialog\n      title=\"Unable to apply configuration\"\n      onClose={() => setShowUpdateFailureConfirmationDialog(false)}\n      sx={dialogSize}\n      footerButtons={createDialogFooterButtons({\n        confirmOnClick: () => setShowUpdateFailureConfirmationDialog(false),\n        confirmContent: 'Okay',\n        confirmButtonType: 'default',\n      })}\n    >\n      {'Another enablement is in progress. Please try again later.'}\n    </Dialog>\n  )\n\n  const confirmationDialog = pendingConfigurationChanges?.config && (\n    <Dialog\n      title={'Apply configuration?'}\n      onClose={() => onCloseDialog('confirmation')}\n      sx={dialogSize}\n      footerButtons={createDialogFooterButtons({\n        cancelOnClick: () => onCloseDialog('confirmation'),\n        confirmOnClick: () => {\n          applyPendingConfigurationChanges()\n          clearAllReposAsSelected()\n          setChangesInProgress({inProgress: true, type: 'applying_configuration'})\n          onCloseDialog('confirmation')\n        },\n        confirmContent: 'Apply',\n      })}\n    >\n      <ConfirmationDialog\n        confirmationDialogSummary={confirmationDialogSummary}\n        pendingConfigurationChanges={pendingConfigurationChanges}\n        hasPublicRepos={capabilities.hasPublicRepos}\n        ghasPurchased={capabilities.ghasPurchased}\n        docsBillingUrl={docsUrls.ghasBilling}\n      />\n    </Dialog>\n  )\n\n  const noConfigDialog = (\n    <Dialog\n      title=\"No configuration?\"\n      onClose={() => onCloseDialog('noConfig')}\n      sx={dialogSize}\n      footerButtons={createDialogFooterButtons({\n        cancelOnClick: () => onCloseDialog('noConfig'),\n        confirmOnClick: () => {\n          detachConfiguration(selectedReposCount === totalRepositoryCount, filterQuery)\n          onCloseDialog('noConfig')\n          clearAllReposAsSelected()\n        },\n        confirmContent: 'No Configuration',\n        confirmButtonType: 'danger',\n      })}\n    >\n      This will detach configurations from the selected repositories. This will not change the repository settings and\n      future changes to the configuration will no longer affect selected repositories.\n    </Dialog>\n  )\n\n  return (\n    <>\n      {showConfirmationDialog && confirmationDialog}\n      {showNoConfigConfirmationDialog && noConfigDialog}\n      {showUpdateFailureConfirmationDialog && updateFailureConfirmationDialog}\n      <Box\n        sx={{border: '1px solid', borderColor: 'border.muted', borderRadius: 2}}\n        data-action-bar-item=\"spinner\"\n        data-testid=\"repos-list\"\n      >\n        <ListView\n          isSelectable={orgHasRepos}\n          title=\"Repositories\"\n          titleHeaderTag=\"h2\"\n          singularUnits=\"repository\"\n          pluralUnits=\"repositories\"\n          metadata={metadata}\n          selectedCount={selectedReposCount}\n          totalCount={totalRepositoryCount}\n        >\n          {repositories.map(repo => (\n            <ListItem\n              key={repo.id}\n              title={\n                <ListItemTitle\n                  headingSx={{alignItems: 'baseline'}}\n                  value={repo.name}\n                  trailingBadges={[\n                    <ListItemTrailingBadge key={repo.name} title={capitalize(repo.visibility)} variant=\"secondary\" />,\n                  ]}\n                  href={repoSettingsSecurityAnalysisPath({repo: {name: repo.name, ownerLogin: organization}})}\n                  linkProps={{\n                    'data-hovercard-url': repositoryPath({owner: organization, repo: repo.name, action: 'hovercard'}),\n                  }}\n                />\n              }\n              metadata={\n                <>\n                  <ListItemMetadata>\n                    <Text sx={{marginRight: 2}}>\n                      <RepositoryConfigurationStatus repository={repo} />\n                    </Text>\n                  </ListItemMetadata>\n                  {repo.licenses_required !== null && capabilities.ghasPurchased && (\n                    <ListItemMetadata>\n                      <span>{pluralize('license', repo.licenses_required, true)} required</span>\n                    </ListItemMetadata>\n                  )}\n                </>\n              }\n              onSelect={() => onRepoSelectToggle(repo)}\n              isSelected={!!selectedReposMap[repo.id]}\n            >\n              <ListItemMainContent>\n                <ListItemDescription>\n                  Updated <RelativeTime datetime={repo.pushed_at} />\n                </ListItemDescription>\n              </ListItemMainContent>\n            </ListItem>\n          ))}\n        </ListView>\n\n        {totalRepositoryCount < 1 && (\n          <Blankslate>\n            <Blankslate.Visual>\n              <RepoIcon size={24} />\n            </Blankslate.Visual>\n            {filterQueryEmpty ? 'This organization has no repositories.' : 'No repositories matched your search.'}\n          </Blankslate>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default RepositoryTable\n\ntry{ RepositoryTable.displayName ||= 'RepositoryTable' } catch {}","import {FilterProviderType, FilterValueType, AvatarType} from '@github-ui/filter'\nimport type {\n  FilterQuery,\n  FilterValueData,\n  ValueRowProps,\n  FilterKey,\n  FilterProvider,\n  AnyBlock,\n  MutableFilterBlock,\n  FilterConfig,\n  ARIAFilterSuggestion,\n  IndexedBlockValueItem,\n} from '@github-ui/filter'\nimport {AsyncFilterProvider} from '@github-ui/filter/providers'\nimport {escapeString, getFilterValue, getUnescapedFilterValue} from '@github-ui/filter/utils'\nimport {encodePart} from '@github-ui/paths'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {Octicon} from '@primer/react'\nimport {score} from 'fzy.js'\n\ntype Team = {\n  name: string\n  combined_slug: string\n  avatar_url: string\n}\n\nexport class TeamFilterProvider extends AsyncFilterProvider<Team> implements FilterProvider {\n  constructor(organization: string, filterKey: FilterKey) {\n    const endpoint = `/organizations/${encodePart(\n      organization,\n    )}/settings/security_products/configurations/filter-suggestions/teams`\n    super(filterKey, {filterTypes: {valueless: false}})\n    this.suggestionEndpoint = endpoint\n    this.validationEndpoint = endpoint\n    this.type = FilterProviderType.Select\n  }\n\n  async getSuggestions(\n    filterQuery: FilterQuery,\n    filterBlock: AnyBlock | MutableFilterBlock,\n    config: FilterConfig,\n    caretIndex?: number | null,\n  ) {\n    return this.processSuggestions(filterQuery, filterBlock, this.processSuggestion.bind(this), caretIndex)\n  }\n\n  private processSuggestion(team: Team, query: string): ARIAFilterSuggestion {\n    const {name, combined_slug: combinedSlug} = team\n    let priority = 3\n\n    if (query) {\n      if (name) priority -= score(query, name)\n      if (combinedSlug) priority -= score(query, combinedSlug)\n    }\n\n    return {\n      type: FilterValueType.Value,\n      displayName: name,\n      value: escapeString(name) ?? '',\n      ariaLabel: `${name}, ${this.displayName}`,\n      priority,\n      avatar: {url: team.avatar_url, type: AvatarType.Team},\n    }\n  }\n\n  override validateValue(\n    filterQuery: FilterQuery,\n    value: IndexedBlockValueItem,\n    team: Team | null,\n  ): false | Partial<IndexedBlockValueItem> | null | undefined {\n    const extractedValue = getUnescapedFilterValue(value.value)\n    if (!team || !extractedValue) return false\n\n    return {\n      value: extractedValue,\n      displayName: team.name,\n    }\n  }\n\n  // how the suggestion is displayed in the filter builder ui\n  getValueRowProps(value: FilterValueData): ValueRowProps {\n    const filterValue = getFilterValue(value.value)\n    const visual = value.avatar ? (\n      <GitHubAvatar src={value.avatar.url} alt={filterValue ?? 'User Avatar'} sx={{minWidth: '20px'}} />\n    ) : (\n      <Octicon icon={this.icon} />\n    )\n\n    return {\n      text: value.displayName ?? filterValue ?? '',\n      leadingVisual: visual,\n    }\n  }\n}\n","import {useState, useEffect} from 'react'\nimport {\n  Filter,\n  FilterProviderType,\n  type FilterKey,\n  type FilterProvider,\n  type FilterQuery,\n  type FilterSuggestion,\n  type SuppliedFilterProviderOptions,\n} from '@github-ui/filter'\nimport {LanguageFilterProvider, StaticFilterProvider} from '@github-ui/filter/providers'\nimport {\n  getAllStaticProviders,\n  getCustomPropertiesProviders,\n  type PropertyDefinition,\n} from '@github-ui/repos-filter/providers'\nimport {PeopleIcon, TasklistIcon} from '@primer/octicons-react'\nimport {TeamFilterProvider} from './Team'\nimport {useAppContext} from '../contexts/AppContext'\nimport type {OrganizationSecurityConfiguration} from '../security-products-enablement-types'\nimport {getFailureReasonValues} from '../utils/helpers'\n\ninterface SearchFilterProps {\n  onSubmit: (request: FilterQuery) => void\n  customConfigurationNames: string[]\n  definitions: PropertyDefinition[]\n  initialFilter: string\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration\n}\n\nclass ValuesFilterProvider extends StaticFilterProvider {\n  constructor(filter: FilterKey, values: FilterSuggestion[], options?: SuppliedFilterProviderOptions) {\n    super(filter, values, options)\n    this.type = values.length === 0 ? FilterProviderType.Text : FilterProviderType.Select\n  }\n}\n\nconst comma: SuppliedFilterProviderOptions = {filterTypes: {multiKey: false, multiValue: true, valueless: false}}\n\nconst CONFIG_NAME = {\n  displayName: 'Configuration',\n  key: 'configuration',\n  description: '',\n  priority: 2,\n  icon: TasklistIcon,\n}\n\nconst CONFIG_STATUS = {\n  displayName: 'Configuration status',\n  key: 'config-status',\n  description: '',\n  priority: 2,\n  icon: TasklistIcon,\n}\n\nconst CONFIG_STATUS_VALUES = [\n  {value: 'attached', displayName: 'Attached', priority: 1},\n  {value: 'removed', displayName: 'Removed', priority: 1},\n  {value: 'failed', displayName: 'Failed', priority: 1},\n  {value: 'enforced', displayName: 'Enforced', priority: 1},\n  {value: 'removed_by_enterprise', displayName: 'Removed by enterprise', priority: 1},\n]\n\nconst FAILURE_REASON = {\n  displayName: 'Failure reason',\n  key: 'failure-reason',\n  description: '',\n  priority: 2,\n  icon: TasklistIcon,\n}\n\nconst CONFIG_TEAM: FilterKey = {\n  displayName: 'Team',\n  key: 'team',\n  description: '',\n  priority: 2,\n  icon: PeopleIcon,\n}\n\nconst SearchFilter: React.FC<SearchFilterProps> = ({\n  onSubmit,\n  customConfigurationNames,\n  definitions,\n  initialFilter,\n  githubRecommendedConfiguration,\n}) => {\n  const {capabilities, organization} = useAppContext()\n  const [query, setQuery] = useState(initialFilter)\n\n  const updateQuery = (q: string) => setQuery(q)\n\n  // Ensure that we update our state when props change:\n  useEffect(() => {\n    setQuery(initialFilter)\n  }, [initialFilter])\n\n  const getConfigurationNameOptions = (): FilterSuggestion[] => {\n    const options: FilterSuggestion[] = []\n\n    for (const element of customConfigurationNames) {\n      options.push({value: element, displayName: element, priority: 1})\n    }\n\n    if (githubRecommendedConfiguration)\n      options.push({value: 'GitHub Recommended', displayName: 'GitHub Recommended', priority: 2})\n\n    options.push({value: 'None', displayName: 'None', priority: 2})\n\n    return options\n  }\n\n  const getProviders = (): FilterProvider[] => {\n    // Filter out the archived provider since we no longer want to show archived repositories\n    // in repositories list\n    const staticProviders = getAllStaticProviders().filter(provider => provider.key !== 'archived')\n    const filter: FilterProvider[] = [\n      ...staticProviders,\n      ...getCustomPropertiesProviders(definitions),\n      new LanguageFilterProvider(),\n      new ValuesFilterProvider(CONFIG_NAME, getConfigurationNameOptions(), comma),\n      new ValuesFilterProvider(CONFIG_STATUS, CONFIG_STATUS_VALUES, comma),\n      new ValuesFilterProvider(FAILURE_REASON, getFailureReasonValues(), comma),\n    ]\n\n    if (capabilities.hasTeams) filter.push(new TeamFilterProvider(organization, CONFIG_TEAM))\n\n    return filter\n  }\n\n  return (\n    <Filter\n      providers={getProviders()}\n      filterValue={query}\n      onChange={updateQuery}\n      onSubmit={onSubmit}\n      id=\"repos-list-filter\"\n      sx={{flex: 1, mb: 3}}\n      label=\"Search repositories\"\n      placeholder=\"Search repositories\"\n    />\n  )\n}\n\nexport default SearchFilter\n\ntry{ SearchFilter.displayName ||= 'SearchFilter' } catch {}","import {Link} from '@primer/react'\nimport {Banner} from '@primer/react/drafts'\nimport type {FailureCounts} from '../security-products-enablement-types'\nimport type {FilterQuery} from '@github-ui/filter'\nimport {FilterQueryParser} from '@github-ui/filter/parser/v2'\nimport pluralize from 'pluralize'\n\ninterface FailureBannerProps {\n  closeFn: (arg0: boolean) => void\n  failureCounts: FailureCounts\n  searchFn: (request: FilterQuery) => void\n}\n\nconst FailureBanner: React.FC<FailureBannerProps> = ({closeFn, failureCounts, searchFn}) => {\n  if (Object.keys(failureCounts).length === 0) {\n    return <></>\n  }\n\n  const onDismiss = async () => {\n    closeFn(true)\n  }\n\n  const totalFailureCount = Object.values(failureCounts).reduce((memo, failCount) => memo + failCount, 0)\n  const pluralRepos = pluralize('repository', totalFailureCount, true)\n  const numberOfReasons = Object.keys(failureCounts).length\n\n  const setSearchQuery = () => {\n    const parser = new FilterQueryParser()\n    const parsedQuery = parser.parse('config-status:failed')\n    searchFn(parsedQuery)\n  }\n  const viewAllLink = (\n    // Include an href=\"#\" so that hovering will render the correct pointer:\n    <Link href=\"#\" onClick={setSearchQuery}>\n      View all failed repositories\n    </Link>\n  )\n\n  let innerText\n  let title\n  let hideTitle = false\n  if (numberOfReasons > 1) {\n    title = `${pluralRepos} failed to apply:`\n    innerText = (\n      <>\n        <ul className=\"ml-4 py-2\">\n          {Object.entries(failureCounts).map(([failText, count], i) => {\n            return (\n              <li key={i}>\n                {pluralize('repository', count, true)} failed because {failText}.\n              </li>\n            )\n          })}\n        </ul>\n        {viewAllLink}\n      </>\n    )\n  } else {\n    const failText = Object.keys(failureCounts)[0]\n    title = `${pluralRepos} failed to apply`\n    hideTitle = true\n    innerText = (\n      <>\n        {pluralRepos} failed to apply because {failText}. {viewAllLink}.\n      </>\n    )\n  }\n\n  return (\n    <Banner\n      data-testid=\"failure-banner\"\n      onDismiss={onDismiss}\n      title={title}\n      hideTitle={hideTitle}\n      description={innerText}\n      variant=\"warning\"\n      className=\"mb-3\"\n    />\n  )\n}\n\nexport default FailureBanner\n\ntry{ FailureBanner.displayName ||= 'FailureBanner' } catch {}","import {settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useRef, useEffect, useState, useMemo} from 'react'\nimport type {Repository} from '../security-products-enablement-types'\nimport {useAppContext} from '../contexts/AppContext'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport Flash from './Flash'\nimport pluralize from 'pluralize'\nimport {Text} from '@primer/react'\nimport {useRepositoryContext} from '../contexts/RepositoryContext'\n\ninterface LicenseSummary {\n  licenses_needed: number\n  licenses_freed: number\n}\n\ninterface LicenseSectionProps {\n  selectedReposMap: Record<number, Repository>\n  selectedReposCount: number\n  totalRepositoryCount: number\n  filterQuery: string\n}\nconst LicenseSection: React.FC<LicenseSectionProps> = ({\n  selectedReposMap,\n  selectedReposCount,\n  totalRepositoryCount,\n  filterQuery,\n}) => {\n  const {organization} = useAppContext()\n  const {licenses, setLicenses} = useRepositoryContext()\n  const [licenseSummary, setLicenseSummary] = useState<LicenseSummary | null>(null)\n  const [fetchLicenseSummaryFailed, setFetchLicenseSummaryFailed] = useState(false)\n  const controllerRef = useRef<AbortController>()\n\n  useEffect(() => {\n    if (controllerRef.current) controllerRef.current.abort()\n\n    controllerRef.current = new AbortController()\n    const signal = controllerRef.current.signal\n\n    async function fetchLicenseSummary() {\n      try {\n        const repository_ids = selectedReposCount === totalRepositoryCount ? [] : Object.keys(selectedReposMap)\n        const result = await verifiedFetchJSON(\n          settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath({org: organization}),\n          {\n            method: 'POST',\n            body: {repository_ids, query: filterQuery, include_license_overview: licenses.failedToFetchLicenses},\n            signal,\n          },\n        )\n        if (result.ok) {\n          const data = await result.json()\n          setLicenseSummary({licenses_needed: data.licenses_needed, licenses_freed: data.licenses_freed})\n\n          if (licenses.failedToFetchLicenses) {\n            setLicenses({\n              business: data.business,\n              consumedSeats: data.consumedSeats,\n              remainingSeats: data.remainingSeats,\n              allowanceExceeded: data.allowanceExceeded,\n              exceededSeats: data.exceededSeats,\n              hasUnlimitedSeats: data.hasUnlimitedSeats,\n              failedToFetchLicenses: data.failedToFetchLicenses,\n            })\n          }\n\n          setFetchLicenseSummaryFailed(false)\n        } else {\n          setLicenseSummary(null)\n          setFetchLicenseSummaryFailed(true)\n        }\n        // eslint-disable-next-line no-empty\n      } catch (e) {} // Aborting a fetch throws an error\n    }\n\n    if (selectedReposCount > 0) fetchLicenseSummary()\n    else if (selectedReposCount === 0) {\n      // Reset these attributes to avoid \"flickers\" where the previous message is shown, then quickly changes.\n      // For example:\n      // - We show error message for the license summary\n      // - User de-selects all repos, the default \"select some repos\" message is shown\n      // - User selects a repo, the error message is shown again, but is quickly replaced by the license summary\n      setLicenseSummary(null)\n      setFetchLicenseSummaryFailed(false)\n    }\n  }, [\n    organization,\n    selectedReposCount,\n    totalRepositoryCount,\n    filterQuery,\n    selectedReposMap,\n    licenses.failedToFetchLicenses,\n    setLicenses,\n  ])\n\n  const licensesExceededBanner = useMemo(() => {\n    return (\n      <Flash\n        message={`Configurations with GitHub Advanced Security cannot be applied because your organization is using ${\n          licenses.exceededSeats\n        } more GitHub Advanced Security ${pluralize(\n          'license',\n          licenses.exceededSeats,\n        )} than it has purchased. To make changes, remove Advanced Security features from some repositories or buy additional licenses.`}\n        variant=\"warning\"\n        sx={{mt: 3, mb: 3}}\n      />\n    )\n  }, [licenses.exceededSeats])\n\n  const ghasText = useMemo(() => {\n    const businessName = licenses.business && (\n      <>\n        {' by '}\n        <Text sx={{fontWeight: 'bold'}}>{licenses.business}</Text>\n      </>\n    )\n    const license = licenses.hasUnlimitedSeats ? licenses.consumedSeats : licenses.remainingSeats\n\n    return (\n      <span>\n        {license} GitHub Advanced Security {pluralize('license', license)}{' '}\n        {licenses.hasUnlimitedSeats ? '' : `available, ${licenses.consumedSeats}`} in use{businessName}.\n      </span>\n    )\n  }, [licenses.business, licenses.consumedSeats, licenses.hasUnlimitedSeats, licenses.remainingSeats])\n\n  const licenseSummaryText = useMemo(() => {\n    if (selectedReposCount <= 0 || (licenseSummary === null && !fetchLicenseSummaryFailed)) {\n      return <span>Select repositories to apply configurations and view license consumption information.</span>\n    } else if (fetchLicenseSummaryFailed) {\n      return (\n        <span>\n          We are unable to calculate how many licenses this application would require in advance. Try selecting fewer\n          repositories at a time if you need a license estimate prior to application.\n        </span>\n      )\n    } else {\n      return (\n        <span>\n          For configurations with GitHub Advanced Security:{' '}\n          {pluralize('license', licenseSummary!.licenses_needed, true)} required if applying and{' '}\n          {pluralize('license', licenseSummary!.licenses_freed, true)} freed up if disabling.\n        </span>\n      )\n    }\n  }, [selectedReposCount, licenseSummary, fetchLicenseSummaryFailed])\n\n  const licenseContent = useMemo(() => {\n    if (licenses.failedToFetchLicenses && fetchLicenseSummaryFailed) {\n      return (\n        <span>\n          We are unable to calculate how many licenses this application would require in advance. Try selecting fewer\n          repositories at a time if you need a license estimate prior to application.\n        </span>\n      )\n    } else if (licenses.failedToFetchLicenses) {\n      return <span>Unable to calculate license information. Please try again later.</span>\n    } else {\n      return (\n        <>\n          <span>{ghasText}</span>\n          <p>{licenseSummaryText}</p>\n        </>\n      )\n    }\n  }, [licenses.failedToFetchLicenses, fetchLicenseSummaryFailed, ghasText, licenseSummaryText])\n\n  return (\n    <div className=\"Subhead-description mb-3\" {...testIdProps('license-summary')}>\n      {!licenses.failedToFetchLicenses && licenses.allowanceExceeded && licensesExceededBanner}\n      {licenseContent}\n    </div>\n  )\n}\n\nexport default LicenseSection\n\ntry{ LicenseSection.displayName ||= 'LicenseSection' } catch {}","import {useMemo, useState, useCallback, useEffect, useRef} from 'react'\nimport {Pagination} from '@primer/react'\nimport type {FilterQuery} from '@github-ui/filter'\nimport {settingsOrgSecurityProductsRepositories} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport RepositoryTable from './RepositoryTable'\nimport SearchFilter from './SearchFilter'\nimport FailureBanner from './FailureBanner'\nimport type {\n  ChangesInProgress,\n  FailureCounts,\n  OrganizationSecurityConfiguration,\n  Repository,\n} from '../security-products-enablement-types'\nimport {SelectedRepositoryContext} from '../contexts/SelectedRepositoryContext'\nimport {useAppContext} from '../contexts/AppContext'\nimport {useRepositoryContext} from '../contexts/RepositoryContext'\nimport LicenseSection from './LicenseSection'\n\ninterface RepositorySectionProps {\n  setChangesInProgress: React.Dispatch<React.SetStateAction<ChangesInProgress>>\n  repositories?: Repository[]\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration\n  customSecurityConfigurations: OrganizationSecurityConfiguration[]\n  failureCounts: FailureCounts\n  hideFailureCounts: boolean\n  setHideFailureCounts: (arg0: boolean) => void\n}\n\nconst RepositorySection: React.FC<RepositorySectionProps> = ({\n  setChangesInProgress,\n  githubRecommendedConfiguration,\n  customSecurityConfigurations,\n  failureCounts,\n  hideFailureCounts,\n  setHideFailureCounts,\n}) => {\n  const {customPropertySuggestions, capabilities, organization, pageCount: initialPageCount} = useAppContext()\n  const {setRepositories, totalRepositoryCount: initialTotalRepositoryCount} = useRepositoryContext()\n  const tableRef = useRef<HTMLTableElement>(null)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [queryParams, setQueryParams] = useState<URLSearchParams>(new URLSearchParams())\n  const [filterQuery, setFilterQuery] = useState<string>('')\n  const [isQueryLoading, setIsQueryLoading] = useState<boolean>(false)\n  const [selectedReposCount, setSelectedReposCount] = useState<number>(0)\n  const [selectedReposMap, setSelectedRepos] = useState<Record<number, Repository>>({})\n  const [pageCount, setPageCount] = useState(initialPageCount)\n  const [totalRepositoryCount, setTotalRepositoryCount] = useState(initialTotalRepositoryCount)\n\n  const selectedRepositoryContextValue = useMemo(\n    () => ({selectedReposMap, setSelectedRepos, selectedReposCount, setSelectedReposCount}),\n    [selectedReposCount, selectedReposMap],\n  )\n\n  useEffect(() => {\n    setTotalRepositoryCount(initialTotalRepositoryCount)\n  }, [initialTotalRepositoryCount])\n\n  const [searchResultsLimitExceeded, setSearchResultsLimitExceeded] = useState<boolean>(false)\n  const failureCountsPresent = Object.keys(failureCounts).length > 0\n  const [showFailureBanner, setShowFailureBanner] = useState(\n    capabilities.previewNext && failureCountsPresent && !hideFailureCounts,\n  )\n\n  useEffect(() => {\n    const countsPresent = Object.keys(failureCounts).length > 0\n    setShowFailureBanner(capabilities.previewNext && countsPresent && !hideFailureCounts)\n  }, [failureCounts, capabilities.previewNext, hideFailureCounts])\n\n  const submitSearchQuery = async (request: FilterQuery) => {\n    setFilterQuery(request.raw)\n    setIsQueryLoading(true)\n    setQueryParams(new URLSearchParams({q: request.raw}))\n  }\n\n  useEffect(() => {\n    const url = `${settingsOrgSecurityProductsRepositories({org: organization})}?${queryParams}`\n    const fetchData = async () => {\n      const result = await verifiedFetchJSON(url, {method: 'GET'})\n\n      if (result.ok) {\n        const resultJson = await result.json()\n        setRepositories(resultJson.repositories)\n        setSelectedRepos({})\n        setSelectedReposCount(0)\n        setSearchResultsLimitExceeded(resultJson.searchResultsLimitExceeded)\n        setTotalRepositoryCount(resultJson.totalRepositoryCount)\n        setPageCount(resultJson.pageCount)\n        setCurrentPage(1)\n      }\n\n      setIsQueryLoading(false)\n    }\n\n    fetchData()\n  }, [queryParams, organization, setTotalRepositoryCount, setPageCount, setRepositories])\n\n  const paginateRepositories = useCallback(\n    async (page: number) => {\n      const queryParamsString = queryParams.toString()\n      const urlParams = `${queryParamsString ? `?${queryParamsString}&` : '?'}page=${page}`\n      const url = settingsOrgSecurityProductsRepositories({org: organization}) + urlParams\n      const result = await verifiedFetchJSON(url, {method: 'GET'})\n\n      if (result.ok) {\n        const resultJson = await result.json()\n        setRepositories(resultJson.repositories)\n        setSelectedRepos({})\n        setSelectedReposCount(0)\n        setSearchResultsLimitExceeded(resultJson.searchResultsLimitExceeded)\n      }\n    },\n    [organization, queryParams, setRepositories],\n  )\n\n  const handlePageChange = useCallback(\n    (e: React.MouseEvent, newPage: number) => {\n      e.preventDefault()\n\n      if (currentPage !== newPage) {\n        setCurrentPage(newPage)\n        paginateRepositories(newPage)\n      }\n      tableRef.current?.scrollIntoView({behavior: 'smooth', block: 'start'})\n    },\n    [currentPage, paginateRepositories],\n  )\n\n  return (\n    <>\n      <div className=\"f3-light mt-4 mb-1\" ref={tableRef}>\n        Apply configurations\n      </div>\n      {capabilities.ghasPurchased && (\n        <LicenseSection\n          selectedReposMap={selectedReposMap}\n          selectedReposCount={selectedReposCount}\n          totalRepositoryCount={totalRepositoryCount}\n          filterQuery={filterQuery}\n        />\n      )}\n      {showFailureBanner && (\n        <FailureBanner closeFn={setHideFailureCounts} failureCounts={failureCounts} searchFn={submitSearchQuery} />\n      )}\n      <SearchFilter\n        customConfigurationNames={customSecurityConfigurations.map(config => config.name)}\n        onSubmit={submitSearchQuery}\n        definitions={customPropertySuggestions}\n        initialFilter={filterQuery}\n        githubRecommendedConfiguration={githubRecommendedConfiguration}\n      />\n      <SelectedRepositoryContext.Provider value={selectedRepositoryContextValue}>\n        <RepositoryTable\n          setChangesInProgress={setChangesInProgress}\n          githubRecommendedConfiguration={githubRecommendedConfiguration}\n          customSecurityConfigurations={customSecurityConfigurations}\n          filterQuery={filterQuery}\n          searchResultsLimitExceeded={searchResultsLimitExceeded}\n          pageCount={pageCount}\n          totalRepositoryCount={totalRepositoryCount}\n          isQueryLoading={isQueryLoading}\n        />\n      </SelectedRepositoryContext.Provider>\n      {pageCount > 1 && (\n        <Pagination\n          data-testid=\"pagination\"\n          pageCount={pageCount}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n          marginPageCount={2}\n          surroundingPageCount={2}\n        />\n      )}\n    </>\n  )\n}\n\nexport default RepositorySection\n\ntry{ RepositorySection.displayName ||= 'RepositorySection' } catch {}","import type React from 'react'\n\ninterface SubheadProps {\n  children: React.ReactNode\n  description?: string\n}\n\nconst Subhead: React.FC<SubheadProps> = ({children, description}) => {\n  return (\n    <>\n      <div className={'Subhead'}>\n        <h2 className=\"Subhead-heading\">{children}</h2>\n      </div>\n      {description && (\n        <div data-testid=\"subhead-description\" className=\"Subhead-description mb-3\">\n          {description}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Subhead\n\ntry{ Subhead.displayName ||= 'Subhead' } catch {}","import type React from 'react'\nimport {Flash, Octicon, Link as PrimerLink, Box, Text, IconButton} from '@primer/react'\nimport {InfoIcon, XIcon} from '@primer/octicons-react'\nimport {Link} from '@github-ui/react-core/link'\n\ninterface BannerProps {\n  bannerText: string\n  linkText?: string\n  linkHref?: string\n  dismissible?: boolean\n  onDismiss?: () => void\n  bannerType?: string\n}\n\nconst Banner: React.FC<BannerProps> = ({\n  bannerText,\n  linkText,\n  linkHref,\n  dismissible = false,\n  onDismiss,\n  bannerType,\n}) => {\n  const handleDismiss = () => {\n    if (onDismiss) onDismiss()\n  }\n\n  return (\n    <Flash data-testid={`banner-${bannerType}`} sx={{mt: 1, mb: 4}}>\n      <Box sx={{display: 'flex'}}>\n        <Octicon icon={InfoIcon} sx={{mt: 1}} />\n        <Text data-testid=\"banner-text\" sx={{px: 2}}>\n          {bannerText}\n          {/* inline Pimer prop is not working properly with as= so we will continue to use our styling here */}\n          {linkText && linkHref && (\n            <PrimerLink as={Link} to={linkHref} sx={{ml: 1}} className=\"Link--inTextBlock\" data-testid=\"banner-link\">\n              {linkText}\n            </PrimerLink>\n          )}\n        </Text>\n        {dismissible && (\n          // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n          <IconButton\n            unsafeDisableTooltip={true}\n            aria-label=\"Hide this notice forever\"\n            size=\"small\"\n            variant=\"invisible\"\n            icon={XIcon}\n            sx={{ml: 'auto', pl: 2}}\n            data-testid=\"banner-dismiss-button\"\n            onClick={handleDismiss}\n          />\n        )}\n      </Box>\n    </Flash>\n  )\n}\n\nexport default Banner\n\ntry{ Banner.displayName ||= 'Banner' } catch {}","import type React from 'react'\nimport {Button, Link as PrimerLink} from '@primer/react'\nimport {useAppContext} from '../contexts/AppContext'\nimport {settingsOrgSecurityConfigurationsNewPath} from '@github-ui/paths'\nimport {Link} from '@github-ui/react-core/link'\nimport {testIdProps} from '@github-ui/test-id-props'\n\ninterface BlankSlate {\n  header: string\n  message: string\n  url: string\n  linkText: string\n  displayButton: boolean\n}\n\nconst BlankSlate: React.FC<BlankSlate> = ({header, message, url, linkText, displayButton}) => {\n  const appContext = useAppContext()\n\n  return (\n    <>\n      <div className=\"border rounded-2 p-5\" {...testIdProps('blankslate')}>\n        <p className=\"f3 text-bold text-center\" data-hpc>\n          {header}\n        </p>\n        <p className=\"f4 fgColor-muted text-center\">\n          {message}\n          {/* inline Pimer prop is not working properly with as= so we will continue to use our styling here */}\n          <PrimerLink as={Link} to={url} className=\"Link--inTextBlock\">\n            {linkText}\n          </PrimerLink>\n          .\n        </p>\n        {displayButton && (\n          <p className=\"m-0 mt-5 text-center\">\n            <Button\n              data-testid=\"new-configuration\"\n              as={Link}\n              to={settingsOrgSecurityConfigurationsNewPath({org: appContext.organization})}\n              variant=\"primary\"\n            >\n              New configuration\n            </Button>\n          </p>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default BlankSlate\n\ntry{ BlankSlate.displayName ||= 'BlankSlate' } catch {}","import type React from 'react'\nimport {ActionMenu, ActionList} from '@primer/react'\nimport type {OrganizationSecurityConfiguration} from '../../security-products-enablement-types'\n\ninterface ApplyToButtonProps {\n  configuration: OrganizationSecurityConfiguration\n  confirmConfigApplication: (\n    config: OrganizationSecurityConfiguration,\n    overrideExistingConfig: boolean,\n    applyToAll: boolean,\n  ) => void\n}\n\nconst ApplyToButton: React.FC<ApplyToButtonProps> = ({configuration, confirmConfigApplication}) => (\n  <ActionMenu>\n    <ActionMenu.Button data-testid={`configuration-${configuration.id}-button`}>Apply to</ActionMenu.Button>\n    <ActionMenu.Overlay width=\"medium\">\n      <ActionList>\n        <ActionList.Item onSelect={() => confirmConfigApplication(configuration, true, true)}>\n          All repositories\n        </ActionList.Item>\n        <ActionList.Item onSelect={() => confirmConfigApplication(configuration, false, true)}>\n          All repositories without configurations\n        </ActionList.Item>\n      </ActionList>\n    </ActionMenu.Overlay>\n  </ActionMenu>\n)\n\nexport default ApplyToButton\n\ntry{ ApplyToButton.displayName ||= 'ApplyToButton' } catch {}","import type React from 'react'\nimport {Label} from '@primer/react'\n\nconst RowLabel: React.FC<{text: string}> = ({text}) => {\n  return (\n    <Label sx={{mx: 2}} variant=\"secondary\">\n      {text}\n    </Label>\n  )\n}\n\nexport default RowLabel\n\ntry{ RowLabel.displayName ||= 'RowLabel' } catch {}","import type React from 'react'\nimport capitalize from 'lodash-es/capitalize'\nimport pluralize from 'pluralize'\nimport {Link as PrimerLink} from '@primer/react'\nimport {Link} from '@github-ui/react-core/link'\nimport {settingsOrgSecurityConfigurationsEditPath, settingsOrgSecurityConfigurationsViewPath} from '@github-ui/paths'\nimport type {OrganizationSecurityConfiguration} from '../../security-products-enablement-types'\nimport {useAppContext} from '../../contexts/AppContext'\nimport ApplyToButton from './ApplyToButton'\nimport RowLabel from '../RowLabel'\n\ninterface SecurityConfigurationRowProps {\n  configuration: OrganizationSecurityConfiguration\n  isLast: boolean\n  isGithubRecommended?: boolean\n  confirmConfigApplication: (\n    config: OrganizationSecurityConfiguration,\n    overrideExistingConfig: boolean,\n    applyToAll: boolean,\n  ) => void\n}\n\nconst SecurityConfigurationRow: React.FC<SecurityConfigurationRowProps> = ({\n  configuration,\n  isLast,\n  isGithubRecommended = false,\n  confirmConfigApplication,\n}) => {\n  const {organization, capabilities} = useAppContext()\n  const {\n    default_for_new_private_repos,\n    default_for_new_public_repos,\n    id,\n    name,\n    enable_ghas,\n    enforcement,\n    description,\n    repositories_count,\n  } = configuration\n\n  // Determine the link path based on whether it's a GitHub recommended configuration or not\n  const linkPath = isGithubRecommended\n    ? settingsOrgSecurityConfigurationsViewPath({org: organization})\n    : settingsOrgSecurityConfigurationsEditPath({org: organization, id})\n\n  const boxClassNames = `border-x border-bottom py-3 px-3${isLast ? ' rounded-bottom-2' : ''}`\n\n  const getDefaultText = () => {\n    if (default_for_new_private_repos && default_for_new_public_repos) {\n      return 'Default for all new repositories.'\n    } else if (default_for_new_private_repos) {\n      return 'Default for new private and internal repositories.'\n    } else {\n      return 'Default for new public repositories.'\n    }\n  }\n\n  return (\n    <div className={boxClassNames} data-testid={`configuration-${id}`}>\n      <div className=\"d-flex flex-items-center\">\n        <div className=\"text-bold mb-1 flex-1\">\n          <PrimerLink as={Link} to={linkPath} sx={{color: 'fg.default'}} data-testid={`configuration-${id}-name`}>\n            {name.length > 0 ? name : 'unnamed security configuration'}\n          </PrimerLink>\n          {enable_ghas && capabilities.ghasPurchased && <RowLabel text=\"GitHub Advanced Security\" />}\n          {enforcement === 'enforced' && <RowLabel text={capitalize(enforcement)} />}\n          <div className=\"f6 color-fg-muted text-normal\" data-testid={`configuration-${id}-description`}>\n            {description}{' '}\n            {(default_for_new_private_repos || default_for_new_public_repos) && (\n              <span className=\"text-bold\">{getDefaultText()}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"f6 m-3 color-fg-muted flex-2\" data-testid={`configuration-${id}-repositories-count`}>\n          {pluralize('repository', repositories_count, true)}\n        </div>\n        <ApplyToButton configuration={configuration} confirmConfigApplication={confirmConfigApplication} />\n      </div>\n    </div>\n  )\n}\n\nexport default SecurityConfigurationRow\n\ntry{ SecurityConfigurationRow.displayName ||= 'SecurityConfigurationRow' } catch {}","import type React from 'react'\nimport {useMemo, useState, useCallback} from 'react'\nimport pluralize from 'pluralize'\nimport {Button} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {Link} from '@github-ui/react-core/link'\nimport {settingsOrgSecurityConfigurationsNewPath, settingsOrgSecurityProductsPath} from '@github-ui/paths'\nimport {useNavigate, useSearchParams} from '@github-ui/use-navigate'\nimport {DialogContext} from '../../contexts/DialogContext'\nimport {useAppContext} from '../../contexts/AppContext'\nimport ConfirmationDialog from '../ConfirmationDialog'\nimport SecurityConfigurationRow from './Row'\nimport {\n  applyConfiguration,\n  confirmationSummary,\n  createDialogFooterButtons,\n  dialogSize,\n  showDefaultForNewReposDropDown,\n} from '../../utils/dialog-helpers'\nimport type {\n  OrganizationSecurityConfiguration,\n  ConfigurationConfirmationSummary,\n  PendingConfigurationChanges,\n  ConfigurationPolicy,\n} from '../../security-products-enablement-types'\n\ninterface SecurityConfigurationTableProps {\n  githubRecommendedConfiguration?: OrganizationSecurityConfiguration\n  customSecurityConfigurations: OrganizationSecurityConfiguration[]\n}\n\nconst SecurityConfigurationTable: React.FC<SecurityConfigurationTableProps> = ({\n  githubRecommendedConfiguration,\n  customSecurityConfigurations,\n}) => {\n  const navigate = useNavigate()\n  const {organization, capabilities, docsUrls} = useAppContext()\n  const [searchParams] = useSearchParams()\n  const [pendingConfigurationChanges, setPendingConfigurationChanges] = useState({} as PendingConfigurationChanges)\n  const [confirmationDialogSummary, setConfirmationDialogSummary] = useState<ConfigurationConfirmationSummary | null>(\n    null,\n  )\n  const [showConfirmationDialog, setShowConfirmationDialog] = useState<boolean>(false)\n  const [showUpdateFailureConfirmationDialog, setShowUpdateFailureConfirmationDialog] = useState<boolean>(false)\n  const [configurationPolicy, setConfigurationPolicy] = useState<ConfigurationPolicy>({\n    defaultForNewPublicRepos: false,\n    defaultForNewPrivateRepos: false,\n  })\n  const configurationsCount = customSecurityConfigurations.length + (githubRecommendedConfiguration ? 1 : 0)\n\n  const dialogContextValue = useMemo(\n    () => ({configurationPolicy, setConfigurationPolicy}),\n    [configurationPolicy, setConfigurationPolicy],\n  )\n\n  const onCloseDialog = useCallback(() => {\n    setShowConfirmationDialog(false)\n    setConfirmationDialogSummary(null)\n    setConfigurationPolicy({defaultForNewPublicRepos: false, defaultForNewPrivateRepos: false})\n  }, [])\n\n  const confirmConfigApplication = useCallback(\n    async (config: OrganizationSecurityConfiguration, overrideExistingConfig?: boolean, applyToAll?: boolean) => {\n      setPendingConfigurationChanges({config, overrideExistingConfig, applyToAll})\n      setShowConfirmationDialog(true)\n\n      await confirmationSummary(\n        setConfirmationDialogSummary,\n        organization,\n        overrideExistingConfig,\n        applyToAll,\n        [],\n        '',\n        config.enable_ghas,\n      )\n    },\n    [organization],\n  )\n\n  const shouldSetNewRepoDefaults = showDefaultForNewReposDropDown(\n    customSecurityConfigurations,\n    githubRecommendedConfiguration,\n  )\n\n  const applyPendingConfigurationChanges = useCallback(async () => {\n    const returnTo = settingsOrgSecurityProductsPath({org: organization, tip: searchParams.get('tip')})\n    const result = await applyConfiguration(\n      pendingConfigurationChanges,\n      organization,\n      navigate,\n      'config_table',\n      [],\n      shouldSetNewRepoDefaults,\n      dialogContextValue,\n      returnTo,\n    )\n\n    if (result && result.status === 422) setShowUpdateFailureConfirmationDialog(true)\n  }, [organization, searchParams, pendingConfigurationChanges, dialogContextValue, navigate, shouldSetNewRepoDefaults])\n\n  const confirmationDialog = pendingConfigurationChanges?.config && (\n    <DialogContext.Provider value={dialogContextValue}>\n      <Dialog\n        title={'Apply configuration?'}\n        onClose={() => onCloseDialog()}\n        sx={dialogSize}\n        footerButtons={createDialogFooterButtons({\n          cancelOnClick: () => onCloseDialog(),\n          confirmOnClick: () => {\n            applyPendingConfigurationChanges()\n            onCloseDialog()\n          },\n          confirmContent: 'Apply',\n        })}\n      >\n        <ConfirmationDialog\n          confirmationDialogSummary={confirmationDialogSummary}\n          pendingConfigurationChanges={pendingConfigurationChanges}\n          showDefaultForNewReposDropDown={shouldSetNewRepoDefaults}\n          hasPublicRepos={capabilities.hasPublicRepos}\n          ghasPurchased={capabilities.ghasPurchased}\n          docsBillingUrl={docsUrls.ghasBilling}\n        />\n      </Dialog>\n    </DialogContext.Provider>\n  )\n\n  const updateFailureConfirmationDialog = (\n    <Dialog\n      title=\"Unable to apply configuration\"\n      onClose={() => setShowUpdateFailureConfirmationDialog(false)}\n      sx={dialogSize}\n      footerButtons={createDialogFooterButtons({\n        confirmOnClick: () => setShowUpdateFailureConfirmationDialog(false),\n        confirmContent: 'Okay',\n        confirmButtonType: 'default',\n      })}\n    >\n      Another enablement event is in progress. Please try again later.\n    </Dialog>\n  )\n\n  return (\n    <>\n      {showConfirmationDialog && confirmationDialog}\n      {showUpdateFailureConfirmationDialog && updateFailureConfirmationDialog}\n      <div data-hpc>\n        <div className=\"color-bg-subtle border-x border-top border-bottom rounded-top-2 py-2 px-3\">\n          <div className=\"d-flex flex-items-baseline\">\n            <div className=\"flex-1 text-bold\">{pluralize('configuration', configurationsCount, true)}</div>\n            <Button\n              data-testid=\"new-configuration\"\n              as={Link}\n              to={settingsOrgSecurityConfigurationsNewPath({org: organization})}\n            >\n              New configuration\n            </Button>\n          </div>\n        </div>\n        {githubRecommendedConfiguration && (\n          <SecurityConfigurationRow\n            configuration={githubRecommendedConfiguration}\n            isLast={false}\n            isGithubRecommended={true} // Mark as GitHub recommended\n            confirmConfigApplication={confirmConfigApplication}\n          />\n        )}\n        {customSecurityConfigurations.map((config, index) => (\n          <SecurityConfigurationRow\n            configuration={config}\n            isLast={index === customSecurityConfigurations.length - 1}\n            key={config.id}\n            confirmConfigApplication={confirmConfigApplication}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default SecurityConfigurationTable\n\ntry{ SecurityConfigurationTable.displayName ||= 'SecurityConfigurationTable' } catch {}","import {useState, useMemo, useCallback} from 'react'\nimport {orgOnboardingAdvancedSecurityPath} from '@github-ui/paths'\nimport {OnboardingTipBanner} from '@github-ui/onboarding-tip-banner'\nimport {ShieldCheckIcon} from '@primer/octicons-react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {useSearchParams} from '@github-ui/use-navigate'\nimport {useAlive} from '@github-ui/use-alive'\nimport {useDebounce} from '@github-ui/use-debounce'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useAppContext} from '../contexts/AppContext'\nimport {RepositoryContext} from '../contexts/RepositoryContext'\nimport {fetchRefresh} from '../utils/api-helpers'\nimport {dismissNoticePath} from '../utils/banner-helper'\nimport RepositorySection from '../components/RepositorySection'\nimport Subhead from '../components/Subhead'\nimport Banner from '../components/Banner'\nimport BlankSlate from '../components/BlankSlate'\nimport SecurityConfigurationTable from '../components/SecurityConfiguration/Table'\nimport {\n  type OrganizationSecurityConfiguration,\n  type OrganizationSettingsSecurityProductsPayload,\n  type FailureCounts,\n  SecurityProductAvailability,\n  type Repository,\n  type OrganizationLicensePayload,\n} from '../security-products-enablement-types'\n\nconst OrganizationSettingsSecurityProducts: React.FC = () => {\n  const {securityProducts, organization, docsUrls} = useAppContext()\n  const [searchParams] = useSearchParams()\n  const {\n    githubRecommendedConfiguration: initialGithubRecommendedConfiguration,\n    customSecurityConfigurations: initialCustomSecurityConfigurations,\n    showInfoBanner: initialShowInfoBanner,\n    changesInProgress: changes,\n    repositories: initialRepositories,\n    channel,\n    failureCounts: initialFailureCounts,\n    licenses: initialLicenses,\n  } = useRoutePayload<OrganizationSettingsSecurityProductsPayload>()\n\n  const [changesInProgress, setChangesInProgress] = useState(changes)\n  const [repositories, setRepositories] = useState<Repository[]>(initialRepositories)\n  const [repositoryIds, setRepositoryIds] = useState(repositories.map(({id}) => id))\n  const [totalRepositoryCount, setTotalRepositoryCount] = useState(initialRepositories.length)\n  const [showInfoBanner, setShowInfoBanner] = useState(initialShowInfoBanner)\n  const [githubRecommendedConfiguration, setGithubRecommendedConfiguration] = useState<\n    OrganizationSecurityConfiguration | undefined\n  >(initialGithubRecommendedConfiguration)\n  const [customSecurityConfigurations, setCustomSecurityConfigurations] = useState<OrganizationSecurityConfiguration[]>(\n    initialCustomSecurityConfigurations,\n  )\n  const [failureCounts, setFailureCounts] = useState<FailureCounts>(initialFailureCounts)\n  const [hideFailureCounts, setHideFailureCounts] = useState<boolean>(false)\n\n  const [licenses, setLicenses] = useState<OrganizationLicensePayload>(initialLicenses)\n\n  const repositoryContextValue = useMemo(\n    () => ({\n      repositories,\n      setRepositories,\n      repositoryIds,\n      setRepositoryIds,\n      totalRepositoryCount,\n      setTotalRepositoryCount,\n      licenses,\n      setLicenses,\n    }),\n    [repositoryIds, repositories, totalRepositoryCount, licenses, setLicenses],\n  )\n\n  const allSecurityProductsUnavailable = Object.values(securityProducts).every(\n    product => product.availability === SecurityProductAvailability.Unavailable,\n  )\n\n  const configurationsAbsent = !githubRecommendedConfiguration && customSecurityConfigurations.length === 0\n\n  // Constants for URLs and Texts\n  const NO_SECURITY_PRODUCTS_HEADER = 'No security features installed'\n  const NO_SECURITY_PRODUCTS_MESSAGE = 'Your GitHub Enterprise instance does not have any security features installed. '\n  const NO_SECURITY_PRODUCTS_LINK_TEXT = 'Learn about installing security features on GitHub Enterprise'\n\n  const NO_CODE_CONFIGURATIONS_HEADER = 'Protect your code with code security configurations'\n  const NO_CODE_CONFIGURATIONS_MESSAGE =\n    'Enable and disable security features for specific repositories, ensure compliance, and manage your GitHub Advanced Security licenses with '\n  const NO_CODE_CONFIGURATIONS_LINK_TEXT = 'code security configurations'\n\n  // Determine the BlankSlate Content\n  const blankSlateProps = allSecurityProductsUnavailable\n    ? {\n        header: NO_SECURITY_PRODUCTS_HEADER,\n        message: NO_SECURITY_PRODUCTS_MESSAGE,\n        url: docsUrls.createConfig,\n        linkText: NO_SECURITY_PRODUCTS_LINK_TEXT,\n        displayButton: false,\n      }\n    : configurationsAbsent\n      ? {\n          header: NO_CODE_CONFIGURATIONS_HEADER,\n          message: NO_CODE_CONFIGURATIONS_MESSAGE,\n          url: docsUrls.createConfig,\n          linkText: NO_CODE_CONFIGURATIONS_LINK_TEXT,\n          displayButton: true,\n        }\n      : null\n\n  const debouncedRefresh = useDebounce(\n    useCallback(async () => {\n      const result = await fetchRefresh(organization, repositoryIds)\n\n      // Update the configurations if the fetch was successful\n      if (result) {\n        const updatedGithubRecommendedConfiguration = result.githubRecommendedConfiguration as\n          | OrganizationSecurityConfiguration\n          | undefined\n        const updatedSecurityConfigurations = result.customSecurityConfigurations\n\n        // Update the repositories_count for GitHub recommended configuration\n        if (updatedGithubRecommendedConfiguration) {\n          setGithubRecommendedConfiguration(prevConfig => {\n            if (prevConfig && updatedGithubRecommendedConfiguration) {\n              return {\n                ...prevConfig,\n                repositories_count: updatedGithubRecommendedConfiguration.repositories_count,\n              }\n            }\n          })\n        }\n\n        // Update the custom security configurations:\n        if (updatedSecurityConfigurations) setCustomSecurityConfigurations(updatedSecurityConfigurations)\n\n        // This needs to specifically check for undefined because we want to update the state if result.inProgress is true or false\n        if (result.inProgress !== undefined) setChangesInProgress({inProgress: result.inProgress, type: result.type})\n\n        if (result.repositories) {\n          setRepositories(prevRepositories => {\n            const updatedRepositories = [...prevRepositories]\n\n            for (const updatedRepo of result.repositories) {\n              const index = updatedRepositories.findIndex(repo => repo.id === updatedRepo.id)\n              if (index !== -1) {\n                updatedRepositories[index] = {...updatedRepositories[index], ...updatedRepo}\n              } else {\n                updatedRepositories.push(updatedRepo)\n              }\n            }\n\n            return updatedRepositories\n          })\n        }\n\n        if (result.failureCounts) setFailureCounts(result.failureCounts)\n\n        if (result.totalRepositoryCount) setTotalRepositoryCount(result.totalRepositoryCount)\n\n        if (result.licenses?.failedToFetchLicenses !== undefined && !result.licenses.failedToFetchLicenses) {\n          setLicenses(result.licenses)\n        }\n      }\n    }, [organization, repositoryIds, setLicenses]),\n    1500,\n    {leading: true, trailing: true},\n  )\n\n  const handleAliveEvent = useCallback(() => {\n    debouncedRefresh()\n  }, [debouncedRefresh])\n\n  useAlive(channel!, handleAliveEvent)\n\n  const inProgressText =\n    changesInProgress.type === 'enablement_changes'\n      ? `Another enablement event is in progress. This may take a while and applying or editing configurations \\\n  will be unavailable until all repositories have been updated.`\n      : 'Applying configurations to repositories. This may take a while and applying or editing configurations\\\n  will be unavailable until all repositories have been updated.'\n\n  const infoBannerText =\n    'This organization does not have GitHub Advanced Security, which is free for public repositories and \\\n    billed per active committer for private and internal repositories. To apply configurations with GitHub \\\n    Advanced Security features to private repositories, '\n  const infoBannerLinkText = 'upgrade to GitHub Advanced Security.'\n\n  const handleDismiss = async () => {\n    const result = await verifiedFetch(dismissNoticePath({notice: 'security_configurations_non_ghas_org_info'}), {\n      method: 'POST',\n    })\n\n    if (result.ok) setShowInfoBanner(false)\n  }\n\n  return (\n    <>\n      <Subhead description=\"Define and apply security configurations to make sure your repositories are protected.\">\n        Code security configurations\n      </Subhead>\n      {blankSlateProps ? (\n        <BlankSlate {...blankSlateProps} />\n      ) : (\n        <>\n          {showInfoBanner && (\n            <Banner\n              bannerText={infoBannerText}\n              linkText={infoBannerLinkText}\n              linkHref={docsUrls.ghasTrial}\n              onDismiss={handleDismiss}\n              dismissible={true}\n              bannerType=\"info\"\n            />\n          )}\n          {changesInProgress.inProgress && <Banner bannerText={inProgressText} bannerType=\"inprogress\" />}\n          {searchParams.get('tip') === 'recommended_settings' && (\n            <OnboardingTipBanner\n              link={orgOnboardingAdvancedSecurityPath({org: organization})}\n              icon={ShieldCheckIcon}\n              linkText=\"Back to onboarding\"\n              heading=\"Enable Advanced Security with GitHub recommended configuration\"\n            >\n              Automatically apply our standard settings to Dependabot, code scanning, and secret scanning by selecting{' '}\n              <strong> Apply to</strong> below.\n            </OnboardingTipBanner>\n          )}\n          <SecurityConfigurationTable\n            githubRecommendedConfiguration={githubRecommendedConfiguration}\n            customSecurityConfigurations={customSecurityConfigurations}\n          />\n          <RepositoryContext.Provider value={repositoryContextValue}>\n            <RepositorySection\n              repositories={repositories}\n              setChangesInProgress={setChangesInProgress}\n              githubRecommendedConfiguration={githubRecommendedConfiguration}\n              customSecurityConfigurations={customSecurityConfigurations}\n              failureCounts={failureCounts}\n              hideFailureCounts={hideFailureCounts}\n              setHideFailureCounts={setHideFailureCounts}\n            />\n          </RepositoryContext.Provider>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default OrganizationSettingsSecurityProducts\n\ntry{ OrganizationSettingsSecurityProducts.displayName ||= 'OrganizationSettingsSecurityProducts' } catch {}","// Reimplementation of Primer's _InputValidation component\n// (used by FormControl.Validation https://primer.style/react/FormControl#with-validation)\n// to enable validation messaging for DropdownMenus, which is\n// not natively supported (https://primer.style/react/FormControl#formcontrol)\n//\n// Lovingly copied from ui/packages/memex/src/client/pages/insights/components/insights-configuration-pane/validation.tsx\n// because I don't want to risk relying on another team's component, but this really should be standardized IMO!\n\nimport type React from 'react'\nimport {AlertFillIcon, CheckCircleFillIcon, type IconProps} from '@primer/octicons-react'\nimport {Box, Text, type SxProp} from '@primer/react'\n\ntype ValidationStatus = 'success' | 'warning' | 'error'\n\ninterface ValidationProps extends SxProp {\n  validationStatus?: ValidationStatus\n  children?: React.ReactNode\n}\n\nconst validationIconMap: Record<ValidationStatus, React.ComponentType<IconProps>> = {\n  success: CheckCircleFillIcon,\n  error: AlertFillIcon,\n  warning: AlertFillIcon,\n}\n\nconst validationColorMap: Record<ValidationStatus, string> = {\n  success: 'success.fg',\n  error: 'danger.fg',\n  warning: 'attention.fg',\n}\n\nconst Validation: React.FC<ValidationProps> = ({children, validationStatus, sx}) => {\n  const IconComponent = validationStatus ? validationIconMap[validationStatus] : undefined\n  const fgColor = validationStatus ? validationColorMap[validationStatus] : undefined\n\n  return (\n    <Text\n      sx={{\n        marginTop: 2,\n        alignItems: 'center',\n        color: fgColor,\n        display: 'flex',\n        a: {\n          color: 'currentColor',\n          textDecoration: 'underline',\n        },\n        ...sx,\n        fontSize: 0,\n      }}\n    >\n      {IconComponent && (\n        <Box as=\"span\" sx={{display: 'flex', mr: 1}}>\n          <IconComponent size={12} fill=\"currentColor\" />\n        </Box>\n      )}\n      <span>{children}</span>\n    </Text>\n  )\n}\n\nexport default Validation\n\ntry{ Validation.displayName ||= 'Validation' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport {Box, Text, Label} from '@primer/react'\nimport {ShieldCheckIcon} from '@primer/octicons-react'\nimport {useSearchParams} from 'react-router-dom'\nimport {OnboardingTipBanner} from '@github-ui/onboarding-tip-banner'\nimport {orgOnboardingAdvancedSecurityPath} from '@github-ui/paths'\n\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\nimport Setting from '../SecurityConfiguration/Setting'\n\nconst CodeScanning: React.FC = () => {\n  const {\n    organization,\n    securityProducts: {\n      code_scanning: {availability},\n    },\n    capabilities: {ghasFreeForPublicRepos, actionsAreBilled},\n  } = useAppContext()\n  const {\n    codeScanning: defaultSetupValue,\n    renderInlineValidation,\n    handleGhasSettingChange: onChange,\n    isAvailable,\n  } = useSecuritySettingsContext()\n  const [searchParams] = useSearchParams()\n  const showTip = searchParams.get('tip') === 'code_scanning'\n\n  return (\n    isAvailable(availability) && (\n      <Box sx={{marginY: 4}}>\n        {showTip && (\n          <OnboardingTipBanner\n            link={orgOnboardingAdvancedSecurityPath({org: organization})}\n            icon={ShieldCheckIcon}\n            linkText=\"Back to onboarding\"\n            heading=\"Code scanning\"\n          >\n            Effortlessly prevent and fix vulnerabilities while you write code without leaving your workflow with\n            GitHub’s native code scanning capabilities.\n          </OnboardingTipBanner>\n        )}\n        <div style={{marginBottom: 12}}>\n          <Text as=\"strong\" sx={{fontSize: 2}}>\n            Code scanning\n          </Text>{' '}\n          <Label>GitHub Advanced Security</Label>\n        </div>\n        <ControlGroup>\n          <ControlGroup.Item>\n            <ControlGroup.Title>Default setup</ControlGroup.Title>\n            <ControlGroup.Description>\n              Receive alerts for automatically detected vulnerabilities and coding errors using CodeQL default\n              configuration.{' '}\n              {ghasFreeForPublicRepos &&\n                actionsAreBilled &&\n                'Code scanning uses GitHub Actions and costs Actions minutes.'}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"codeScanning\" value={defaultSetupValue} onChange={onChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n          {renderInlineValidation('code_scanning')}\n        </ControlGroup>\n      </Box>\n    )\n  )\n}\n\nexport default CodeScanning\n\ntry{ CodeScanning.displayName ||= 'CodeScanning' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport {Box, Text, Label} from '@primer/react'\nimport {ShieldCheckIcon} from '@primer/octicons-react'\nimport {useSearchParams} from 'react-router-dom'\nimport {OnboardingTipBanner} from '@github-ui/onboarding-tip-banner'\nimport {orgOnboardingAdvancedSecurityPath} from '@github-ui/paths'\n\nimport Setting from '../SecurityConfiguration/Setting'\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\n\nconst SecretScanning: React.FC = () => {\n  const {\n    organization,\n    securityProducts: {\n      secret_scanning: {availability},\n    },\n  } = useAppContext()\n  const {\n    secretScanning: secretScanningValue,\n    secretScanningValidityChecks: validityChecksValue,\n    secretScanningPushProtection: pushProtectionValue,\n    secretScanningNonProviderPatterns: nonProviderPatternsValue,\n    handleGhasSettingChange: onChange,\n    renderInlineValidation,\n    isAvailable,\n    featureFlags,\n  } = useSecuritySettingsContext()\n  const validityChecksEnabled = featureFlags?.secretScanningValidityChecks\n  const [searchParams] = useSearchParams()\n  const showTip = searchParams.get('tip') === 'secret_scanning'\n\n  return (\n    isAvailable(availability) && (\n      <Box sx={{marginY: 4}}>\n        {showTip && (\n          <OnboardingTipBanner\n            link={orgOnboardingAdvancedSecurityPath({org: organization})}\n            icon={ShieldCheckIcon}\n            linkText=\"Back to onboarding\"\n            heading=\"Secret scanning\"\n          >\n            Detect and prevent secret leaks across more than 200 token types and your unique custom patterns too, with\n            GitHub’s native secret scanning capabilities.\n          </OnboardingTipBanner>\n        )}\n        <div style={{marginBottom: 12}}>\n          <Text as=\"strong\" sx={{fontSize: 2}}>\n            Secret scanning\n          </Text>{' '}\n          <Label>GitHub Advanced Security</Label>\n        </div>\n        <ControlGroup>\n          <ControlGroup.Item>\n            <ControlGroup.Title>Alerts</ControlGroup.Title>\n            <ControlGroup.Description>\n              Receive alerts for detected secrets, keys, or other tokens.\n              {renderInlineValidation('secret_scanning')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"secretScanning\" value={secretScanningValue} onChange={onChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n          {validityChecksEnabled && (\n            <ControlGroup.Item nestedLevel={1}>\n              <ControlGroup.Title>Validity checks</ControlGroup.Title>\n              <ControlGroup.Description>\n                Verify if a secret is valid by sending it to the relevant partner. GitHub will check detected\n                credentials via an external API call to the provider.\n                {renderInlineValidation('secret_scanning_validity_checks')}\n              </ControlGroup.Description>\n              <ControlGroup.Custom>\n                <Setting name=\"secretScanningValidityChecks\" value={validityChecksValue} onChange={onChange} />\n              </ControlGroup.Custom>\n            </ControlGroup.Item>\n          )}\n          <ControlGroup.Item nestedLevel={1}>\n            <ControlGroup.Title>Non-provider patterns</ControlGroup.Title>\n            <ControlGroup.Description>\n              Scan for non-provider patterns.\n              {renderInlineValidation('secret_scanning_non_provider_patterns')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"secretScanningNonProviderPatterns\" value={nonProviderPatternsValue} onChange={onChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n          <ControlGroup.Item nestedLevel={1}>\n            <ControlGroup.Title>Push protection</ControlGroup.Title>\n            <ControlGroup.Description>\n              Block commits that contain supported secrets.\n              {renderInlineValidation('secret_scanning_push_protection')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"secretScanningPushProtection\" value={pushProtectionValue} onChange={onChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n        </ControlGroup>\n      </Box>\n    )\n  )\n}\n\nexport default SecretScanning\n\ntry{ SecretScanning.displayName ||= 'SecretScanning' } catch {}","import type React from 'react'\nimport {ActionList, ActionMenu, Box, Link as PrimerLink, Octicon, useTheme} from '@primer/react'\nimport {CheckIcon, DashIcon} from '@primer/octicons-react'\nimport {ControlGroup} from '@github-ui/control-group'\n\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\n\ninterface AdvancedSecurityProps {\n  handleOnSelectGHAS: (value: string) => void\n}\n\nconst AdvancedSecurity: React.FC<AdvancedSecurityProps> = ({handleOnSelectGHAS}) => {\n  const {\n    capabilities: {ghasPurchased, actionsAreBilled, ghasFreeForPublicRepos},\n    securityConfiguration,\n    docsUrls,\n  } = useAppContext()\n  const {theme} = useTheme()\n  const {enableGHAS: enabled, renderInlineValidation} = useSecuritySettingsContext()\n  const showOnly = securityConfiguration?.target_type === 'global'\n  const text = enabled ? 'Include' : 'Exclude'\n  // In GHES, GHAS is not free for public repos and Actions are not a billable product\n  const ghesGhasNotFree = !ghasFreeForPublicRepos && !actionsAreBilled\n  const enablementStatusShowOnly = () => {\n    const color = enabled ? theme?.colors.open.fg : 'fg.subtle'\n    const icon = enabled ? CheckIcon : DashIcon\n\n    return (\n      <div>\n        <Octicon icon={icon} size={16} sx={{color}} /> {text}\n      </div>\n    )\n  }\n\n  const enablementStatus = (\n    <ActionMenu>\n      <ActionMenu.Button data-testid=\"enable-ghas-dropdown\" id=\"enable-ghas-button\" style={{width: '99px'}}>\n        {text}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\">\n          <ActionList.Item selected={enabled} onSelect={() => handleOnSelectGHAS('include')}>\n            Include\n            <ActionList.Description variant=\"block\">\n              Enable GitHub Advanced Security for this configuration.{' '}\n              {ghesGhasNotFree\n                ? 'Applying it will consume licenses.'\n                : 'Applying it to private repositories will consume licenses.'}\n            </ActionList.Description>\n          </ActionList.Item>\n          <ActionList.Item selected={!enabled} onSelect={() => handleOnSelectGHAS('exclude')}>\n            Exclude\n            <ActionList.Description variant=\"block\">\n              Disable all GitHub Advanced Security features in this configuration.{' '}\n              {ghesGhasNotFree\n                ? 'Applying it will not consume licenses.'\n                : 'Applying it to private repositories will not consume licenses.'}\n            </ActionList.Description>\n          </ActionList.Item>\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n\n  return (\n    ghasPurchased && (\n      <Box sx={{marginY: 4}}>\n        <ControlGroup>\n          <ControlGroup.Item>\n            <ControlGroup.Title>GitHub Advanced Security features</ControlGroup.Title>\n            <ControlGroup.Description>\n              {ghesGhasNotFree\n                ? 'Advanced Security features are billed per active committer.'\n                : 'Advanced Security features are free for public repositories and billed per active committer in private and internal repositories.'}\n              <br />\n              <PrimerLink inline href={docsUrls.ghasBilling}>\n                Learn more about Advanced Security billing\n              </PrimerLink>\n              {renderInlineValidation('enable_ghas')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>{showOnly ? enablementStatusShowOnly() : enablementStatus}</ControlGroup.Custom>\n          </ControlGroup.Item>\n        </ControlGroup>\n      </Box>\n    )\n  )\n}\n\nexport default AdvancedSecurity\n\ntry{ AdvancedSecurity.displayName ||= 'AdvancedSecurity' } catch {}","import type React from 'react'\nimport {ControlGroup} from '@github-ui/control-group'\nimport {Box} from '@primer/react'\n\nimport Setting from '../SecurityConfiguration/Setting'\nimport {useAppContext} from '../../contexts/AppContext'\nimport {useSecuritySettingsContext} from '../../contexts/SecuritySettingsContext'\n\nconst PrivateVulnerabilityReporting: React.FC = () => {\n  const {\n    securityProducts: {\n      private_vulnerability_reporting: {availability},\n    },\n  } = useAppContext()\n  const {\n    privateVulnerabilityReporting: settingValue,\n    renderInlineValidation,\n    handleSettingChange: onChange,\n    isAvailable,\n  } = useSecuritySettingsContext()\n\n  return (\n    isAvailable(availability) && (\n      <Box sx={{marginY: 4}}>\n        <ControlGroup>\n          <ControlGroup.Item>\n            <ControlGroup.Title>Private vulnerability reporting</ControlGroup.Title>\n            <ControlGroup.Description>\n              Allow your community to privately report potential security vulnerabilities in public repositories.\n              {renderInlineValidation('private_vulnerability_reporting')}\n            </ControlGroup.Description>\n            <ControlGroup.Custom>\n              <Setting name=\"privateVulnerabilityReporting\" value={settingValue} onChange={onChange} />\n            </ControlGroup.Custom>\n          </ControlGroup.Item>\n        </ControlGroup>\n      </Box>\n    )\n  )\n}\n\nexport default PrivateVulnerabilityReporting\n\ntry{ PrivateVulnerabilityReporting.displayName ||= 'PrivateVulnerabilityReporting' } catch {}","import type React from 'react'\nimport pluralize from 'pluralize'\nimport {useCallback, useState} from 'react'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {InfoIcon} from '@primer/octicons-react'\nimport {Box, Button} from '@primer/react'\nimport {Dialog, type DialogButtonProps} from '@primer/react/experimental'\nimport {createDialogFooterButtons, dialogSize} from '../../utils/dialog-helpers'\nimport {useAppContext} from '../../contexts/AppContext'\nimport type {FlashProps} from '../Flash'\nimport {\n  SecurityProductAvailability,\n  SettingValue,\n  type ConfigurationPolicy,\n  type NewRepositoryDefaults,\n  type SecurityConfigurationPayload,\n  type ValidationErrors,\n  type SecurityConfigurationSettings,\n} from '../../security-products-enablement-types'\nimport {\n  settingsOrgSecurityConfigurationsCreatePath,\n  settingsOrgSecurityConfigurationsUpdatePath,\n  settingsOrgSecurityConfigurationsViewPath,\n  settingsOrgSecurityProductsPath,\n  settingsOrgSecurityProductsRepositoriesCount,\n} from '@github-ui/paths'\n\ninterface SecurityConfigurationFooterSectionProps {\n  isNew: boolean\n  isShow: boolean\n  securityConfigurationSettings: SecurityConfigurationSettings\n  securityConfiguration: SecurityConfigurationPayload['securityConfiguration']\n  configurationName: React.RefObject<HTMLInputElement>\n  configurationDescription: React.RefObject<HTMLInputElement>\n  configurationPolicy: ConfigurationPolicy\n  newRepoDefaults?: NewRepositoryDefaults\n  tip: string\n  updateErrors: (errors: ValidationErrors) => void\n  clearState: () => void\n  setFlashMessage: (flash: FlashProps) => void\n}\n\ntype DialogType = 'delete' | 'updateFailed' | 'update' | 'create'\n\ninterface DialogProps {\n  'data-testid': string\n  title: string\n  footerButtons: DialogButtonProps[]\n}\n\nconst SecurityConfigurationFooterSection: React.FC<SecurityConfigurationFooterSectionProps> = ({\n  isNew,\n  isShow,\n  securityConfigurationSettings,\n  securityConfiguration,\n  configurationName,\n  configurationDescription,\n  configurationPolicy,\n  newRepoDefaults,\n  tip,\n  updateErrors,\n  clearState,\n  setFlashMessage,\n}) => {\n  const navigate = useNavigate()\n  const {\n    organization,\n    securityProducts,\n    capabilities: {ghasPurchased, ghasFreeForPublicRepos},\n  } = useAppContext()\n  const [saving, setSaving] = useState(false)\n  const [dialogType, setDialogType] = useState<DialogType | null>(null)\n  const [repoCount, setRepoCount] = useState<number>(0)\n\n  const thisConfigSetAsDefault =\n    configurationPolicy.defaultForNewPublicRepos || configurationPolicy.defaultForNewPrivateRepos\n  const existingDefaults = newRepoDefaults\n  const thisID = isNew ? 0 : securityConfiguration?.id\n  const {\n    dependabotAlertsVEA,\n    dependencyGraph,\n    dependabotAlerts,\n    dependabotSecurityUpdates,\n    dependencyGraphAutosubmitAction,\n    dependencyGraphAutosubmitActionOptions,\n    codeScanning,\n    secretScanning,\n    secretScanningValidityChecks,\n    secretScanningPushProtection,\n    secretScanningNonProviderPatterns,\n    privateVulnerabilityReporting,\n    enableGHAS,\n  } = securityConfigurationSettings\n  const areGHASSettingsEnabled =\n    dependabotAlertsVEA === SettingValue.Enabled ||\n    codeScanning === SettingValue.Enabled ||\n    secretScanning === SettingValue.Enabled\n\n  const renderGHASMessage = (ghasPurchased && enableGHAS) || (ghasFreeForPublicRepos && areGHASSettingsEnabled)\n  const existingPublicDefault = existingDefaults?.newPublicRepoDefaultConfig\n  const existingPrivateDefault = existingDefaults?.newPrivateRepoDefaultConfig\n\n  const scrollToTop = () => {\n    window.scrollTo({top: 0, behavior: 'auto'})\n  }\n\n  const save = async (event?: UIEvent) => {\n    event?.preventDefault()\n    setSaving(true)\n    const configName = configurationName.current?.value\n    const configDescription = configurationDescription.current?.value\n    // if secret scanning and code scanning are disabled for non-ghas org set enable_ghas to false\n    const enable_ghas =\n      !ghasPurchased && codeScanning === SettingValue.Disabled && secretScanning === SettingValue.Disabled\n        ? false\n        : enableGHAS\n\n    const createBody = () => {\n      const isAvailable = (availability: SecurityProductAvailability) => {\n        return availability === SecurityProductAvailability.Available\n      }\n\n      const secretScanningAvailable = isAvailable(securityProducts.secret_scanning.availability)\n      const dependencyGraphAvailable = isAvailable(securityProducts.dependency_graph.availability)\n      const dependencyGraphAutoSubmitActionAvailable = isAvailable(\n        securityProducts.dependency_graph_autosubmit_action.availability,\n      )\n      const dependabotAlertsAvailable = isAvailable(securityProducts.dependabot_alerts.availability)\n      const dependabotUpdatesAvailable = isAvailable(securityProducts.dependabot_updates.availability)\n      const codeScanningAvailable = isAvailable(securityProducts.code_scanning.availability)\n      const privateVulnerabilityReportingAvailable = isAvailable(\n        securityProducts.private_vulnerability_reporting.availability,\n      )\n\n      return {\n        security_configuration: {\n          name: configName,\n          description: configDescription,\n          enable_ghas,\n          ...(dependencyGraphAvailable && {dependency_graph: dependencyGraph}),\n          ...(dependencyGraphAutoSubmitActionAvailable && {\n            dependency_graph_autosubmit_action: dependencyGraphAutosubmitAction,\n          }),\n          ...(dependencyGraphAutoSubmitActionAvailable && {\n            dependency_graph_autosubmit_action_options: dependencyGraphAutosubmitActionOptions,\n          }),\n          ...(dependabotAlertsAvailable && {dependabot_alerts: dependabotAlerts}),\n          ...(dependabotUpdatesAvailable && {dependabot_security_updates: dependabotSecurityUpdates}),\n          ...(codeScanningAvailable && {code_scanning: codeScanning}),\n          ...(secretScanningAvailable && {secret_scanning: secretScanning}),\n          ...(secretScanningAvailable && {secret_scanning_validity_checks: secretScanningValidityChecks}),\n          ...(secretScanningAvailable && {secret_scanning_push_protection: secretScanningPushProtection}),\n          ...(secretScanningAvailable && {secret_scanning_non_provider_patterns: secretScanningNonProviderPatterns}),\n          ...(privateVulnerabilityReportingAvailable && {\n            private_vulnerability_reporting: privateVulnerabilityReporting,\n          }),\n        },\n        default_for_new_public_repos: configurationPolicy.defaultForNewPublicRepos,\n        default_for_new_private_repos: configurationPolicy.defaultForNewPrivateRepos,\n        enforcement: configurationPolicy.enforcement,\n      }\n    }\n\n    const body = createBody()\n    const url = isNew\n      ? settingsOrgSecurityConfigurationsCreatePath({org: organization})\n      : settingsOrgSecurityConfigurationsUpdatePath({org: organization, id: securityConfiguration!.id})\n\n    const result = await verifiedFetchJSON(url, {method: isNew ? 'POST' : 'PUT', body})\n\n    if (result.ok) {\n      const state = {\n        flash: {\n          message: `${body.security_configuration.name} configuration successfully ${isNew ? 'created' : 'updated'}.`,\n          variant: isNew ? 'success' : 'default',\n        },\n      }\n\n      tip && tip.length > 0\n        ? navigate(settingsOrgSecurityConfigurationsViewPath({org: organization, tip}), {state})\n        : navigate(settingsOrgSecurityProductsPath({org: organization}), {state})\n\n      scrollToTop()\n\n      // Listen for beforeunload event to clear the state\n      window.addEventListener('beforeunload', clearState)\n    } else {\n      const json = await result.json()\n      let saveErrors = {}\n      if (\n        json.error ===\n          'Another enablement event is in progress and your changes could not be saved. Please try again later.' &&\n        !isNew\n      ) {\n        setDialogType('updateFailed')\n        saveErrors = json.error\n      } else {\n        saveErrors = json.error || json.errors\n      }\n      updateErrors(saveErrors)\n      setSaving(false)\n      scrollToTop()\n    }\n    return false\n  }\n\n  const destroy = async () => {\n    const result = await verifiedFetchJSON(\n      settingsOrgSecurityConfigurationsUpdatePath({org: organization, id: securityConfiguration!.id}),\n      {method: 'DELETE'},\n    )\n\n    if (result.ok) {\n      const flash = {message: `${securityConfiguration?.name} configuration successfully deleted.`}\n      navigate(settingsOrgSecurityProductsPath({org: organization}), {state: {flash}})\n      scrollToTop()\n      window.addEventListener('beforeunload', clearState)\n    } else if (result.status === 422) {\n      setDialogType('updateFailed')\n    } else {\n      const json = await result.json()\n      setFlashMessage({message: `Failed to delete configuration: ${json.error}`, variant: `danger`})\n      scrollToTop()\n    }\n  }\n\n  const getRepoCount = useCallback(\n    async (config: SecurityConfigurationPayload['securityConfiguration']) => {\n      const result = await verifiedFetchJSON(\n        settingsOrgSecurityProductsRepositoriesCount({org: organization, id: config!.id}),\n        {method: 'GET'},\n      )\n      const data = result.ok ? await result.json() : null\n      const count = data ? data.repo_count : 0\n      setRepoCount(count)\n    },\n    [organization],\n  )\n\n  // Helper to determine if the current state would replace an existing default configuration.\n  const changesReplaceExistingDefaults = (visibility?: 'public' | 'private') => {\n    const changesPublicDefault =\n      existingPublicDefault && configurationPolicy.defaultForNewPublicRepos\n        ? existingPublicDefault.id !== thisID\n        : false\n\n    const changesPrivateDefault =\n      existingPrivateDefault && configurationPolicy.defaultForNewPrivateRepos\n        ? existingPrivateDefault.id !== thisID\n        : false\n\n    if (visibility === 'public') {\n      return changesPublicDefault\n    } else if (visibility === 'private') {\n      return changesPrivateDefault\n    } else {\n      return changesPublicDefault || changesPrivateDefault\n    }\n  }\n\n  const deleteDialogDefaultString = (configuration: SecurityConfigurationPayload['securityConfiguration']) => {\n    if (configuration?.default_for_new_public_repos && configuration?.default_for_new_private_repos) {\n      return ' and as the default for all newly created repositories'\n    } else if (configuration?.default_for_new_public_repos) {\n      return ' and as the default for newly created public repositories'\n    } else if (configuration?.default_for_new_private_repos) {\n      return ' and as the default for newly created private and internal repositories'\n    } else {\n      return ''\n    }\n  }\n\n  // Helper to output a message if the configuration update would change an existing default.\n  // If we don't overwrite an existing config (because this config isn't default or it already is default), return NULL\n  // Else return a sentence like \"will replace {name} as the default configuration for newly created {type} repositories\"\n  const dialogReplaceDefaultString = (prefix: string | null = null) => {\n    // Unless this config is set as default AND there are existing defaults, return early:\n    if (!(thisConfigSetAsDefault && existingDefaults)) return ''\n\n    let output = ''\n    prefix ||= '' // If prefix is NULL (the default) then set it to an empty string so we don't return 'null' in text.\n\n    // Helper to output the sentence. sentencePrefix is optional and used for 'and' in cases where we are replacing\n    // two different defaults with the same configuration change:\n    const sentenceFor = (name: string, type: string, sentencePrefix: string | null = null) => {\n      sentencePrefix ||= ''\n      return ` ${sentencePrefix}replace ${name} as the default configuration for newly created ${type} repositories`\n    }\n\n    const changesDefaultForPublic = changesReplaceExistingDefaults('public')\n    const changesDefaultForPrivate = changesReplaceExistingDefaults('private')\n    if (!changesDefaultForPublic && !changesDefaultForPrivate) return ''\n\n    const existingPublicRepoDefaultname = existingPublicDefault ? existingPublicDefault.name : ''\n    const existingPrivateRepoDefaultName = existingPrivateDefault ? existingPrivateDefault.name : ''\n    const existingDefaultIsTheSameForPublicAndPrivate = existingPublicDefault?.id === existingPrivateDefault?.id\n\n    if (changesDefaultForPublic && changesDefaultForPrivate && existingDefaultIsTheSameForPublicAndPrivate) {\n      // The existing default is the same for public & private repos, only name it once:\n      output = sentenceFor(existingPublicRepoDefaultname, 'public and private/internal')\n    } else if (changesDefaultForPublic && changesDefaultForPrivate) {\n      // There are two different default configs for public and private repos, so mention both:\n      output = output.concat(sentenceFor(existingPublicRepoDefaultname, 'public'))\n      output = output.concat(sentenceFor(existingPrivateRepoDefaultName, 'private/internal', 'and '))\n    } else if (changesDefaultForPublic) {\n      // There is only a default for public repos:\n      output = sentenceFor(existingPublicRepoDefaultname, 'public')\n    } else if (changesDefaultForPrivate) {\n      // There is only a default for private repos:\n      output = sentenceFor(existingPrivateRepoDefaultName, 'private/internal')\n    }\n\n    return ` ${prefix} ${output}`\n  }\n\n  const dialogMessages = () => {\n    switch (dialogType) {\n      case 'delete':\n        return `Deleting ${securityConfiguration?.name} configuration will remove it from\n        ${pluralize('repository', repoCount, true)}${deleteDialogDefaultString(securityConfiguration)}.\n        This will not change existing repository settings. This action is permanent and cannot be reversed.`\n      case 'updateFailed':\n        return 'Another enablement event is in progress. Please try again later.'\n      case 'update':\n        return isShow\n          ? `This will ${dialogReplaceDefaultString()}.`\n          : `This will update ${pluralize('repository', repoCount, true)} using this configuration\n          ${dialogReplaceDefaultString('and ')}.`\n      case 'create':\n        return `This will ${dialogReplaceDefaultString()}.`\n      default:\n        return ''\n    }\n  }\n\n  const dialogProps: Record<DialogType, DialogProps> = {\n    delete: {\n      'data-testid': 'delete-dialog',\n      title: 'Delete this configuration?',\n      footerButtons: createDialogFooterButtons({\n        cancelOnClick: () => setDialogType(null),\n        confirmOnClick: () => {\n          destroy()\n          setDialogType(null)\n        },\n        confirmContent: 'Delete configuration',\n        confirmButtonType: 'danger',\n      }),\n    },\n    updateFailed: {\n      'data-testid': 'update-failed-dialog',\n      title: `Unable to update ${configurationName.current?.value}`,\n      footerButtons: createDialogFooterButtons({\n        confirmOnClick: () => setDialogType(null),\n        confirmContent: 'Okay',\n        confirmButtonType: 'default',\n      }),\n    },\n    update: {\n      'data-testid': 'update-configuration-dialog',\n      title: `Update ${configurationName.current?.value}?`,\n      footerButtons: createDialogFooterButtons({\n        cancelOnClick: () => setDialogType(null),\n        confirmOnClick: () => {\n          save()\n          setDialogType(null)\n        },\n        confirmContent: 'Update configuration',\n        confirmButtonType: 'primary',\n      }),\n    },\n    create: {\n      'data-testid': 'create-configuration-dialog',\n      title: 'Create configuration',\n      footerButtons: createDialogFooterButtons({\n        cancelOnClick: () => setDialogType(null),\n        confirmOnClick: () => {\n          save()\n          setDialogType(null)\n        },\n        confirmContent: 'Create configuration',\n        confirmButtonType: 'primary',\n      }),\n    },\n  }\n\n  const handleButtonClick = (type: DialogType) => {\n    getRepoCount(securityConfiguration)\n    setDialogType(type)\n  }\n\n  const handleCancelConfigClick = () => {\n    navigate(settingsOrgSecurityProductsPath({org: organization}))\n    scrollToTop()\n  }\n\n  const renderSaveButton = () => {\n    if (isShow || isNew) {\n      return (\n        <Button\n          data-testid=\"save-configuration\"\n          variant=\"primary\"\n          disabled={saving}\n          onClick={() => (changesReplaceExistingDefaults() ? setDialogType(isShow ? 'update' : 'create') : save())}\n        >\n          Save configuration\n        </Button>\n      )\n    } else if (saving) {\n      return (\n        <Button data-testid=\"save-configuration\" variant=\"primary\" type=\"submit\" disabled={saving}>\n          Saving...\n        </Button>\n      )\n    } else {\n      return (\n        <Button data-testid=\"save-configuration\" variant=\"primary\" onClick={() => handleButtonClick('update')}>\n          Update configuration\n        </Button>\n      )\n    }\n  }\n\n  const ghasMessage = () => {\n    if (!ghasFreeForPublicRepos) {\n      return 'This configuration counts towards your GitHub Advanced Security license usage.'\n    } else if (ghasPurchased) {\n      return 'This configuration counts towards your GitHub Advanced Security license usage on private and internal repositories.'\n    } else {\n      return 'This configuration enables GitHub Advanced Security features. Applying it to private repositories will only enable free security features.'\n    }\n  }\n\n  return (\n    <div>\n      {dialogType && (\n        <Dialog {...dialogProps[dialogType]} onClose={() => setDialogType(null)} sx={dialogSize}>\n          {dialogMessages()}\n        </Dialog>\n      )}\n      <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', gap: 2, my: 3}}>\n        <Box sx={{display: 'flex', gap: 2}}>\n          {renderSaveButton()}\n          <Button variant=\"default\" onClick={() => handleCancelConfigClick()}>\n            Cancel\n          </Button>\n        </Box>\n        {!isNew && !isShow && (\n          <Button variant=\"danger\" onClick={() => handleButtonClick('delete')}>\n            Delete configuration\n          </Button>\n        )}\n      </Box>\n      {renderGHASMessage && (\n        <Box\n          data-testid=\"info-text\"\n          sx={{display: 'flex', flexDirection: 'row', gap: 2, my: 2, alignItems: 'center', color: 'fg.muted'}}\n        >\n          <InfoIcon size={16} />\n          <span>{ghasMessage()}</span>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nexport default SecurityConfigurationFooterSection\n\ntry{ SecurityConfigurationFooterSection.displayName ||= 'SecurityConfigurationFooterSection' } catch {}","import {\n  SettingValue,\n  type SecurityConfigurationSettings,\n  type SecuritySettingOptions,\n  type SecuritySettings,\n  type SettingOptions,\n} from '../security-products-enablement-types'\n\ntype SecurityConfigurationSettingsAction =\n  | 'ENABLE_GHAS'\n  | 'DISABLE_GHAS'\n  | 'ENABLE_GHAS_SETTINGS'\n  | 'DISABLE_GHAS_SETTINGS'\n  | 'UPDATE_SECURITY_SETTINGS'\n\nconst SecuritySettingsMap: {\n  [key in keyof SecuritySettings]: {\n    parents: Array<keyof SecuritySettings>\n    children: Array<keyof SecuritySettings>\n  }\n} = {\n  dependencyGraph: {\n    parents: [],\n    children: [\n      'dependabotAlerts',\n      'dependabotAlertsVEA',\n      'dependabotSecurityUpdates',\n      'dependencyGraphAutosubmitAction',\n    ],\n  },\n  dependencyGraphAutosubmitAction: {\n    parents: ['dependencyGraph'],\n    children: [],\n  },\n  dependabotAlerts: {\n    parents: ['dependencyGraph'],\n    children: ['dependabotAlertsVEA', 'dependabotSecurityUpdates'],\n  },\n  dependabotAlertsVEA: {parents: ['dependabotAlerts', 'dependencyGraph'], children: []},\n  dependabotSecurityUpdates: {parents: ['dependabotAlerts', 'dependencyGraph'], children: []},\n  codeScanning: {parents: [], children: []},\n  secretScanning: {\n    parents: [],\n    children: ['secretScanningPushProtection', 'secretScanningValidityChecks', 'secretScanningNonProviderPatterns'],\n  },\n  secretScanningPushProtection: {parents: ['secretScanning'], children: []},\n  secretScanningValidityChecks: {parents: ['secretScanning'], children: []},\n  secretScanningNonProviderPatterns: {parents: ['secretScanning'], children: []},\n  privateVulnerabilityReporting: {parents: [], children: []},\n}\n\n/**\n * This function updates a security setting and its children/parents based on the new value.\n * See issue for all the possible state changes:\n *  https://github.com/github/security-products-growth/issues/95#issuecomment-1823238104\n */\nfunction updateSecurityConfigurationSettings(\n  feature: keyof SecuritySettings,\n  updatedValue: SettingValue,\n  updatedOptions: SettingOptions,\n  oldSettings: SecurityConfigurationSettings,\n): SecurityConfigurationSettings {\n  const isChildFeature = SecuritySettingsMap[feature].parents.length > 0\n  const isParentFeature = SecuritySettingsMap[feature].children.length > 0\n  const newSettings = {...oldSettings, [feature]: updatedValue}\n\n  // If there is an options value for this feature we should check if\n  // there is a corresponding SecuritySettingOptions property for the\n  // feature.\n  let featureOptions\n  if (updatedOptions) {\n    if (`${feature}Options` in oldSettings) {\n      featureOptions = `${feature}Options` as keyof SecuritySettingOptions\n      newSettings[featureOptions] = updatedOptions\n      // If a parent feature is disabled any child features will retain their options\n      // even if they become Disabled or NotSet - this is working as intended.\n      //\n      //\n      // Consider that in an option may be a user-entered string, deleting it from the\n      // SecurityConfiguration due to a cascaded disablement click isn't desirable.\n      //\n      // The feature being disabled takes precedent so the options will never be\n      // applied since the feature is either disabled or not specified by the\n      // SecurityConfiguration, but they will be retained for ease of use in future.\n    }\n  }\n\n  if (isChildFeature) {\n    for (const parentFeature of SecuritySettingsMap[feature].parents) {\n      if (oldSettings[parentFeature] === SettingValue.Disabled) {\n        newSettings[parentFeature] = updatedValue\n      } else if (oldSettings[parentFeature] === SettingValue.NotSet) {\n        if (updatedValue === SettingValue.Enabled) newSettings[parentFeature] = updatedValue\n        else if (updatedValue === SettingValue.Disabled) newSettings[parentFeature] = SettingValue.NotSet\n      }\n    }\n  }\n\n  if (isParentFeature) {\n    for (const childFeature of SecuritySettingsMap[feature].children) {\n      if (oldSettings[childFeature] === SettingValue.Enabled) {\n        // if the child feature was previously enabled, update the child setting to the parent's new value (either Not Set or Disabled)\n        newSettings[childFeature] = updatedValue\n        // if the child feature was previously Not Set\n      } else if (oldSettings[childFeature] === SettingValue.NotSet) {\n        // VEA should mirror Dependabot Alerts' state\n        if (childFeature === 'dependabotAlertsVEA') {\n          newSettings[childFeature] = newSettings[feature]\n\n          // if Enabled -> NotSet or NotSet -> Enabled, leave at NotSet\n        } else if (\n          (oldSettings[feature] === SettingValue.Enabled && updatedValue === SettingValue.NotSet) ||\n          (oldSettings[feature] === SettingValue.NotSet && updatedValue === SettingValue.Enabled)\n        ) {\n          newSettings[childFeature] = SettingValue.NotSet\n\n          // if Enabled -> Disabled or NotSet -> Disabled, set to Disabled\n        } else if (\n          (oldSettings[feature] === SettingValue.Enabled && updatedValue === SettingValue.Disabled) ||\n          (oldSettings[feature] === SettingValue.NotSet && updatedValue === SettingValue.Disabled)\n        ) {\n          newSettings[childFeature] = SettingValue.Disabled\n        }\n      }\n    }\n  }\n\n  // handle VEA\n  if (newSettings['enableGHAS'] && feature === 'dependabotAlerts') {\n    switch (updatedValue) {\n      case SettingValue.Enabled:\n        newSettings['dependabotAlertsVEA'] = SettingValue.Enabled\n        break\n      case SettingValue.NotSet:\n        newSettings['dependabotAlertsVEA'] = SettingValue.NotSet\n        break\n    }\n  }\n\n  return newSettings\n}\n\nfunction ghasSettings(enable: boolean): Partial<SecurityConfigurationSettings> {\n  const settings: Partial<SecurityConfigurationSettings> = {\n    dependabotAlertsVEA: enable ? SettingValue.Enabled : SettingValue.Disabled,\n    codeScanning: enable ? SettingValue.Enabled : SettingValue.Disabled,\n    secretScanning: enable ? SettingValue.Enabled : SettingValue.Disabled,\n    secretScanningValidityChecks: enable ? SettingValue.Enabled : SettingValue.Disabled,\n    secretScanningPushProtection: enable ? SettingValue.Enabled : SettingValue.Disabled,\n    secretScanningNonProviderPatterns: enable ? SettingValue.Enabled : SettingValue.Disabled,\n  }\n\n  if (enable) return {...settings, dependabotAlerts: SettingValue.Enabled, dependencyGraph: SettingValue.Enabled}\n\n  return settings\n}\n\nexport const securityConfigurationSettingsReducer = (\n  state: SecurityConfigurationSettings,\n  action: {\n    type: SecurityConfigurationSettingsAction\n    state?: {setting?: keyof SecuritySettings; value?: SettingValue; options?: SettingOptions}\n  },\n) => {\n  switch (action.type) {\n    case 'ENABLE_GHAS':\n      return enableVEAIfRequired({...state, enableGHAS: true})\n    case 'DISABLE_GHAS':\n      return {...state, enableGHAS: false}\n    case 'ENABLE_GHAS_SETTINGS':\n      return {...state, ...ghasSettings(true)}\n    case 'DISABLE_GHAS_SETTINGS':\n      return {...state, ...ghasSettings(false)}\n    case 'UPDATE_SECURITY_SETTINGS':\n      return {\n        ...updateSecurityConfigurationSettings(\n          action.state!.setting!,\n          action.state!.value!,\n          action.state!.options!,\n          state,\n        ),\n      }\n    default:\n      return {...state}\n  }\n}\n\n// VEA must be enabled if Dependabot Alerts is enabled\nconst enableVEAIfRequired = (state: SecurityConfigurationSettings): SecurityConfigurationSettings => {\n  if (state.dependabotAlerts === SettingValue.Enabled && state.dependabotAlertsVEA === SettingValue.Disabled) {\n    state.dependabotAlertsVEA = SettingValue.Enabled\n  }\n  return state\n}\n","import type React from 'react'\nimport {useReducer, useRef, useState, useMemo, useCallback} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport capitalize from 'lodash-es/capitalize'\nimport {Link} from '@github-ui/react-core/link'\nimport {useAlive} from '@github-ui/use-alive'\nimport {useDebounce} from '@github-ui/use-debounce'\nimport {useSearchParams} from '@github-ui/use-navigate'\nimport {ShieldCheckIcon} from '@primer/octicons-react'\nimport {OnboardingTipBanner} from '@github-ui/onboarding-tip-banner'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {FormControl, Link as PrimerLink, TextInput, Text, Box} from '@primer/react'\nimport {settingsOrgSecurityProductsPath, orgOnboardingAdvancedSecurityPath} from '@github-ui/paths'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nimport {\n  SecurityProductAvailability,\n  SettingValue,\n  type ConfigurationPolicy,\n  type SecurityConfigurationPayload,\n  type SecurityConfigurationSettings,\n  type SecuritySettings,\n  type SettingFeatureFlags,\n  type SettingOptions,\n  type ValidationErrors,\n} from '../security-products-enablement-types'\nimport type {FlashProps} from '../components/Flash'\nimport {DialogContext} from '../contexts/DialogContext'\nimport {useAppContext} from '../contexts/AppContext'\nimport {SecuritySettingsContext} from '../contexts/SecuritySettingsContext'\nimport Flash from '../components/Flash'\nimport Banner from '../components/Banner'\nimport Subhead from '../components/Subhead'\nimport Validation from '../components/Validation'\nimport CodeScanning from '../components/SecurityProducts/CodeScanning'\nimport SecretScanning from '../components/SecurityProducts/SecretScanning'\nimport DependencyGraph from '../components/SecurityProducts/DependencyGraph'\nimport AdvancedSecurity from '../components/SecurityProducts/AdvancedSecurity'\nimport PrivateVulnerabilityReporting from '../components/SecurityProducts/PrivateVulnerabilityReporting'\nimport SecurityConfigurationPolicySection from '../components/SecurityConfiguration/PolicySection'\nimport SecurityConfigurationFooterSection from '../components/SecurityConfiguration/FooterSection'\nimport {fetchInProgressStatus} from '../utils/api-helpers'\nimport {DEFAULT_SECURITY_CONFIGURATION_STATE} from '../utils/helpers'\nimport {securityConfigurationSettingsReducer} from '../utils/security-configuration-reducer'\n\nconst getInitialState = (\n  payload: SecurityConfigurationPayload,\n  isGHASAvailable: boolean,\n): SecurityConfigurationSettings => {\n  if (!payload.securityConfiguration) {\n    return {\n      ...DEFAULT_SECURITY_CONFIGURATION_STATE,\n      enableGHAS: isGHASAvailable,\n    }\n  }\n\n  return {\n    enableGHAS: payload.securityConfiguration.enable_ghas,\n    dependencyGraph: payload.securityConfiguration.dependency_graph,\n    dependencyGraphAutosubmitAction:\n      payload.securityConfiguration.dependency_graph_autosubmit_action || SettingValue.NotSet,\n    dependencyGraphAutosubmitActionOptions: payload.securityConfiguration.dependency_graph_autosubmit_action_options,\n    dependabotAlerts: payload.securityConfiguration.dependabot_alerts,\n    dependabotAlertsVEA:\n      payload.securityConfiguration.dependabot_alerts === SettingValue.Enabled &&\n      payload.securityConfiguration.enable_ghas\n        ? SettingValue.Enabled\n        : SettingValue.Disabled,\n    dependabotSecurityUpdates: payload.securityConfiguration.dependabot_security_updates,\n    codeScanning: payload.securityConfiguration.code_scanning,\n    secretScanning: payload.securityConfiguration.secret_scanning,\n    secretScanningPushProtection: payload.securityConfiguration.secret_scanning_push_protection,\n    secretScanningValidityChecks:\n      payload.securityConfiguration.secret_scanning_validity_checks || payload.securityConfiguration.secret_scanning,\n    secretScanningNonProviderPatterns:\n      payload.securityConfiguration.secret_scanning_non_provider_patterns ||\n      payload.securityConfiguration.secret_scanning,\n    privateVulnerabilityReporting: payload.securityConfiguration.private_vulnerability_reporting,\n  }\n}\n\nconst SecurityConfiguration: React.FC = () => {\n  const location = useLocation()\n  const [searchParams] = useSearchParams()\n  const payload = useRoutePayload<SecurityConfigurationPayload>()\n  const {organization, capabilities} = useAppContext()\n  const isNew = !payload.securityConfiguration\n  const isShow = payload.securityConfiguration?.target_type === 'global'\n  const [errors, setErrors] = useState<ValidationErrors>({})\n  const [flashMessage, setFlashMessage] = useState<FlashProps>({})\n  const tip = searchParams.get('tip') || ``\n  const channel = payload.channel\n\n  const configurationNameRef = useRef<HTMLInputElement>(null)\n  const configurationDescriptionRef = useRef<HTMLInputElement>(null)\n\n  const [securityConfigurationSettings, dispatchSettings] = useReducer(\n    securityConfigurationSettingsReducer,\n    getInitialState(payload, capabilities.ghasPurchased || capabilities.ghasFreeForPublicRepos),\n  )\n\n  const handleSettingChange = (setting: keyof SecuritySettings, value: SettingValue, options?: SettingOptions) => {\n    dispatchSettings({type: 'UPDATE_SECURITY_SETTINGS', state: {setting, value, options}})\n  }\n\n  const handleGhasSettingChange = useCallback(\n    (setting: keyof SecuritySettings, value: SettingValue) => {\n      dispatchSettings({type: 'UPDATE_SECURITY_SETTINGS', state: {setting, value}})\n\n      if ([SettingValue.Enabled, SettingValue.NotSet].includes(value) && !securityConfigurationSettings.enableGHAS)\n        dispatchSettings({type: 'ENABLE_GHAS'})\n    },\n    [securityConfigurationSettings],\n  )\n\n  const renderInlineValidation = useCallback(\n    (name: string) => {\n      const error = errors[name]?.join(', ')\n      return error && <Validation validationStatus=\"error\">{error}</Validation>\n    },\n    [errors],\n  )\n\n  const isAvailable = useCallback((availability: SecurityProductAvailability): boolean => {\n    return availability === SecurityProductAvailability.Available\n  }, [])\n\n  const validityChecksEnabled = useFeatureFlag('secret_scanning_validity_checks_in_security_configurations')\n  const featureFlags: SettingFeatureFlags = useMemo(\n    () => ({\n      secretScanningValidityChecks: validityChecksEnabled,\n    }),\n    [validityChecksEnabled],\n  )\n  const securitySettingsContextValue = useMemo(\n    () => ({\n      ...securityConfigurationSettings,\n      handleSettingChange,\n      handleGhasSettingChange,\n      renderInlineValidation,\n      isAvailable,\n      featureFlags,\n    }),\n    [handleGhasSettingChange, securityConfigurationSettings, renderInlineValidation, isAvailable, featureFlags],\n  )\n\n  const [configurationPolicy, setConfigurationPolicy] = useState<ConfigurationPolicy>({\n    defaultForNewPublicRepos: payload.securityConfiguration?.default_for_new_public_repos ?? false,\n    defaultForNewPrivateRepos: payload.securityConfiguration?.default_for_new_private_repos ?? false,\n    enforcement: payload.securityConfiguration?.enforcement ?? 'enforced',\n  })\n\n  const dialogContextValue = useMemo(\n    () => ({configurationPolicy, setConfigurationPolicy}),\n    [configurationPolicy, setConfigurationPolicy],\n  )\n\n  const [changesInProgress, setChangesInProgress] = useState(payload.changesInProgress)\n  const debouncedUpdateChangesInProgress = useDebounce(async () => {\n    const response = await fetchInProgressStatus(organization)\n    if (response) setChangesInProgress(response)\n  }, 1500)\n  const handleAliveEvent = () => debouncedUpdateChangesInProgress()\n  useAlive(channel!, handleAliveEvent)\n\n  const updateErrors = (newErrors: React.SetStateAction<ValidationErrors>) => setErrors(newErrors)\n\n  // Remove the event listener to avoid memory leaks\n  const clearState = () => {\n    const newState = {...location.state}\n    newState.flash = undefined\n    window.history.replaceState(newState, '')\n    window.removeEventListener('beforeunload', clearState)\n  }\n\n  const securityConfigurationTitle = isShow ? 'GitHub recommended' : isNew ? 'New configuration' : 'Edit configuration'\n\n  const renderFormValidation = (name: string) => {\n    if (!errors[name]) return null\n\n    const readableErrors = errors[name]?.map(error => `${capitalize(name)} ${error}`)\n    return <FormControl.Validation variant=\"error\">{readableErrors?.join(', ')}</FormControl.Validation>\n  }\n\n  const handleOnSelectGHAS = (value: string) => {\n    if (value === 'include') {\n      dispatchSettings({type: 'ENABLE_GHAS'})\n      dispatchSettings({type: 'ENABLE_GHAS_SETTINGS'})\n    } else {\n      dispatchSettings({type: 'DISABLE_GHAS'})\n      dispatchSettings({type: 'DISABLE_GHAS_SETTINGS'})\n    }\n  }\n\n  const inProgressText = `Another enablement event is in progress. Modifying or deleting this configuration is not available until it's finished.`\n\n  return (\n    <>\n      <Box sx={{fontSize: 2, mb: 2}}>\n        <PrimerLink as={Link} to={settingsOrgSecurityProductsPath({org: organization})}>\n          Code security configurations\n        </PrimerLink>\n        {' / '}\n        {securityConfigurationTitle}\n      </Box>\n      <Subhead>\n        <Box sx={{my: 2}}>\n          <Text data-testid=\"form-title\" as=\"strong\" sx={{fontSize: 4}}>\n            {securityConfigurationTitle}\n          </Text>\n        </Box>\n      </Subhead>\n      {!isNew && changesInProgress.inProgress && <Banner bannerText={inProgressText} />}\n      <Flash {...flashMessage} />\n      <form data-hpc>\n        <FormControl sx={{my: 3}} disabled={isShow}>\n          <FormControl.Label>Name*</FormControl.Label>\n          {renderFormValidation('name')}\n          <TextInput\n            ref={configurationNameRef}\n            name=\"name\"\n            placeholder=\"Name\"\n            block={true}\n            defaultValue={payload.securityConfiguration?.name}\n          />\n        </FormControl>\n        <FormControl sx={{my: 3}} disabled={isShow}>\n          <FormControl.Label>Description*</FormControl.Label>\n          {renderFormValidation('description')}\n          <TextInput\n            ref={configurationDescriptionRef}\n            name=\"description\"\n            placeholder=\"Description\"\n            block={true}\n            defaultValue={payload.securityConfiguration?.description}\n          />\n        </FormControl>\n        <Box sx={{mt: 3}}>\n          <Text as=\"strong\" sx={{fontSize: 4}}>\n            Security settings\n          </Text>\n        </Box>\n        <div className=\"f5 color-fg-muted\">\n          Repositories using this configuration will have the following settings applied.\n        </div>\n        <SecuritySettingsContext.Provider value={securitySettingsContextValue}>\n          <AdvancedSecurity handleOnSelectGHAS={handleOnSelectGHAS} />\n          <DependencyGraph />\n          <CodeScanning />\n          <SecretScanning />\n          <PrivateVulnerabilityReporting />\n        </SecuritySettingsContext.Provider>\n        {tip === 'protect_new_repositories' && (\n          <OnboardingTipBanner\n            link={orgOnboardingAdvancedSecurityPath({org: organization})}\n            icon={ShieldCheckIcon}\n            linkText=\"Back to onboarding\"\n            heading=\"Protect new repositories\"\n          >\n            Keep your new repositories code, supply chain, and secrets secure with natively embedded security and\n            unparalleled access to curated security intelligence.\n          </OnboardingTipBanner>\n        )}\n        <DialogContext.Provider value={dialogContextValue}>\n          <SecurityConfigurationPolicySection />\n        </DialogContext.Provider>\n        <SecurityConfigurationFooterSection\n          isNew={isNew}\n          isShow={isShow}\n          securityConfigurationSettings={securityConfigurationSettings}\n          securityConfiguration={payload.securityConfiguration}\n          configurationName={configurationNameRef}\n          configurationDescription={configurationDescriptionRef}\n          configurationPolicy={configurationPolicy}\n          newRepoDefaults={payload.newRepoDefaults}\n          tip={tip}\n          updateErrors={updateErrors}\n          clearState={clearState}\n          setFlashMessage={setFlashMessage}\n        />\n      </form>\n    </>\n  )\n}\n\nexport default SecurityConfiguration\n\ntry{ SecurityConfiguration.displayName ||= 'SecurityConfiguration' } catch {}","import App from './App'\nimport OrganizationSettingsSecurityProducts from './routes/OrganizationSettingsSecurityProducts'\nimport SecurityConfiguration from './routes/SecurityConfiguration'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('security-products-enablement', () => ({\n  App,\n  routes: [\n    jsonRoute({\n      path: '/organizations/:organization/settings/security_products',\n      Component: OrganizationSettingsSecurityProducts,\n    }),\n    jsonRoute({\n      path: '/organizations/:organization/settings/security_products/configurations/new',\n      Component: SecurityConfiguration,\n    }),\n    jsonRoute({\n      path: '/organizations/:organization/settings/security_products/configurations/edit/:id',\n      Component: SecurityConfiguration,\n    }),\n    jsonRoute({\n      path: '/organizations/:organization/settings/security_products/configurations/view',\n      Component: SecurityConfiguration,\n    }),\n  ],\n}))\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {isStaff} from '@github-ui/stats'\nimport {TrustedTypesPolicyError, trustedTypesPolicy} from './policy'\n\nconst policyName = 'alive'\n\nexport class InvalidSourceRelError extends TrustedTypesPolicyError {}\nexport const alivePolicy = ghTrustedTypes.createPolicy(policyName, {\n  createScriptURL: (url: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        if (!isStaff()) return url\n        if (!url.startsWith('/')) throw new InvalidSourceRelError('Alive worker src URL must start with a slash')\n        return url\n      },\n      policyName,\n      fallback: url,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","import {useTrackingRef} from '@github-ui/use-tracking-ref'\nimport debounce, {type DebouncedFunc, type DebounceSettings} from 'lodash-es/debounce'\nimport {useEffect, useMemo} from 'react'\n\nexport interface DebounceHookChangeSettings {\n  /**\n   * When the parameters (ie, the wait duration or any settings) are changed or the hook\n   * is unmounted, any pending trailing calls must be handled to avoid potential memory\n   * leaks. This parameter controls the handling strategy. This only has effect if\n   * `trailing` is `true`.\n   *\n   * Options are:\n   *\n   * - `flush` (default): Call pending calls immediately. May result in occasionally calling\n   *   more often than expected. This is the safest way to avoid losing data. If the callback\n   *   is async, care must be taken not to set state or perform other actions if not mounted\n   *   after awaiting.\n   * - `cancel`: Cancel pending calls. May result in dropping calls.\n   */\n  onChangeBehavior?: 'flush' | 'cancel'\n}\n\nexport type UseDebounceSettings = DebounceSettings & DebounceHookChangeSettings\n\n/**\n * Get a debounced version of the provided function. A debounced function will wait to be\n * called until `waitMs` milliseconds have passed since the last invocation. The result of\n * this hook is referentially stable with respect to `fn`, but will change if the other\n * parameters change.\n *\n * @see {@link debounce Lodash's debounce docs} for more details on available options.\n */\nexport const useDebounce = <Fn extends (...args: never[]) => unknown>(\n  fn: Fn,\n  waitMs: number,\n  {leading = false, maxWait, trailing = true, onChangeBehavior = 'flush'}: UseDebounceSettings = {},\n): DebouncedFunc<Fn> => {\n  const fnRef = useTrackingRef(fn)\n\n  const debouncedFn = useMemo(() => {\n    // It's not enough to set `maxWait` to `undefined` in the options object - it needs to not be `in`\n    // the object at all. See: https://github.com/lodash/lodash/issues/5495\n    // For `leading` and `trailing` we default to the default boolean values so they are fine.\n    const options = maxWait === undefined ? {leading, trailing} : {leading, trailing, maxWait}\n\n    return debounce((...args: Parameters<typeof fnRef.current>) => fnRef.current(...args), waitMs, options)\n  }, [fnRef, waitMs, leading, maxWait, trailing])\n\n  useEffect(\n    () => () => {\n      debouncedFn?.[onChangeBehavior]()\n    },\n    [debouncedFn, onChangeBehavior],\n  )\n\n  return debouncedFn\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {useRef} from 'react'\n\nexport function useTrackingRef<T>(value: T): React.MutableRefObject<T> {\n  const ref = useRef(value)\n\n  useLayoutEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Description-module__container--b3n6F\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\n\nimport type {StylableProps} from '../types'\nimport styles from './Description.module.css'\n\ninterface ListItemDescriptionProps extends StylableProps {\n  children?: React.ReactNode\n}\n\nexport function ListItemDescription({children, style, className, sx}: ListItemDescriptionProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-description')}\n      className={clsx(styles.container, className)}\n      style={style}\n      sx={sx}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemDescription.displayName ||= 'ListItemDescription' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainContent-module__container--ry4iL\",\"inner\":\"MainContent-module__inner--bU_tk\",\"compact\":\"MainContent-module__compact--mM626\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\nimport {Children, isValidElement, type ReactNode} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './MainContent.module.css'\nimport {ListItemTitle} from './Title'\n\nexport function ListItemMainContent({children}: {children?: ReactNode}) {\n  const {variant} = useListViewVariant()\n  const childrenArray = Children.toArray(children)\n  const titleIndex = childrenArray.findIndex(\n    child => isValidElement(child) && typeof child !== 'string' && child.type === ListItemTitle,\n  )\n  const title = childrenArray[titleIndex]\n  const nonTitleChildren =\n    titleIndex < 0 ? childrenArray : childrenArray.slice(0, titleIndex).concat(childrenArray.slice(titleIndex + 1))\n  return (\n    <>\n      {title}\n      <div {...testIdProps('list-view-item-main-content')} className={styles.container}>\n        <div className={clsx(styles.inner, variant === 'compact' && styles.compact)}>{nonTitleChildren}</div>\n      </div>\n    </>\n  )\n}\n\ntry{ ListItemMainContent.displayName ||= 'ListItemMainContent' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"metadata\":\"Metadata-module__metadata--yvrod\",\"secondary\":\"Metadata-module__secondary--zMgLx\",\"primary\":\"Metadata-module__primary--cJgJU\",\"alignRight\":\"Metadata-module__alignRight--rp0_Z\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, type BoxProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport type {StylableProps} from '../types'\nimport styles from './Metadata.module.css'\n\nexport type ListItemMetadataProps = PropsWithChildren<{\n  /**\n   * Controls how the metadata will be aligned inside the trailing content. Defaults to 'left'.\n   */\n  alignment?: 'left' | 'right'\n  /**\n   * Alter the appearance of the metadata to appear more subtle than other ListItem content ('secondary', default) or\n   * comparable to other ListItem content ('primary'). Affects text color, font size, width, and distance from other\n   * metadata items.\n   */\n  variant?: 'primary' | 'secondary'\n}> &\n  Omit<BoxProps, 'sx'> &\n  StylableProps\n\nexport function ListItemMetadata({children, alignment, variant, ...props}: ListItemMetadataProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-metadata-item')}\n      {...props}\n      className={clsx(\n        styles.metadata,\n        variant === 'primary' ? styles.primary : styles.secondary,\n        alignment === 'right' && styles.alignRight,\n        props.className,\n      )}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemMetadata.displayName ||= 'ListItemMetadata' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrailingBadge-module__container--gg6pc\",\"label\":\"TrailingBadge-module__label--F7ho5\",\"title\":\"TrailingBadge-module__title--FDayi\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Label, type LabelProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport type {PrefixedStylableProps} from '../types'\nimport styles from './TrailingBadge.module.css'\n\nexport type ListItemTrailingBadgeProps = PropsWithChildren<Pick<LabelProps, 'variant' | 'size'>> &\n  PrefixedStylableProps<'container'> & {\n    /**\n     * Text that is shown as a visible Primer Label and as visually hidden text for screen readers.\n     */\n    title: string\n  }\n\nexport const ListItemTrailingBadge = ({\n  title,\n  containerStyle,\n  containerSx,\n  containerClassName,\n  children,\n  ...props\n}: ListItemTrailingBadgeProps) => {\n  return (\n    <Box\n      {...testIdProps('list-view-item-trailing-badge')}\n      className={clsx(styles.container, containerClassName)}\n      style={containerStyle}\n      sx={containerSx}\n      data-listview-component=\"trailing-badge\"\n    >\n      {children ? (\n        children\n      ) : (\n        <Label className={styles.label} {...props}>\n          <span className={styles.title}>{title}</span>\n        </Label>\n      )}\n    </Box>\n  )\n}\n\ntry{ ListItemTrailingBadge.displayName ||= 'ListItemTrailingBadge' } catch {}","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement, ReactNode, Suspense} from 'react'\nimport {isValidElement, useCallback, useEffect, useRef} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport {useNextHeaderTag} from '../hooks/use-next-header-tag'\nimport type {PrefixedStylableProps, StylableProps} from '../types'\nimport {ListViewActionBar, type ListViewActionBarProps} from './ActionBar'\nimport {useListViewId} from './IdContext'\nimport styles from './Metadata.module.css'\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport {ListViewSectionFilters} from './SectionFilters'\nimport {ListViewSelectAllCheckbox} from './SelectAllCheckbox'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\nexport type ListViewMetadataProps = {\n  /**\n   * The rendered title of the list or information regarding its contents.\n   */\n  title?: string | ReactNode\n  /**\n   * Links for applying any categorical, mutually exclusive section filters for the content of the ListView.\n   */\n  sectionFilters?: ListViewSectionFilterLinks | ReactElement<typeof Suspense>\n  /**\n   * Used for assistive announcements that are reflective of the visual updates to the list container a sighted user\n   * will experience when using the list. Defaults to no announcement. Visually hidden, for screenreaders only.\n   */\n  assistiveAnnouncement?: string\n  /**\n   * Callback for when the checkbox for selecting and deselecting all list items is toggled.\n   */\n  onToggleSelectAll?: (isSelectAllChecked: boolean) => void\n  /**\n   * Optional additional actions to show. Will not fall into an overflow dropdown menu to accommodate small screen\n   * widths.\n   */\n  children?: ReactNode\n} & StylableProps &\n  PrefixedStylableProps<'actions'> &\n  ListViewActionBarProps\n\nexport const ListViewMetadata = ({\n  title,\n  assistiveAnnouncement,\n  sectionFilters,\n  children,\n  style,\n  sx,\n  className,\n  actionsStyle,\n  actionsSx,\n  actionsClassName,\n  onToggleSelectAll,\n  ...actionBarProps\n}: ListViewMetadataProps) => {\n  const {idPrefix} = useListViewId()\n  const {anyItemsSelected} = useListViewSelection()\n  const {setHasMetadataTitle} = useListViewTitle()\n  const TitleTag = useNextHeaderTag('list-view-metadata')\n  const announceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    setHasMetadataTitle(!!title)\n  })\n\n  useEffect(() => {\n    if (announceRef.current) announceFromElement(announceRef.current)\n  }, [assistiveAnnouncement])\n\n  const ListViewAnnouncements = () => {\n    return (\n      <div\n        id={`${idPrefix}-list-view-announcements`}\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        ref={announceRef}\n        {...testIdProps('list-view-announcement-container')}\n      >\n        {assistiveAnnouncement}\n      </div>\n    )\n  }\n\n  const ListFilters = useCallback(() => {\n    if (!sectionFilters) return null\n\n    if (Array.isArray(sectionFilters)) {\n      return <ListViewSectionFilters links={sectionFilters} />\n    } else if (isValidElement(sectionFilters)) {\n      return <>{sectionFilters}</>\n    }\n    return null\n  }, [sectionFilters])\n\n  return (\n    <Box\n      id={`${idPrefix}-list-view-metadata`}\n      className={clsx(styles.container, className, anyItemsSelected && densityStyles.spacious)}\n      style={style}\n      sx={sx}\n      {...testIdProps('list-view-metadata')}\n    >\n      <ListViewSelectAllCheckbox\n        onToggle={(isSelectAllChecked: boolean) => {\n          if (onToggleSelectAll) onToggleSelectAll(isSelectAllChecked)\n        }}\n      />\n\n      <ListFilters />\n\n      {title && !anyItemsSelected && (\n        <TitleTag className={styles.heading} {...testIdProps('list-view-header-title')}>\n          {title}\n        </TitleTag>\n      )}\n\n      <ListViewActionBar style={actionsStyle} sx={actionsSx} className={actionsClassName} {...actionBarProps}>\n        {children}\n      </ListViewActionBar>\n\n      {assistiveAnnouncement && <ListViewAnnouncements />}\n    </Box>\n  )\n}\n\ntry{ ListViewMetadata.displayName ||= 'ListViewMetadata' } catch {}\ntry{ TitleTag.displayName ||= 'TitleTag' } catch {}\ntry{ ListViewAnnouncements.displayName ||= 'ListViewAnnouncements' } catch {}\ntry{ ListFilters.displayName ||= 'ListFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"normal\":\"density-gap-module__normal--WYrBD\",\"none\":\"density-gap-module__none--WMH6V\",\"condensed\":\"density-gap-module__condensed--seZl0\",\"spacious\":\"density-gap-module__spacious--Nnm9Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ActionBar-module__container--SjALR\"};","import {ActionBar as GitHubUiActionBar, type ActionBarProps as GitHubUiActionBarProps} from '@github-ui/action-bar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport type {StylableProps} from '../types'\nimport styles from './ActionBar.module.css'\nimport type {ListViewDensityToggle} from './DensityToggle'\n\n// Require actionsLabel if actions are provided, and vice versa.\ntype ListViewActionBar =\n  | {\n      /**\n       * Description of the controls found in the action bar, e.g., \"Issue actions\", \"Markdown formatting tools\".\n       * Will be used in a hidden label for accessibility purposes. Defaults to the title for the ListView.\n       */\n      actionsLabel: GitHubUiActionBarProps['label']\n      /**\n       * The controls to show in the action bar. These will move into a dropdown menu when the screen isn't big enough to\n       * fit them side by side.\n       */\n      actions: GitHubUiActionBarProps['actions']\n    }\n  | {actionsLabel?: undefined; actions?: undefined}\n\nexport type ListViewActionBarProps = ListViewActionBar & {\n  /**\n   * Include a toggle to switch between Comfortable and Condensed view modes.\n   */\n  densityToggle?: ReactElement<typeof ListViewDensityToggle>\n} & StylableProps &\n  Omit<GitHubUiActionBarProps, 'actions' | 'label'>\n\nexport const ListViewActionBar = ({\n  actions,\n  style,\n  sx,\n  className,\n  children,\n  density,\n  actionsLabel,\n  densityToggle,\n}: ListViewActionBarProps) => {\n  const nonCollapsibleActions = (\n    <>\n      {children}\n      {densityToggle}\n    </>\n  )\n\n  if (actions && actions.length > 0) {\n    return (\n      <GitHubUiActionBar\n        label={actionsLabel?.trim()}\n        actions={actions}\n        density={density}\n        {...testIdProps('list-view-actions')}\n        style={style}\n        sx={sx}\n        className={className}\n      >\n        {nonCollapsibleActions}\n      </GitHubUiActionBar>\n    )\n  }\n\n  return (\n    <Box\n      {...testIdProps('list-view-actions')}\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, density && densityStyles[density], className)}\n    >\n      {nonCollapsibleActions}\n    </Box>\n  )\n}\n\ntry{ ListViewActionBar.displayName ||= 'ListViewActionBar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Metadata-module__container--tL6Q3\",\"heading\":\"Metadata-module__heading--HAxII\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SectionFilters-module__container--MmIUF\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\n\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport styles from './SectionFilters.module.css'\n\ntype ListViewSectionFiltersProps = {\n  links: ListViewSectionFilterLinks\n}\n\nexport const ListViewSectionFilters = ({links}: ListViewSectionFiltersProps) => {\n  if (links.length < 1) return null\n\n  return (\n    <div {...testIdProps('list-view-section-filters')}>\n      <ul className={clsx('list-style-none', styles.container)}>\n        {links.map((sectionFilterLink, index) => (\n          <li key={`section-filter-${index}`} {...testIdProps(`list-view-section-filter-${index}`)}>\n            {sectionFilterLink}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\ntry{ ListViewSectionFilters.displayName ||= 'ListViewSectionFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectAllCheckbox-module__container--FJDtV\",\"formControlContainer\":\"SelectAllCheckbox-module__formControlContainer--JTzPI\",\"count\":\"SelectAllCheckbox-module__count--xEF8c\"};","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Checkbox, FormControl} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback, useEffect, useId, useMemo, useRef} from 'react'\n\nimport type {StylableProps} from '../types'\nimport {useListViewMultiPageSelection} from './MultiPageSelectionContext'\nimport styles from './SelectAllCheckbox.module.css'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\ntype ListViewSelectAllCheckboxProps = {onToggle?: (value: boolean) => void; className?: string} & StylableProps\n\nexport const ListViewSelectAllCheckbox = ({onToggle, style, className, sx}: ListViewSelectAllCheckboxProps) => {\n  const {title} = useListViewTitle()\n  const {\n    isSelectable,\n    selectedCount,\n    totalCount,\n    countOnPage,\n    isSelectAllChecked,\n    anyItemsSelected,\n    singularUnits,\n    pluralUnits,\n  } = useListViewSelection()\n  const {multiPageSelectionAllowed} = useListViewMultiPageSelection()\n  const idPrefix = useId()\n  const checkboxRef = useRef<HTMLInputElement>(null)\n  const srRef = useRef<HTMLSpanElement>(null)\n  const notAllItemsSelected = useMemo(() => {\n    if (multiPageSelectionAllowed && typeof totalCount === 'number') {\n      return selectedCount < Math.max(totalCount, countOnPage)\n    }\n    return selectedCount < countOnPage\n  }, [countOnPage, multiPageSelectionAllowed, selectedCount, totalCount])\n  const isIndeterminate = anyItemsSelected && notAllItemsSelected\n  const units = selectedCount === 1 ? singularUnits : pluralUnits\n  const suffix = typeof totalCount === 'number' ? `of ${totalCount} selected` : 'selected'\n  const srString = `${selectedCount} ${units} ${suffix}`\n\n  const handleBulkSelectToggle = useCallback(() => {\n    if (!onToggle) return\n\n    if (isIndeterminate) {\n      onToggle(false)\n    } else {\n      onToggle(!isSelectAllChecked)\n    }\n  }, [isIndeterminate, isSelectAllChecked, onToggle])\n\n  useEffect(() => {\n    srRef.current && announceFromElement(srRef.current)\n  }, [srRef, srString])\n\n  if (!isSelectable) return null\n\n  const checkboxId = `${idPrefix}-list-view-select-all`\n\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      handleBulkSelectToggle()\n    }\n  }\n\n  return (\n    <Box\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, className)}\n      {...testIdProps('list-view-select-all-container')}\n      id={`${idPrefix}-list-view-select-all-container`}\n    >\n      <div className={styles.formControlContainer}>\n        <FormControl id={checkboxId}>\n          <Checkbox\n            onChange={handleBulkSelectToggle}\n            value=\"default\"\n            checked={isSelectAllChecked}\n            indeterminate={isIndeterminate}\n            onKeyDown={onKeyDown}\n            tabIndex={0}\n            ref={checkboxRef}\n            {...testIdProps('select-all-checkbox')}\n          />\n          <FormControl.Label visuallyHidden {...testIdProps('select-all-label')}>\n            Select all {pluralUnits}: {title}\n          </FormControl.Label>\n        </FormControl>\n      </div>\n      <p\n        className={clsx(styles.count, anyItemsSelected ? undefined : 'sr-only')}\n        {...testIdProps('select-all-selected-count')}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={anyItemsSelected ? undefined : 'sr-only'}\n          {...testIdProps('select-all-selected-count-without-units')}\n        >\n          {selectedCount} {suffix}{' '}\n        </span>\n        <span className=\"sr-only\" ref={srRef} {...testIdProps('sr-content')}>\n          {srString}\n        </span>\n      </p>\n    </Box>\n  )\n}\n\ntry{ ListViewSelectAllCheckbox.displayName ||= 'ListViewSelectAllCheckbox' } catch {}","import {Box, Link, Octicon, Text, Heading} from '@primer/react'\nimport type {PropsWithChildren} from 'react'\nimport type {Icon} from '@primer/octicons-react'\nimport {ArrowLeftIcon} from '@primer/octicons-react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useClickAnalytics} from '@github-ui/use-analytics'\n\nexport interface OnboardingTipBannerProps {\n  link: string\n  linkText: string\n  heading: string\n  icon: Icon\n}\n\nexport function OnboardingTipBanner({\n  children,\n  link,\n  linkText,\n  heading,\n  icon,\n}: PropsWithChildren<OnboardingTipBannerProps>) {\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        gap: 3,\n        marginBottom: 3,\n        borderRadius: '2',\n        backgroundColor: 'canvas.subtle',\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'border.default',\n        padding: 3,\n      }}\n    >\n      <Box\n        {...testIdProps('growth-onboardingTipBanner-icon')}\n        sx={{\n          width: '32px;',\n          height: '32px;',\n          borderRadius: '10%',\n          bg: 'var(--display-purple-bgColor-emphasis, var(--color-scale-purple-4))',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexShrink: 0,\n        }}\n      >\n        <Octicon icon={icon} size={16} sx={{color: 'white'}} />\n      </Box>\n      <Box sx={{display: 'flex', flexDirection: 'column'}}>\n        <Link\n          {...testIdProps('tip-return-link')}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            marginBottom: '8px',\n          }}\n          onClick={() =>\n            sendClickAnalyticsEvent({\n              category: 'advanced_security_onboarding_tip_banner',\n              action: 'click_onboarding_tip_banner_return_link',\n              label: `ref_cta:${linkText};ref_loc:repo_branches_listing;`,\n            })\n          }\n          href={link}\n        >\n          <Octicon icon={ArrowLeftIcon} sx={{mr: 1}} />\n          <span>{linkText}</span>\n        </Link>\n        <Heading as=\"h3\" sx={{fontSize: 2, fontWeight: 'bold', mb: 1}}>\n          {heading}\n        </Heading>\n        <Text {...testIdProps('tip-message')} sx={{fontSize: 1, fontWeight: 'normal', color: 'fg.muted'}}>\n          {children}\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n\ntry{ OnboardingTipBanner.displayName ||= 'OnboardingTipBanner' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {useContext, forwardRef, type ForwardedRef, type ReactElement} from 'react'\nimport {\n  Link as RouterLink,\n  NavLink as RouterNavLink,\n  type LinkProps,\n  type NavLinkProps,\n  resolvePath,\n  matchRoutes,\n} from 'react-router-dom'\nimport {AppContext} from './app-context'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {PREVENT_AUTOFOCUS_KEY} from './prevent-autofocus'\n\ntype PreventAutofocusProp = {preventAutofocus?: boolean}\n\nexport const Link = forwardRef(\n  (\n    {to, reloadDocument, preventAutofocus, ...props}: LinkProps & PreventAutofocusProp,\n    ref: ForwardedRef<HTMLAnchorElement>,\n  ): ReactElement => {\n    const {routes} = useContext(AppContext)\n    const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n    reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n    return (\n      <RouterLink\n        to={to}\n        {...props}\n        state={\n          preventAutofocus\n            ? {\n                [PREVENT_AUTOFOCUS_KEY]: true,\n                ...props.state,\n              }\n            : props.state\n        }\n        reloadDocument={reloadDocument}\n        ref={ref}\n      />\n    )\n  },\n)\n\nLink.displayName = 'Link'\n\nexport const NavLink = forwardRef(function NavLink(\n  {to, reloadDocument, preventAutofocus, ...props}: NavLinkProps & PreventAutofocusProp,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n): React.ReactElement {\n  const {routes} = useContext(AppContext)\n  const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n  reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n  return (\n    <RouterNavLink\n      to={to}\n      {...props}\n      state={\n        preventAutofocus\n          ? {\n              [PREVENT_AUTOFOCUS_KEY]: true,\n              ...props.state,\n            }\n          : props.state\n      }\n      reloadDocument={reloadDocument}\n      ref={ref}\n    />\n  )\n})\n\ntry{ NavLink.displayName ||= 'NavLink' } catch {}","import {Box, sx, type SxProp, themeGet} from '@primer/react'\nimport type React from 'react'\nimport styled, {css, keyframes} from 'styled-components'\n\nexport type LoadingSkeletonProps = {\n  animationStyle?: 'wave' | 'pulse'\n  as?: string | React.ComponentType | undefined\n  height?: string\n  variant?: 'rectangular' | 'elliptical' | 'rounded' | 'pill' | 'text'\n  width?: 'random' | string\n} & SxProp\n\nconst waveAnimation = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`\nconst waveMixin = css`\n  animation: ${waveAnimation} 1.5s infinite linear;\n`\n\nconst pulseAnimation = keyframes`\n  0% {\n    opacity: .3;\n  }\n  10% {\n    opacity: 1;\n  }\n  100% {\n    opacity: .3;\n  }\n`\n\nconst pulseMixin = css`\n  animation: ${pulseAnimation} 2s infinite linear;\n`\n\nexport const LoadingSkeleton = styled(Box)<LoadingSkeletonProps>`\n  /* stylelint-disable declaration-block-no-duplicate-properties, color-named */\n  position: relative;\n  overflow: hidden;\n  mask-image: radial-gradient(white, black);\n  ${({animationStyle}) => animationStyle === 'pulse' && pulseMixin};\n  &::after {\n    ${({animationStyle}) => animationStyle !== 'pulse' && waveMixin};\n    background: linear-gradient(90deg, transparent, ${themeGet('colors.neutral.subtle')}, transparent);\n    content: '';\n    position: absolute;\n    transform: translateX(-100%); /* Avoid flash during server-side hydration */\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n  }\n  background-color: ${themeGet('colors.neutral.subtle')};\n  border-radius: ${({theme, variant}) => {\n    switch (variant) {\n      case 'rounded':\n        return themeGet('radii.1')(theme)\n      case 'pill':\n        return '100px'\n      case 'elliptical':\n        return '50%'\n      default:\n        return '0'\n    }\n  }};\n  display: block;\n  height: 1.2em;\n  ${({variant}) =>\n    variant === 'elliptical' && {\n      borderRadius: '50%',\n    }}\n  width: ${({width}) => {\n    switch (width) {\n      case 'random':\n        return `${Math.floor(Math.random() * 40 + 40)}%`\n      case 'xl':\n        return '32px'\n      case 'lg':\n        return '24px'\n      case 'md':\n        return '20px'\n      case 'sm':\n        return '16px'\n      default:\n        return width\n    }\n  }};\n  height: ${({height}) => {\n    switch (height) {\n      case 'xl':\n        return '32px'\n      case 'lg':\n        return '24px'\n      case 'md':\n        return '20px'\n      case 'sm':\n        return '16px'\n      default:\n        return height\n    }\n  }};\n  ${sx}\n`\n\ntry{ LoadingSkeleton.displayName ||= 'LoadingSkeleton' } catch {}"],"names":["sessionPromise","notify","subscribers","channel","type","data","el","dispatchEvent","CustomEvent","bubbles","cancelable","detail","name","AliveSessionProxy","subscribe","subs","added","subscriptions","add","length","worker","port","postMessage","addedChannels","Set","map","topic","redundantPresenceChannels","reduce","redundantChannels","subscription","isPresenceChannel","has","size","requestPresence","Array","from","unsubscribeAll","removed","drain","unsubscribe","updatedPresenceChannels","presenceMetadata","removeSubscribers","sendPresenceMetadataUpdate","updatePresenceMetadata","metadataUpdates","updatedChannels","update","setMetadata","channelName","channelNames","updatesForSharedWorker","push","metadata","getChannelMetadata","online","offline","hangup","receive","event","debouncedNotify","notifyPresenceDebouncedByChannel","get","debounce","debouncedEvent","delete","set","constructor","src","url","refreshUrl","sessionId","notifier","SubscriptionSet","PresenceMetadataSet","Map","SharedWorker","onmessage","connect","workerSrc","document","head","querySelector","getAttribute","alivePolicy","createScriptURL","e","InvalidSourceRelError","href","session","createSession","isSafari","window","safeStorage","getItem","_","AliveSession","addEventListener","connectWhenReady","ready","getSession","connectAliveSubscription","aliveSession","callback","Topic","parse","aliveSubscription","subscriber","subscriptionEvent","BaseAliveSession","getUrlFromRefreshUrl","fetchRefreshUrl","shared","fetchJSON","token","post","response","fetch","headers","Accept","ok","json","status","csrf","method","mode","text","queryLast","selector","list","querySelectorAll","requestUri","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","error","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","value","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","stack","frame","extensions","test","filename","function","body","Object","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","String","methodName","lineno","lineNumber","toString","colno","column","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","fuzzyFilter","items","filter","key","secondaryKey","filteredItems","i","fuzzyScore","keyScore","max","s","NO_MATCH","sort","aScore","a","bScore","b","localeCompare","o","DIRECT_MATCH","Infinity","BONUS_POINT","searchQuery","bonusForStartOrEndMatch","safeSearchQuery","trim","toLowerCase","safeText","fzyScore","score","endsWith","currentUrl","targetUrl","current","URL","origin","target","hasHash","useFeatureFlags","useAppPayload","enabled_features","useFeatureFlag","featureName","getCustomPropertiesProviders","definitions","definition","CustomPropertyFilterProvider","StaticFilterProvider","propertyName","valueType","allowedValues","displayName","priority","icon","NoteIcon","TRUE_FALSE_FILTER_VALUES","index","getFilterOptions","required","filterTypes","multiKey","multiValue","valueless","filterProviderType","FilterProviderType","Select","Text","LanguageStaticFilterProvider","values","LANGUAGES","color","POPULAR_LANGUAGES","iconColor","LANGUAGES_FILTER","description","CodeIcon","single","comma","multiComma","getAllStaticProviders","ValuesFilterProvider","REPOS_STATIC_FILTER_KEYS","REPOS_STATIC_FILTER_VALUES","is","support","ProviderSupportStatus","Deprecated","license","visibility","BooleanFilterProvider","fork","archived","mirror","sponsorable","template","ArchiveIcon","RepoForkedIcon","FileIcon","EyeIcon","FileCodeIcon","MirrorIcon","SortAscIcon","HeartIcon","RepoTemplateIcon","TelescopeIcon","VISIBILITY_FILTER_VALUES","CalendarIcon","TypographyIcon","StarIcon","IssueOpenedIcon","options","RawText","DefaultForNewReposDropDown","NewRepoDefaultRow","AppContext","createContext","useAppContext","useContext","App","children","appContextValue","useRoutePayload","Provider","RepositoryContext","useRepositoryContext","fetchInProgressStatus","org","repositoryIds","result","verifiedFetchJSON","settingsOrgSecurityProductsEnablementInProgressPath","repository_ids","fetchRefresh","settingsOrgSecurityProductsRefreshPath","dismissNoticePath","notice","props","useLocation","flash","state","variant","AlertIcon","CheckIcon","InfoIcon","PrimerFlash","sx","mb","testIdProps","Octicon","mr","ControlGroupContainer","fullWidth","border","testId","Box","borderRadius","backgroundColor","borderColor","borderTop","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","data-testid","Title","as","restProps","Heading","font","fontWeight","Description","lineHeight","margin","Custom","ToggleSwitch","PrimerToggleSwitch","Button","PrimerButton","InlineEdit","className","display","alignItems","gap","justifyContent","span","IconButton","unsafeDisableTooltip","PencilIcon","aria-label","getPaddingInlineStart","nestedLevel","slotConfig","title","custom","toggle","button","inlineEdit","StyledItemBox","styled","ItemContainerQuery","Item","disabled","slots","useSlots","paddingInlineStart","pl","pr","bg","style","py","gridTemplateColumns","columnGap","gridRow","gridColumn","marginTop","StyledLink","Link","StyledLinkItem","LinkItemContainerQuery","LinkItem","leadingIcon","position","cursor","px","mx","boxShadow","p","div","ChevronRightIcon","ControlGroup","ControlGroupDropDown","initialOptions","onSelect","setOptions","useState","buttonTestId","handleSelect","prevOptions","prevOption","selected","option","id","ActionMenu","find","Overlay","ActionList","selectionVariant","DialogContext","useDialogContext","useNewRepoPolicyDropdown","hasPublicRepos","configurationPolicy","setConfigurationPolicy","defaultForNewPublicRepos","defaultForNewPrivateRepos","newDefaultForNewPublicRepos","newDefaultForNewPrivateRepos","enforcement","SecurityConfigurationStatus","SettingValue","RequestStatus","SecurityProductAvailability","ConfirmationDialog","confirmationDialogSummary","pendingConfigurationChanges","showDefaultForNewReposDropDown","ghasPurchased","docsBillingUrl","config","public_repo_count","private_and_internal_repo_count","licenses_needed","private_and_internal_repos_count_exceeding_licenses","requestStatus","publicReposSection","li","pluralize","applyReposSection","total_repo_count","enforceReposSection","privateAndInternalReposSection","unableToCalculateLicenseMessage","licensesNeededSection","br","PrimerLink","inline","getConfirmationDialogErrors","errors","exceeded_message","additional_license_sentence","Flash","summarySection","InProgress","Spinner","Success","ul","SecuritySettingsContext","useSecuritySettingsContext","settingStatusLabel","Enabled","Disabled","NotSet","Setting","onChange","overrides","theme","useTheme","securityConfiguration","showOnly","target_type","settingStatus","width","setting","DashIcon","colors","open","fg","Dependabot","securityProducts","dependabot_alerts","availability","alertsAvailability","dependabot_updates","updatesAvailability","dependabot_vea","veaAvailability","capabilities","dependabotAlerts","alertsValue","dependabotSecurityUpdates","updatesValue","dependabotAlertsVEA","veaValue","handleSettingChange","onSettingChange","renderInlineValidation","isAvailable","Label","DependencyGraphAutosubmitActionDefaultOptions","labeled_runners","DependencyGraph","dependency_graph","dependencyGraphAvailability","configurablePerRepo","dependency_graph_autosubmit_action","autsubmitActionAvailability","dependencyGraph","dependencyGraphValue","dependencyGraphAutosubmitAction","autosubmitActionValue","dependencyGraphAutosubmitActionOptions","autosubmitActionOptions","marginY","marginBottom","fontSize","autosubmitAction","ENABLEMENT_FAILURES_MAP","entries","getFailureReasonValues","filter_token","filter_display","DEFAULT_SECURITY_CONFIGURATION_STATE","enableGHAS","codeScanning","secretScanning","secretScanningPushProtection","secretScanningValidityChecks","secretScanningNonProviderPatterns","privateVulnerabilityReporting","dialogTitleText","failureReason","reason","FailureReasonDialog","repositoryName","configurationName","setShowFailureReasonDialog","docsUrls","repositoryNameText","strong","FAILURE_DIALOG_BODY_MAP","remediations","ghasTrial","Dialog","onClose","mt","marginLeft","remediation","leadingIconWithLabelMap","attaching","ClockIcon","label","removed_by_enterprise","failed","updating","enforced","ShieldIcon","leadingIconWithLabel","Attached","failureText","RepositoryConfigurationStatus","repository","repositories","repositoryConfig","repo","security_configuration","failure_reason","showFailureReasonDialog","failureLabel","Failed","onClick","security_features_enabled","SelectedRepositoryContext","createDialogFooterButtons","cancelOnClick","confirmOnClick","confirmContent","confirmButtonType","buttonType","dialogSize","applyConfiguration","organization","navigate","source","selectedRepoIds","setNewRepoDefaults","dialogContextValue","returnTo","overrideExistingConfig","applyToAll","repositoryFilterQuery","request_payload","repository_query","override_existing_config","default_for_new_public_repos","default_for_new_private_repos","settingsOrgSecurityProductsRepositoriesApplyPath","settingsOrgSecurityProductsPath","confirmationSummary","setConfirmationDialogSummary","request","enableGhas","initialSummary","summary","summaryResult","settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath","no_configuration_only","query","enable_ghas","customSecurityConfigurations","githubRecommendedConfiguration","defaultIsSet","customConfig","selectAllStyle","padding","textDecoration","RepositoryTable","setChangesInProgress","filterQuery","searchResultsLimitExceeded","pageCount","totalRepositoryCount","isQueryLoading","useNavigate","setRepositories","setRepositoryIds","orgHasRepos","selectedReposMap","setSelectedRepos","selectedReposCount","setSelectedReposCount","useSelectedRepositoryContext","keys","Number","hasSelectedRepos","showConfirmationDialog","setShowConfirmationDialog","showUpdateFailureConfirmationDialog","setShowUpdateFailureConfirmationDialog","setPendingConfigurationChanges","showNoConfigConfirmationDialog","setshowNoConfigConfirmationDialog","useEffect","filterQueryEmpty","spinnerAction","useMemo","render","ListViewMetadata","onToggleSelectAll","isSelectAllChecked","acc","clearAllReposAsSelected","actionsLabel","actions","actionsMenuItems","setAllReposAsSelected","confirmConfigApplication","Divider","applyPendingConfigurationChanges","detachConfiguration","settingsOrgSecurityProductsRepositoriesDeletePath","inProgress","onRepoSelectToggle","useCallback","selectedRepo","otherRepos","updatedSelectedRepos","currentPageRepos","r","currentRepo","onCloseDialog","dialogName","updateFailureConfirmationDialog","footerButtons","confirmationDialog","ghasBilling","noConfigDialog","data-action-bar-item","ListView","isSelectable","titleHeaderTag","singularUnits","pluralUnits","selectedCount","totalCount","ListItem","ListItemTitle","headingSx","trailingBadges","ListItemTrailingBadge","capitalize","repoSettingsSecurityAnalysisPath","ownerLogin","linkProps","repositoryPath","owner","action","ListItemMetadata","marginRight","licenses_required","isSelected","ListItemMainContent","ListItemDescription","RelativeTime","datetime","pushed_at","Blankslate","Visual","RepoIcon","TeamFilterProvider","AsyncFilterProvider","getSuggestions","filterBlock","caretIndex","processSuggestions","processSuggestion","bind","team","combined_slug","combinedSlug","FilterValueType","Value","escapeString","ariaLabel","avatar","avatar_url","AvatarType","Team","validateValue","extractedValue","getUnescapedFilterValue","getValueRowProps","filterValue","getFilterValue","visual","GitHubAvatar","alt","minWidth","leadingVisual","filterKey","endpoint","encodePart","suggestionEndpoint","validationEndpoint","CONFIG_NAME","TasklistIcon","CONFIG_STATUS","CONFIG_STATUS_VALUES","FAILURE_REASON","CONFIG_TEAM","PeopleIcon","SearchFilter","onSubmit","customConfigurationNames","initialFilter","setQuery","getConfigurationNameOptions","element","Filter","providers","getProviders","provider","LanguageFilterProvider","hasTeams","q","flex","placeholder","FailureBanner","closeFn","failureCounts","searchFn","innerText","onDismiss","totalFailureCount","memo","failCount","pluralRepos","numberOfReasons","viewAllLink","parser","FilterQueryParser","hideTitle","failText","count","Banner","LicenseSection","licenses","setLicenses","licenseSummary","setLicenseSummary","fetchLicenseSummaryFailed","setFetchLicenseSummaryFailed","controllerRef","useRef","abort","AbortController","signal","fetchLicenseSummary","settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath","include_license_overview","failedToFetchLicenses","licenses_freed","business","consumedSeats","remainingSeats","allowanceExceeded","exceededSeats","hasUnlimitedSeats","licensesExceededBanner","ghasText","businessName","licenseSummaryText","licenseContent","RepositorySection","hideFailureCounts","setHideFailureCounts","customPropertySuggestions","initialPageCount","initialTotalRepositoryCount","tableRef","currentPage","setCurrentPage","queryParams","setQueryParams","URLSearchParams","setFilterQuery","setIsQueryLoading","setPageCount","setTotalRepositoryCount","selectedRepositoryContextValue","setSearchResultsLimitExceeded","failureCountsPresent","showFailureBanner","setShowFailureBanner","previewNext","countsPresent","submitSearchQuery","raw","settingsOrgSecurityProductsRepositories","fetchData","resultJson","paginateRepositories","page","queryParamsString","urlParams","handlePageChange","newPage","preventDefault","scrollIntoView","behavior","block","ref","Pagination","onPageChange","marginPageCount","surroundingPageCount","Subhead","h2","bannerText","linkText","linkHref","dismissible","bannerType","to","ml","XIcon","BlankSlate","header","displayButton","appContext","data-hpc","settingsOrgSecurityConfigurationsNewPath","ApplyToButton","configuration","RowLabel","SecurityConfigurationRow","isLast","isGithubRecommended","repositories_count","linkPath","settingsOrgSecurityConfigurationsViewPath","settingsOrgSecurityConfigurationsEditPath","boxClassNames","SecurityConfigurationTable","searchParams","useSearchParams","configurationsCount","shouldSetNewRepoDefaults","tip","OrganizationSettingsSecurityProducts","initialGithubRecommendedConfiguration","initialCustomSecurityConfigurations","showInfoBanner","initialShowInfoBanner","changesInProgress","changes","initialRepositories","initialFailureCounts","initialLicenses","setShowInfoBanner","setGithubRecommendedConfiguration","setCustomSecurityConfigurations","setFailureCounts","repositoryContextValue","allSecurityProductsUnavailable","every","product","Unavailable","configurationsAbsent","blankSlateProps","createConfig","debouncedRefresh","useDebounce","updatedGithubRecommendedConfiguration","updatedSecurityConfigurations","prevConfig","prevRepositories","updatedRepositories","updatedRepo","findIndex","leading","trailing","handleAliveEvent","useAlive","inProgressText","handleDismiss","verifiedFetch","OnboardingTipBanner","link","orgOnboardingAdvancedSecurityPath","ShieldCheckIcon","heading","validationIconMap","success","CheckCircleFillIcon","AlertFillIcon","warning","validationColorMap","Validation","validationStatus","IconComponent","fgColor","fill","CodeScanning","code_scanning","ghasFreeForPublicRepos","actionsAreBilled","defaultSetupValue","handleGhasSettingChange","showTip","SecretScanning","secret_scanning","secretScanningValue","validityChecksValue","pushProtectionValue","nonProviderPatternsValue","featureFlags","validityChecksEnabled","AdvancedSecurity","handleOnSelectGHAS","enabled","ghesGhasNotFree","enablementStatus","enablementStatusShowOnly","PrivateVulnerabilityReporting","private_vulnerability_reporting","settingValue","SecurityConfigurationPolicySection","my","enforcementRow","SecurityConfigurationFooterSection","isNew","isShow","securityConfigurationSettings","configurationDescription","newRepoDefaults","updateErrors","clearState","setFlashMessage","saving","setSaving","dialogType","setDialogType","repoCount","setRepoCount","thisConfigSetAsDefault","thisID","areGHASSettingsEnabled","existingPublicDefault","newPublicRepoDefaultConfig","existingPrivateDefault","newPrivateRepoDefaultConfig","scrollToTop","scrollTo","top","save","configName","configDescription","createBody","secretScanningAvailable","Available","dependencyGraphAvailable","dependencyGraphAutoSubmitActionAvailable","dependabotAlertsAvailable","dependabotUpdatesAvailable","codeScanningAvailable","privateVulnerabilityReportingAvailable","dependency_graph_autosubmit_action_options","dependabot_security_updates","secret_scanning_validity_checks","secret_scanning_push_protection","secret_scanning_non_provider_patterns","settingsOrgSecurityConfigurationsCreatePath","settingsOrgSecurityConfigurationsUpdatePath","saveErrors","destroy","getRepoCount","settingsOrgSecurityProductsRepositoriesCount","repo_count","changesReplaceExistingDefaults","changesPublicDefault","changesPrivateDefault","deleteDialogDefaultString","dialogReplaceDefaultString","prefix","output","sentenceFor","sentencePrefix","changesDefaultForPublic","changesDefaultForPrivate","existingPublicRepoDefaultname","existingPrivateRepoDefaultName","existingDefaultIsTheSameForPublicAndPrivate","concat","dialogProps","updateFailed","create","handleButtonClick","handleCancelConfigClick","dialogMessages","flexDirection","renderGHASMessage","SecuritySettingsMap","parents","ghasSettings","enable","settings","securityConfigurationSettingsReducer","enableVEAIfRequired","updateSecurityConfigurationSettings","feature","updatedValue","updatedOptions","oldSettings","isChildFeature","isParentFeature","newSettings","parentFeature","childFeature","getInitialState","payload","isGHASAvailable","SecurityConfiguration","setErrors","flashMessage","configurationNameRef","configurationDescriptionRef","dispatchSettings","useReducer","join","securitySettingsContextValue","debouncedUpdateChangesInProgress","newState","history","replaceState","removeEventListener","securityConfigurationTitle","renderFormValidation","readableErrors","FormControl","form","TextInput","defaultValue","newErrors","registerReactAppFactory","routes","jsonRoute","path","Component","policyName","TrustedTypesPolicyError","ghTrustedTypes","createPolicy","trustedTypesPolicy","apply","policy","isStaff","fallback","fallbackOnError","sanitize","silenceErrorReporting","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","Promise","resolve","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","slice","sendEvent","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createHTML","createScript","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","AliveTestProvider","AliveTestContext","testSubscribeToAlive","signedChannel","initialMessages","users","setTimeout","dispatchAliveTestMessage","isMounted","useIsMounted","unsubscribeFromAlive","closed","subscribeToAlive","resp","useAnalytics","contextData","AnalyticsContext","appName","category","sendAnalyticsEvent","eventType","react","useClickAnalytics","sendClickAnalyticsEvent","fn","waitMs","maxWait","onChangeBehavior","fnRef","useTrackingRef","debouncedFn","args","React","reactRouterNavigate","useReactRouterNavigate","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","startTransition","PREVENT_AUTOFOCUS_KEY","turbo","skipTurbo","createHref","softNavigate","turboSoftNavigate","useReactRouterSearchParams","setSearchParams","nextInit","newSearchParams","createSearchParams","useLayoutEffect","init","assertRelativePathOrSameOrigin","reactFetch","reactFetchJSON","forwardRef","otherProps","avatarUrl","ssrSafeLocation","Avatar","clsx","styles","container","useListViewVariant","childrenArray","Children","toArray","titleIndex","child","isValidElement","nonTitleChildren","inner","compact","alignment","primary","secondary","alignRight","containerStyle","containerSx","containerClassName","data-listview-component","TitleTag","ListViewAnnouncements","ListFilters","ListViewActionBar","density","densityToggle","nonCollapsibleActions","GitHubUiActionBar","densityStyles","ListViewSectionFilters","links","sectionFilterLink","ListViewSelectAllCheckbox","onToggle","useListViewTitle","countOnPage","anyItemsSelected","useListViewSelection","multiPageSelectionAllowed","useListViewMultiPageSelection","idPrefix","useId","checkboxRef","srRef","notAllItemsSelected","isIndeterminate","units","suffix","srString","handleBulkSelectToggle","announceFromElement","checkboxId","formControlContainer","Checkbox","checked","indeterminate","onKeyDown","tabIndex","visuallyHidden","aria-hidden","assistiveAnnouncement","sectionFilters","actionsStyle","actionsSx","actionsClassName","actionBarProps","useListViewId","setHasMetadataTitle","useNextHeaderTag","announceRef","isArray","spacious","role","aria-live","aria-atomic","borderWidth","borderStyle","height","flexShrink","ArrowLeftIcon","shouldNavigateOnError","transitionType","coreLoader","fetchPath","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData","reloadDocument","RouterLink","NavLink","RouterNavLink","waveAnimation","keyframes","waveMixin","css","pulseAnimation","pulseMixin","LoadingSkeleton","animationStyle","themeGet","floor","random"],"sourceRoot":""}