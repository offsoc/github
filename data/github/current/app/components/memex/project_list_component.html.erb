<% if header.present? %>
  <%= header %>
<% end %>
<% unless (org_empty? || user_empty?) && !has_search_filter? %>
  <%= controls %>
<% end %>
<%= render Primer::Box.new(border: true, border_radius: 2, id: "memexes-results", data: { hpc: true }) do %>
  <h2 class="sr-only">Search results</h2>
  <%= render Primer::Beta::Text.new(hidden: true, id: "projects-search-results-text") do %>
    <%= @open_memex_count %> open and <%= @closed_memex_count %> closed projects found.
  <% end %>
  <%= render Primer::Beta::BorderBox.new(border_top: 0, border_left: 0, border_right: 0, border_bottom: @projects.count.zero? ? 0 : nil) do |c| %>
    <% unless org_projects_disabled? || has_no_projects? %>
      <% c.with_header(border_bottom: 0) do |h| %>
        <% if @is_recent_selected %>
          <%= render(Primer::Beta::Text.new(font_weight: :bold)) { "#{@projects.count} recently viewed" } %>
        <% else %>
          <%= render Memex::ProjectList::HeaderComponent.new(
            open_memex_count: @open_memex_count,
            closed_memex_count: @closed_memex_count,
            parsed_query: @parsed_query,
            open_projects_path: open_projects_path,
            closed_projects_path: closed_projects_path,
            projects_path: projects_path
          ) %>
        <% end %>
      <% end %>
    <% end %>
    <% if @projects.empty? %>
      <% c.with_row(border: :top) do %>
        <% if blankslate.nil? %>
          <%= render Memex::ProjectList::Blankslate::BlankslateContainerComponent.new(
            context: @context,
            parsed_query: @parsed_query,
            owner: @owner,
            is_org_empty: org_empty?,
            is_user_empty: user_empty?,
            has_no_projects: has_no_projects?,
            is_org_projects_disabled: org_projects_disabled?,
            has_search_filter: has_search_filter?,
            team: @team
          ) %>
        <% else %>
          <%= blankslate %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
  <% unless org_projects_disabled? %>
    <%= render Memex::ProjectList::ItemsContainerComponent.new(
      context: @context,
      projects: @projects,
      owner: @owner,
      is_recent_selected: @is_recent_selected,
      has_next_page: @has_next_page,
      query: query,
      cursor: @cursor,
      sort_query_cursor: @sort_query_cursor,
      load_more_path: @load_more_path,
      team: @team,
      write_accessible_project_ids: @write_accessible_project_ids,
    ) %>
  <% end %>
<% end %>
