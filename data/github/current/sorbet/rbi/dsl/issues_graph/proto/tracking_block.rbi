# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `IssuesGraph::Proto::TrackingBlock`.
# Please instead update this file by running `bin/tapioca dsl IssuesGraph::Proto::TrackingBlock`.

class IssuesGraph::Proto::TrackingBlock
  sig do
    params(
      issues: T.nilable(T.any(Google::Protobuf::RepeatedField[IssuesGraph::Proto::Issue], T::Array[IssuesGraph::Proto::Issue])),
      key: T.nilable(IssuesGraph::Proto::Key),
      name: T.nilable(String),
      order: T.nilable(Integer)
    ).void
  end
  def initialize(issues: T.unsafe(nil), key: nil, name: nil, order: nil); end

  sig { void }
  def clear_issues; end

  sig { void }
  def clear_key; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_order; end

  sig { returns(Google::Protobuf::RepeatedField[IssuesGraph::Proto::Issue]) }
  def issues; end

  sig { params(value: Google::Protobuf::RepeatedField[IssuesGraph::Proto::Issue]).void }
  def issues=(value); end

  sig { returns(T.nilable(IssuesGraph::Proto::Key)) }
  def key; end

  sig { params(value: T.nilable(IssuesGraph::Proto::Key)).void }
  def key=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def order; end

  sig { params(value: Integer).void }
  def order=(value); end
end
