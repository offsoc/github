# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Codespaces::V0::Entities::Codespace`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Codespaces::V0::Entities::Codespace`.

class Hydro::Schemas::Github::Codespaces::V0::Entities::Codespace
  sig do
    params(
      billable_owner_id: T.nilable(Integer),
      copilot_workspace_id: T.nilable(String),
      devcontainer_path: T.nilable(String),
      guid: T.nilable(String),
      id: T.nilable(Integer),
      is_copilot_demo_repository: T.nilable(T::Boolean),
      location: T.nilable(String),
      name: T.nilable(String),
      oid: T.nilable(String),
      owner_id: T.nilable(Integer),
      pull_request_id: T.nilable(Integer),
      ref: T.nilable(String),
      repository_global_relay_id: T.nilable(String),
      repository_id: T.nilable(Integer),
      sku: T.nilable(String),
      template_repository_id: T.nilable(Integer),
      tier: T.nilable(Integer),
      vso_environment: T.nilable(String)
    ).void
  end
  def initialize(billable_owner_id: nil, copilot_workspace_id: nil, devcontainer_path: nil, guid: nil, id: nil, is_copilot_demo_repository: nil, location: nil, name: nil, oid: nil, owner_id: nil, pull_request_id: nil, ref: nil, repository_global_relay_id: nil, repository_id: nil, sku: nil, template_repository_id: nil, tier: nil, vso_environment: nil); end

  sig { returns(Integer) }
  def billable_owner_id; end

  sig { params(value: Integer).void }
  def billable_owner_id=(value); end

  sig { void }
  def clear_billable_owner_id; end

  sig { void }
  def clear_copilot_workspace_id; end

  sig { void }
  def clear_devcontainer_path; end

  sig { void }
  def clear_guid; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_copilot_demo_repository; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_oid; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_pull_request_id; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository_global_relay_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_sku; end

  sig { void }
  def clear_template_repository_id; end

  sig { void }
  def clear_tier; end

  sig { void }
  def clear_vso_environment; end

  sig { returns(String) }
  def copilot_workspace_id; end

  sig { params(value: String).void }
  def copilot_workspace_id=(value); end

  sig { returns(String) }
  def devcontainer_path; end

  sig { params(value: String).void }
  def devcontainer_path=(value); end

  sig { returns(String) }
  def guid; end

  sig { params(value: String).void }
  def guid=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_copilot_demo_repository; end

  sig { params(value: T::Boolean).void }
  def is_copilot_demo_repository=(value); end

  sig { returns(String) }
  def location; end

  sig { params(value: String).void }
  def location=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def oid; end

  sig { params(value: String).void }
  def oid=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(Integer) }
  def pull_request_id; end

  sig { params(value: Integer).void }
  def pull_request_id=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(String) }
  def repository_global_relay_id; end

  sig { params(value: String).void }
  def repository_global_relay_id=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def sku; end

  sig { params(value: String).void }
  def sku=(value); end

  sig { returns(Integer) }
  def template_repository_id; end

  sig { params(value: Integer).void }
  def template_repository_id=(value); end

  sig { returns(Integer) }
  def tier; end

  sig { params(value: Integer).void }
  def tier=(value); end

  sig { returns(String) }
  def vso_environment; end

  sig { params(value: String).void }
  def vso_environment=(value); end
end
