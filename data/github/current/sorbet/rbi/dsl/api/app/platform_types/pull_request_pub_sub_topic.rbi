# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::PullRequestPubSubTopic`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::PullRequestPubSubTopic`.

module Api::App::PlatformTypes::PullRequestPubSubTopic
  sig { returns(T::Boolean) }
  def base_ref?; end

  sig { returns(T::Boolean) }
  def commit_head_sha?; end

  sig { returns(T::Boolean) }
  def deployed?; end

  sig { returns(T::Boolean) }
  def git_merge_state?; end

  sig { returns(T::Boolean) }
  def head_ref?; end

  sig { returns(T::Boolean) }
  def merge_queue?; end

  sig { returns(T::Boolean) }
  def mergeability?; end

  sig { returns(T::Boolean) }
  def presence?; end

  sig { returns(T::Boolean) }
  def review_state?; end

  sig { returns(T::Boolean) }
  def state?; end

  sig { returns(T::Boolean) }
  def timeline?; end

  sig { returns(T::Boolean) }
  def updated?; end

  sig { returns(T::Boolean) }
  def workflows?; end

  BASE_REF = T.let("BASE_REF", String)
  COMMIT_HEAD_SHA = T.let("COMMIT_HEAD_SHA", String)
  DEPLOYED = T.let("DEPLOYED", String)
  GIT_MERGE_STATE = T.let("GIT_MERGE_STATE", String)
  HEAD_REF = T.let("HEAD_REF", String)
  MERGEABILITY = T.let("MERGEABILITY", String)
  MERGE_QUEUE = T.let("MERGE_QUEUE", String)
  PRESENCE = T.let("PRESENCE", String)
  REVIEW_STATE = T.let("REVIEW_STATE", String)
  STATE = T.let("STATE", String)
  TIMELINE = T.let("TIMELINE", String)
  UPDATED = T.let("UPDATED", String)
  WORKFLOWS = T.let("WORKFLOWS", String)
end
