# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::DeadLetter`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::DeadLetter`.

class Hydro::Schemas::Github::V1::DeadLetter
  sig do
    params(
      envelope: T.nilable(Hydro::Schemas::Hydro::V1::Envelope),
      error_backtrace: T.nilable(String),
      error_class: T.nilable(String),
      error_message: T.nilable(String),
      payload: T.nilable(String),
      retries: T.nilable(Integer)
    ).void
  end
  def initialize(envelope: nil, error_backtrace: nil, error_class: nil, error_message: nil, payload: nil, retries: nil); end

  sig { void }
  def clear_envelope; end

  sig { void }
  def clear_error_backtrace; end

  sig { void }
  def clear_error_class; end

  sig { void }
  def clear_error_message; end

  sig { void }
  def clear_payload; end

  sig { void }
  def clear_retries; end

  sig { returns(T.nilable(Hydro::Schemas::Hydro::V1::Envelope)) }
  def envelope; end

  sig { params(value: T.nilable(Hydro::Schemas::Hydro::V1::Envelope)).void }
  def envelope=(value); end

  sig { returns(String) }
  def error_backtrace; end

  sig { params(value: String).void }
  def error_backtrace=(value); end

  sig { returns(String) }
  def error_class; end

  sig { params(value: String).void }
  def error_class=(value); end

  sig { returns(String) }
  def error_message; end

  sig { params(value: String).void }
  def error_message=(value); end

  sig { returns(String) }
  def payload; end

  sig { params(value: String).void }
  def payload=(value); end

  sig { returns(Integer) }
  def retries; end

  sig { params(value: Integer).void }
  def retries=(value); end
end
