# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::Blobs::V1::BlobOriginItem`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::Blobs::V1::BlobOriginItem`.

class GitHub::Spokes::Proto::Blobs::V1::BlobOriginItem
  sig do
    params(
      blob_oid: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      commit_oid: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      path: T.nilable(GitHub::Spokes::Proto::Types::V1::Path)
    ).void
  end
  def initialize(blob_oid: nil, commit_oid: nil, path: nil); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def blob_oid; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def blob_oid=(value); end

  sig { void }
  def clear_blob_oid; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_path; end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def commit_oid; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def commit_oid=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::Path)) }
  def path; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::Path)).void }
  def path=(value); end
end
