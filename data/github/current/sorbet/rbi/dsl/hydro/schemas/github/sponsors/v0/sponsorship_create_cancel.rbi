# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::SponsorshipCreateCancel`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::SponsorshipCreateCancel`.

class Hydro::Schemas::Github::Sponsors::V0::SponsorshipCreateCancel
  sig do
    params(
      action: T.nilable(T.any(Symbol, Integer)),
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      marketplace_listing: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      sponsorship: T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship),
      tier: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan)
    ).void
  end
  def initialize(action: nil, actor: nil, marketplace_listing: nil, request_context: nil, sponsorship: nil, tier: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def action=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_marketplace_listing; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_sponsorship; end

  sig { void }
  def clear_tier; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing)) }
  def marketplace_listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing)).void }
  def marketplace_listing=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship)) }
  def sponsorship; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship)).void }
  def sponsorship=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan)) }
  def tier; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan)
    ).void
  end
  def tier=(value); end
end
