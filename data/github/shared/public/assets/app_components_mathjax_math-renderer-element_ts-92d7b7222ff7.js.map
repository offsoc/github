{"version":3,"file":"chunk-app_components_mathjax_math-renderer-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/mini-throttle/dist/index.js","app/components/mathjax/usage-tracker.ts","app/components/mathjax/math-renderer-element.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","node_modules/@github/memoize/dist/esm/index.js"],"sourcesContent":["export function throttle(callback, wait = 0, { start = true, middle = true, once = false } = {}) {\n    let innerStart = start;\n    let last = 0;\n    let timer;\n    let cancelled = false;\n    function fn(...args) {\n        if (cancelled)\n            return;\n        const delta = Date.now() - last;\n        last = Date.now();\n        if (start && middle && delta >= wait) {\n            innerStart = true;\n        }\n        if (innerStart) {\n            innerStart = false;\n            callback.apply(this, args);\n            if (once)\n                fn.cancel();\n        }\n        else if ((middle && delta < wait) || !middle) {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                last = Date.now();\n                callback.apply(this, args);\n                if (once)\n                    fn.cancel();\n            }, !middle ? wait : wait - delta);\n        }\n    }\n    fn.cancel = () => {\n        clearTimeout(timer);\n        cancelled = true;\n    };\n    return fn;\n}\nexport function debounce(callback, wait = 0, { start = false, middle = false, once = false } = {}) {\n    return throttle(callback, wait, { start, middle, once });\n}\n","/**\n * UsageTracker is a thin wrapper around the Map class\n * suitable for keeping count of numerical values across\n * catlyst component instances.\n *\n * We are using this alongside the math-render-element as a static\n * way of tracking overall macro counts for a single pipeline run.\n *\n * Because this is a long-lived object, values associated with a pipeline\n * id must be cleared when the component is unmounted from the DOM.\n */\nclass UsageTracker {\n  private usage: Map<string, number>\n  constructor() {\n    this.usage = new Map()\n  }\n\n  get(key: string) {\n    return this.usage.get(key) ?? 0\n  }\n\n  update(key: string, value = 0) {\n    const currentValue = this.get(key)\n    this.usage.set(key, value + (currentValue ?? 0))\n  }\n\n  clear(key: string) {\n    this.usage.delete(key)\n  }\n\n  // total provides a count of all instances of math usage across all pipeline\n  // runs we've registered with the tracker.\n  total() {\n    return Array.from(this.usage.entries()).reduce((sum, [, time]) => {\n      sum += time\n      return sum\n    }, 0)\n  }\n}\n\nexport default UsageTracker\n","import type Dompurify from 'dompurify'\nimport {html, render} from 'lit-html'\nimport {controller, attr} from '@github/catalyst'\nimport {sendStats} from '@github-ui/stats'\nimport UsageTracker from './usage-tracker'\n\ndeclare global {\n  interface Window {\n    MathJax?: MathJaxConfig\n  }\n}\n\nconst MAX_ALLOWED_MACROS = 100\n/**\n * While each instance of a math renderer element is limited\n * to 100 macros, there is nothing preventing users with malicious intent\n * from authoring many comments, each with 100 macros. This value allows\n * us to limit the total number of macros on any given page.\n */\nconst GLOBAL_MAX_ALLOWED_MACROS = 2000\n\n// eslint-disable-next-line i18n-text/no-en\nconst BAD_EXPRESSION_ERROR = 'Unable to render expression.'\nconst INLINE_DELIMITER = '$'\nconst DISPLAY_DELIMITER = '$$'\nconst STATIC_RESOURCE_ATTR = 'data-static-url'\nconst MATHJAX_PREFIX_REGEX = new RegExp('^(TEX|mjx|MJX)-')\nconst DIMENSION_ARG_MACROS = [\n  'hskip',\n  'hspace',\n  'raise',\n  'mspace',\n  'mskip',\n  'kern',\n  'lower',\n  'above',\n  'mkern',\n  'moveleft',\n  'moveright',\n  'rule',\n  'Rule',\n  'space',\n  'Space',\n]\nconst DISALLOWED_MACROS = [\n  'DeclareMathOperator',\n  'DeclarePairedDelimiters',\n  'renewtagform',\n  'newtagform',\n  'colorbox',\n  'fcolorbox',\n  'hphantom',\n  'vphantom',\n  'phantom',\n  'operatorname',\n  'Newextarrow',\n  'definecolor',\n  'mathchoice',\n  'unicode',\n  'mmlToken',\n]\n\n// MathML parsing error messages that we want to replace with a generic error message\nconst MATHML_PARSING_ERROR_MESSAGES = ['Misplaced &']\n\n// Maps possible dimension units that can be passed to LaTeX macros to the maximum value (absolute) that we allow.\nconst unitToMaxVal: Record<string, number> = {\n  em: 2,\n  pt: 20,\n  pc: 0.75,\n  ex: 2.5,\n}\n\nconst macrosWithDimensionArgs = DIMENSION_ARG_MACROS.join('|')\nconst unitTypes = Object.keys(unitToMaxVal).join('|')\nconst dimensionRegex = '-?\\\\d+.?\\\\d*?'\nconst macrosWithDimensionsRegex = new RegExp(`(${macrosWithDimensionArgs})({${dimensionRegex}(${unitTypes})})+`, 'g')\n\nconst purifyConfigs = {\n  USE_PROFILES: {mathMl: true},\n  ADD_ATTR: ['jax', 'unselectable', 'class', 'style', 'size', 'justify', 'space'],\n  KEEP_CONTENT: true,\n  CUSTOM_ELEMENT_HANDLING: {\n    tagNameCheck: MATHJAX_PREFIX_REGEX,\n    attributeNameCheck: MATHJAX_PREFIX_REGEX,\n    allowCustomizedBuiltInElements: true,\n  },\n}\n\nconst macroUsageTracker = new UsageTracker()\n\nlet DOMPurify: null | {default: typeof Dompurify} = null\nlet configurationPromise: Promise<boolean> | null = null\n\n/**\n * speech-rule-engine attempts to load its mathmaps from a CDN.\n * We do not want to allow this, so we have to manually override the location\n * of the JSON mathmap file.\n */\nfunction configureSRE() {\n  // eslint-disable-next-line github/no-dynamic-script-tag\n  const script = document.createElement('script')\n  script.setAttribute('type', 'text/x-sre-config')\n  script.textContent = `{ \"json\": \"/static/javascripts/mathjax/mathmaps\"}`\n  document.head.appendChild(script)\n}\n\nasync function configureMathJax({staticURL}: {staticURL: string}) {\n  configurationPromise ||= new Promise(async resolve => {\n    window.MathJax = {\n      ...(window.MathJax || {}),\n      loader: {\n        paths: {\n          mathjax: `${staticURL}/javascripts/mathjax`,\n        },\n        load: ['ui/safe'],\n      },\n      tex: {\n        inlineMath: [[INLINE_DELIMITER, INLINE_DELIMITER]],\n        displayMath: [[DISPLAY_DELIMITER, DISPLAY_DELIMITER]],\n        packages: {'[-]': ['noerrors', 'bbox', 'html', 'require', 'newcommand', 'action', 'colortbl']},\n        maxMacros: 1000,\n      },\n      chtml: {\n        fontURL: `${staticURL}/fonts/mathjax`,\n      },\n      startup: {\n        typeset: false,\n        ready() {\n          // MathJax has loaded all needed components\n          const mathjax = window.MathJax as MathJaxConfig\n\n          // Initializes the MathJax internal objects and creates typesetting and conversion methods\n          mathjax.startup.defaultReady!()\n\n          // Disable SVG option from context menu\n          const menu = mathjax.startup.document!.menu.menu\n          const renderer = menu.find('Renderer')\n          renderer?.disable()\n\n          for (const jax of mathjax.startup.document!.inputJax) {\n            jax.preFilters.add(async ({math: mathObj}) => {\n              for (const macro of DISALLOWED_MACROS) {\n                if (mathObj.math.includes(`\\\\${macro}`)) {\n                  mathObj.math = `\\\\text{${macro} macro is not supported}`\n                }\n              }\n\n              return true\n            }, -1000)\n          }\n\n          const safe = mathjax.startup.document?.safe\n\n          if (safe) {\n            safe.filterAttributes.set('fontfamily', 'filterSemiColon')\n            safe.filterAttributes.set('fontstyle', 'filterSemiColon')\n            safe.filterAttributes.set('fontweight', 'filterSemiColon')\n            safe.filterMethods.filterSemiColon = function (_unused, input) {\n              const [split] = input.split(/;/)\n              return split\n            }\n          }\n        },\n      },\n      options: {\n        enableMenu: true,\n        renderActions: {\n          addMenu: [100000],\n        },\n        safeOptions: {\n          allow: {\n            URLs: 'none',\n            classes: 'none',\n            cssIDs: 'none',\n            styles: 'safe',\n          },\n          // Largest padding/border/margin value allowed, in ems\n          // Note: There is a bug in mathjax that appears to prevent this setting from working correctly\n          lengthMax: 2,\n          // an emtpy object here is equivalent to setting all style properties to false, but is required so that lengthMax is respected.\n          safeStyles: {},\n          styleLengths: {},\n        },\n      },\n    }\n\n    configureSRE()\n\n    try {\n      await import('mathjax/es5/tex-chtml-full')\n      await window.MathJax.startup.promise\n      DOMPurify = await import('dompurify')\n      DOMPurify?.default.addHook('uponSanitizeAttribute', sanitizeClass)\n      resolve(true)\n    } catch (e) {\n      // Catch if import fails\n      resolve(false)\n    }\n  })\n\n  const resolution = await configurationPromise\n\n  // Retries configuring MathJax on soft nav if imports fail\n  if (!resolution) {\n    configurationPromise = null\n  }\n}\n\n// Workaround to force DOMPurify to not remove `columnalign` attributes from MathML elements\nfunction allowMathMlAttributes(el: Element, data: DOMPurify.SanitizeAttributeHookEvent): void {\n  const allowedTags = ['mtable']\n  const allowedAttributes = ['columnalign']\n\n  if (allowedTags.includes(el.tagName) && allowedAttributes.includes(data.attrName)) {\n    data.keepAttr = true\n    data.forceKeepAttr = true\n  }\n}\n\nfunction sanitizeClass(_: Element, data: DOMPurify.SanitizeAttributeHookEvent): void {\n  // only look at class attributes\n  if (data.attrName !== 'class') {\n    return\n  }\n\n  // remove css classes that don't match the MathJax prefix pattern or `MathJax`\n  data.attrValue = data.attrValue\n    .split(' ')\n    .filter(c => MATHJAX_PREFIX_REGEX.test(c) || c === 'MathJax')\n    .join(' ')\n\n  // if all class values are filtered, remove the attribute entirely\n  if (data.attrValue === '') {\n    data.keepAttr = false\n  }\n}\n\n@controller\nexport class MathRendererElement extends HTMLElement {\n  public staticURL: string\n  private runId: string\n\n  @attr mathmlEnabled: boolean = false\n\n  /**\n   * Create a parallel document node that LaTeX content is injected into.\n   * This content will be sanitized and typeset before being re-injected back\n   * into the primary document node.\n   *\n   * We do this to mitigate potentiall XSS and UI redressing attacks that can potentially\n   * occur with MathJax's in-place typesetting of LaTeX content.\n   **/\n  private tempDocumentContentForSanitization() {\n    // insert LaTeX into a parallel document to avoid potentially\n    // introducing xss vectors\n    const doc = document.implementation.createHTMLDocument('')\n\n    doc.open()\n    doc.write(`\n      <html>\n        <body>\n          ${this.textContent}\n        </body>\n      </html>\n    `)\n    doc.close()\n\n    return doc.body.textContent ?? ''\n  }\n\n  private childIsNode(node: Node | null) {\n    return Boolean(node && node.nodeType === Node.ELEMENT_NODE)\n  }\n\n  private isGitHubError(node: Element | null) {\n    return node && node.classList.contains('flash-error')\n  }\n\n  private isMathJaxContainer(node: Element | null) {\n    // Check whether math being parsed already exists within a MJX-CONTAINER (was already processed by MathJax)\n    // or a MATH-RENDERER element (just in case math elements are mistakenly nested somehow)\n    return node && (node.nodeName === 'MJX-CONTAINER' || node.nodeName === 'MATH-RENDERER')\n  }\n\n  private wasPreviouslyRendered() {\n    const node = this.firstElementChild\n    return this.isGitHubError(node) || this.isMathJaxContainer(node)\n  }\n\n  private getMathJaxError(node: HTMLElement) {\n    if (!node) {\n      return null\n    }\n\n    const selector = 'merror'\n    const errorNode = node.querySelector(selector)\n    let errorMessage = errorNode?.textContent ?? null\n\n    if (errorMessage) {\n      // Replace MathML's weird parsing error messages with a generic error message\n      const containsParsingError = MATHML_PARSING_ERROR_MESSAGES.some(\n        (mjxErrorMessage: string) => errorMessage?.includes(mjxErrorMessage),\n      )\n\n      if (containsParsingError) {\n        errorMessage = BAD_EXPRESSION_ERROR\n      }\n    }\n\n    return errorMessage\n  }\n\n  private renderError({msg, raw}: {msg?: string | null; raw?: string} = {}) {\n    const errorMsg = msg ?? BAD_EXPRESSION_ERROR\n    const rawContent = raw ?? this.textContent\n\n    if (!rawContent) {\n      return render(html`<div class=\"flash flash-error\">${errorMsg}</div>`, this)\n    }\n\n    return render(\n      html`<div class=\"flash flash-error\">${errorMsg}</div>\n        <br />\n        <pre>${rawContent}</pre>`,\n      this,\n    )\n  }\n\n  // certain macros allow the user to alter other parts of the page, such as by\n  // allowing custom operators to override existing ones.  We disallow these.\n  private checkDisallowedMacros() {\n    const disallowedMacrosFound = []\n    for (const macro of DISALLOWED_MACROS) {\n      if (this.textContent.includes(`\\\\${macro}`)) {\n        disallowedMacrosFound.push(macro)\n      }\n    }\n    return disallowedMacrosFound\n  }\n\n  // Effectively does what the lengthMax attribute of safeOptions is supposed to but evidently does not;\n  // limits the value of numeric arguments to macros that can change padding or spacing, such as \\hskip or \\raise\n  // such that users cannot alter GitHub's UI.\n  private enforcePaddingLimit(textContent: string) {\n    // match all macros that can change padding or spacing (listed in DIMENSION_ARG_MACROS)\n    return textContent.replace(macrosWithDimensionsRegex, (match, other) => {\n      const dimensionAndUnitRegex = new RegExp(`(${dimensionRegex}(${unitTypes}))+`, 'g')\n      const matches = match?.match(dimensionAndUnitRegex)\n      if (!matches || !matches.length) {\n        return match\n      }\n      // iterate through each dimension argument and clamp its value according to the allowed max value for its unit.\n      const output = matches.map(m => {\n        const unit = m.split(new RegExp(`(${unitTypes})`))\n\n        if (!unit.length) {\n          return m\n        }\n\n        const numericArg = Number(unit[0])\n        const unitType = unit[1] ?? ''\n\n        if (!unitType) {\n          return m\n        }\n\n        const maxVal = unitToMaxVal[unitType] ?? 0\n        if (numericArg < -maxVal || numericArg > maxVal) {\n          return `{${maxVal}${unitType}}`\n        } else {\n          return `{${m}}`\n        }\n      })\n      return `${other}${output.join('')}`\n    })\n  }\n\n  private enforceMathJaxSafety() {\n    if (!this.textContent) {\n      return ''\n    }\n\n    return this.enforcePaddingLimit(this.textContent)\n    // TODO: Call a method here that disallows passing `transparent` as a color argument\n    // and potentially other methods that enforce UI safeguards\n  }\n\n  // Workaround for WebKit bug (https://bugs.webkit.org/show_bug.cgi?id=160075)\n  // that prevents columnalign from being applied to mtd elements\n  private setColumnAlignments() {\n    const validAlignments = ['left', 'center', 'right']\n    const tables = this.querySelectorAll('mtable[columnalign]')\n\n    for (const table of tables) {\n      const alignments = table.getAttribute('columnalign')?.trim().split(/\\s+/)\n\n      if (alignments && alignments.length > 1) {\n        const rows = table.querySelectorAll(':scope > mtr')\n\n        for (const row of rows) {\n          const columns = row.querySelectorAll('mtd')\n\n          for (let j = 0; j < columns.length; j++) {\n            const column = columns[j]\n            const alignment = alignments[j] ?? alignments[alignments.length - 1]\n\n            if (column?.style && alignment && validAlignments.includes(alignment)) {\n              column.style.textAlign = alignment\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private renderContent(node: Node) {\n    // Determine if typesetting in the parallel document produced an error.\n    // Do this first so we can skip a potentially unecessary sanitization pass.\n    const errorText = this.getMathJaxError(node as HTMLElement)\n\n    if (typeof errorText === 'string') {\n      this.renderError({\n        msg: errorText,\n      })\n\n      return\n    }\n\n    /**\n     * If the supplied node doesn't have a mathjax error, that doesn't mean\n     * it is a valid node we can display.\n     * Nodes that have a text node as the value of their `firstChild` property\n     * also indicates a math expression that has failed to parse correctly\n     */\n    if (!this.childIsNode(node)) {\n      this.renderError()\n      return\n    }\n\n    const sanitized = DOMPurify?.default.sanitize(node, purifyConfigs) as string\n\n    // Only reset nodes if content remains post-sanitization\n    if (!sanitized) {\n      this.renderError()\n      return\n    }\n\n    this.innerHTML = sanitized\n  }\n\n  get isInline(): boolean {\n    return this.classList.contains('js-inline-math')\n  }\n\n  get isDisplay(): boolean {\n    return this.classList.contains('js-display-math')\n  }\n\n  override get textContent() {\n    return this.firstChild?.textContent ?? ''\n  }\n\n  override set textContent(content: string) {\n    if (this.firstChild) {\n      this.firstChild.textContent = content\n    }\n  }\n\n  async connectedCallback() {\n    this.staticURL = this.getAttribute(STATIC_RESOURCE_ATTR)!\n    this.runId = this.getAttribute('data-run-id')!\n\n    macroUsageTracker.update(this.runId)\n\n    await configureMathJax({staticURL: this.staticURL})\n\n    requestAnimationFrame(() => {\n      this.renderMath()\n    })\n  }\n\n  convertTexToMathML() {\n    const parallelDocContent = this.tempDocumentContentForSanitization()\n    const mathJax = window.MathJax\n\n    // We need to remove the $ delimiters from the TeX content before feeding it to MathJax\n    const tex = parallelDocContent\n      .trim()\n      .replace(new RegExp(`^\\\\${INLINE_DELIMITER}{1,2}|\\\\${INLINE_DELIMITER}{1,2}$`, 'g'), '')\n\n    if (mathJax && mathJax.tex2mml) {\n      const mathMl = mathJax.tex2mml(tex, {display: !this.isInline})\n\n      /**\n       * Add a custom hook to preserve table attributes,\n       * which should have been preserved with DOMPurify's \"ALLOWED_ATTR\" and \"ADD_ATTR\" configs,\n       * but that apparently isn't working at this time.\n       */\n      DOMPurify?.default.addHook('uponSanitizeAttribute', allowMathMlAttributes)\n      const sanitizedDocBody = DOMPurify?.default.sanitize(mathMl, {\n        USE_PROFILES: {mathMl: true},\n        RETURN_DOM: true,\n      }) as Element\n\n      this.renderContent(sanitizedDocBody.firstElementChild as Node)\n\n      // Fix any misaligned math tables in browsers that don't yet support `mtable[columnalign]`\n      this.setColumnAlignments()\n    }\n  }\n\n  disconnectedCallback() {\n    macroUsageTracker.clear(this.runId)\n  }\n\n  renderMath() {\n    if (!window.MathJax) {\n      return\n    }\n\n    // If the document has already been processed, this function is a no-op.\n    // This can happen when e.g. a user navigates between files with mathjax in them using\n    // the browser's back button.\n    if (this.wasPreviouslyRendered()) {\n      return\n    }\n\n    // Large amounts of macros can crash the page, so we set an upper limit\n    const estimatedElMacroCount = this.textContent.split('{').length\n    macroUsageTracker.update(this.runId, estimatedElMacroCount)\n\n    const aggregateMacroCount = macroUsageTracker.total()\n\n    if (aggregateMacroCount > GLOBAL_MAX_ALLOWED_MACROS || estimatedElMacroCount > MAX_ALLOWED_MACROS) {\n      this.renderError()\n      return\n    }\n\n    // Perform additional sanitization to prevent behavior that MathJax technically allows.\n    const disallowedMacrosFound = this.checkDisallowedMacros()\n    if (disallowedMacrosFound.length > 0) {\n      this.renderError({\n        msg: `The following macros are not allowed: ${disallowedMacrosFound.join(', ')}`,\n      })\n      return\n    }\n\n    this.textContent = this.enforceMathJaxSafety()\n\n    const startTime = window.performance.now()\n\n    this.convertTexToMathML()\n    this.recordBrowserStats(startTime)\n  }\n\n  recordBrowserStats(startTime: DOMHighResTimeStamp) {\n    // Send render timing distribution stats to Datadog\n    const endTime = window.performance.now()\n    const timeDiff = endTime - startTime\n\n    const stat: PlatformBrowserStat = {\n      distributionValue: timeDiff,\n      requestUrl: window.location.href,\n    }\n\n    if (this.isInline) {\n      stat['distributionKey'] = 'MATH_INLINE_RENDERED'\n    } else if (this.isDisplay) {\n      stat['distributionKey'] = 'MATH_DISPLAY_RENDERED'\n    } else {\n      return\n    }\n\n    sendStats(stat)\n    sendStats({incrementKey: 'MATHML_RENDERED'})\n  }\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","export function defaultHash(...args) {\n    // JSON.stringify ellides `undefined` and function values by default. We do not want that.\n    return JSON.stringify(args, (_, v) => (typeof v === 'object' ? v : String(v)));\n}\nexport default function memoize(fn, opts = {}) {\n    const { hash = defaultHash, cache = new Map() } = opts;\n    return function (...args) {\n        const id = hash.apply(this, args);\n        if (cache.has(id))\n            return cache.get(id);\n        let result = fn.apply(this, args);\n        if (result instanceof Promise) {\n            // eslint-disable-next-line github/no-then\n            result = result.catch(error => {\n                cache.delete(id);\n                throw error;\n            });\n        }\n        cache.set(id, result);\n        return result;\n    };\n}\n"],"names":["throttle","callback","wait","start","middle","once","timer","innerStart","last","cancelled","fn","args","delta","Date","now","apply","cancel","clearTimeout","setTimeout","debounce","UsageTracker","get","key","usage","update","value","currentValue","set","clear","delete","total","Array","from","entries","reduce","sum","time","constructor","Map","BAD_EXPRESSION_ERROR","MATHJAX_PREFIX_REGEX","DISALLOWED_MACROS","MATHML_PARSING_ERROR_MESSAGES","unitToMaxVal","em","pt","pc","ex","unitTypes","Object","keys","join","dimensionRegex","macrosWithDimensionsRegex","purifyConfigs","USE_PROFILES","mathMl","ADD_ATTR","KEEP_CONTENT","CUSTOM_ELEMENT_HANDLING","tagNameCheck","attributeNameCheck","allowCustomizedBuiltInElements","macroUsageTracker","DOMPurify","configurationPromise","configureMathJax","staticURL","Promise","resolve","window","MathJax","loader","paths","mathjax","load","tex","inlineMath","displayMath","packages","maxMacros","chtml","fontURL","startup","typeset","ready","defaultReady","renderer","menu","document","find","jax","disable","inputJax","preFilters","add","math","mathObj","macro","includes","safe","filterAttributes","filterMethods","filterSemiColon","_unused","input","split","options","enableMenu","renderActions","addMenu","safeOptions","allow","URLs","classes","cssIDs","styles","lengthMax","safeStyles","styleLengths","configureSRE","script","createElement","setAttribute","textContent","head","appendChild","promise","default","addHook","sanitizeClass","e","allowMathMlAttributes","el","data","allowedTags","tagName","allowedAttributes","attrName","keepAttr","forceKeepAttr","_","attrValue","filter","c","test","MathRendererElement","HTMLElement","doc","implementation","createHTMLDocument","open","write","close","body","childIsNode","node","Boolean","nodeType","Node","ELEMENT_NODE","isGitHubError","classList","contains","isMathJaxContainer","nodeName","wasPreviouslyRendered","firstElementChild","getMathJaxError","errorNode","querySelector","errorMessage","some","mjxErrorMessage","renderError","msg","raw","errorMsg","rawContent","render","html","checkDisallowedMacros","disallowedMacrosFound","push","enforcePaddingLimit","replace","match","other","dimensionAndUnitRegex","matches","length","output","map","m","unit","numericArg","Number","unitType","maxVal","enforceMathJaxSafety","setColumnAlignments","validAlignments","table","querySelectorAll","alignments","getAttribute","trim","row","columns","j","column","alignment","style","textAlign","renderContent","errorText","sanitized","sanitize","innerHTML","isInline","isDisplay","firstChild","content","connectedCallback","runId","requestAnimationFrame","renderMath","convertTexToMathML","parallelDocContent","tempDocumentContentForSanitization","mathJax","tex2mml","display","sanitizedDocBody","RETURN_DOM","disconnectedCallback","estimatedElMacroCount","aggregateMacroCount","startTime","performance","recordBrowserStats","stat","distributionValue","endTime","requestUrl","location","href","sendStats","incrementKey","mathmlEnabled","attr","controller","env","getEnv","getLocale","locale","loadEnv","envTag","getElementById","JSON","parse","error","console","ssrSafeDocument","readyState","addEventListener","loaded","ssrSafeWindow","getEnabledFeaturesSet","Set","features","featureFlags","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","isFeatureEnabled","name","has","featureFlag","runtimeEnvironment","isEnterprise","bundler","BUNDLER","undefined","ssrSafeHistory","history","ssrSafeLocation","pathname","origin","search","hash","IS_BROWSER","wasServerRendered","stats","flushImmediately","samplingProbability","timestamp","getTime","loggedIn","staff","isStaff","Math","random","flushStats","throttledScheduleSendStats","queued","requestIdleCallback","url","batch","getBatches","items","batches","itemStrings","item","stringify","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","navigator","sendBeacon","defaultHash","v","String","opts","cache","id","result","catch"],"sourceRoot":""}