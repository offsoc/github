# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::PostReceiveCommit::DiffStats`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::PostReceiveCommit::DiffStats`.

class Hydro::Schemas::Github::V1::PostReceiveCommit::DiffStats
  sig do
    params(
      files_added: T.nilable(Integer),
      files_deleted: T.nilable(Integer),
      files_modified: T.nilable(Integer),
      lines_added: T.nilable(Integer),
      lines_added_by_language: T.nilable(T.any(Google::Protobuf::Map[String, Integer], T::Hash[String, Integer])),
      lines_deleted: T.nilable(Integer),
      lines_deleted_by_language: T.nilable(T.any(Google::Protobuf::Map[String, Integer], T::Hash[String, Integer]))
    ).void
  end
  def initialize(files_added: nil, files_deleted: nil, files_modified: nil, lines_added: nil, lines_added_by_language: T.unsafe(nil), lines_deleted: nil, lines_deleted_by_language: T.unsafe(nil)); end

  sig { void }
  def clear_files_added; end

  sig { void }
  def clear_files_deleted; end

  sig { void }
  def clear_files_modified; end

  sig { void }
  def clear_lines_added; end

  sig { void }
  def clear_lines_added_by_language; end

  sig { void }
  def clear_lines_deleted; end

  sig { void }
  def clear_lines_deleted_by_language; end

  sig { returns(Integer) }
  def files_added; end

  sig { params(value: Integer).void }
  def files_added=(value); end

  sig { returns(Integer) }
  def files_deleted; end

  sig { params(value: Integer).void }
  def files_deleted=(value); end

  sig { returns(Integer) }
  def files_modified; end

  sig { params(value: Integer).void }
  def files_modified=(value); end

  sig { returns(Integer) }
  def lines_added; end

  sig { params(value: Integer).void }
  def lines_added=(value); end

  sig { returns(Google::Protobuf::Map[String, Integer]) }
  def lines_added_by_language; end

  sig { params(value: Google::Protobuf::Map[String, Integer]).void }
  def lines_added_by_language=(value); end

  sig { returns(Integer) }
  def lines_deleted; end

  sig { params(value: Integer).void }
  def lines_deleted=(value); end

  sig { returns(Google::Protobuf::Map[String, Integer]) }
  def lines_deleted_by_language; end

  sig { params(value: Google::Protobuf::Map[String, Integer]).void }
  def lines_deleted_by_language=(value); end
end
