<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# rubocop:disable Lint/InstanceVariable %>
<%
  if @install_trigger.persisted?
    url = stafftools_integration_installation_trigger_path(@install_trigger)
    submit = "Update Installation Trigger"
  else
    url = stafftools_integration_installation_triggers_path
    submit = "Automatically install this App"
  end
%>

<%= form_for @install_trigger, url: url do |f| %>
  <% unless @install_trigger.persisted? %>
    <%= f.text_group "GitHub App ID", :integration_id, {
      autofocus: true,
      error: error_for(f.object, :integration)
    } %>

    <%= f.select_group "Trigger Type", :install_type, IntegrationInstallTrigger.install_types.keys, {
      error: error_for(f.object, :install_type)
    } %>
  <% end %>

  <dl class="form-group <% if @install_trigger.errors[:path].any? %>errored<% end %>">
    <dt class="input-label">
      <label for="integration_install_trigger_path">Path Regex</label>
      <p><small>Only for file_added install triggers.</small></p>
      <p><small>Do not include <code>/.../</code> or <code>%r()</code> to begin and end the expression. Normal escaping rules apply.</small></p>
    </dt>
    <dd>
      <input placeholder="\A\.github/main\.workflow\z" class="form-control" type="text" name="integration_install_trigger[path]" id="integration_install_trigger_path" value="<%= @install_trigger.path %>">
    </dd>
    <% if @install_trigger.errors[:path].any? %>
      <dd class="error">
        <%= @install_trigger.errors.full_messages_for(:path).first %>
      </dd>
    <% end %>
  </dl>

  <%= f.text_group "Install Reason", :reason, {
    placeholder: "Should finish the sentence: 'This App was installed when'",
    error: error_for(f.object, :reason)
  } %>

  <div class="form-actions">
    <%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary) do %><%= submit %><% end %>
  </div>
<% end %>
