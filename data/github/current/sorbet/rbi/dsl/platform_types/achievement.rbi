# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Achievement`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Achievement`.

class PlatformTypes::Achievement < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(PlatformTypes::Achievable) }
  def achievable; end

  sig { returns(T::Boolean) }
  def achievable?; end

  sig { returns(String) }
  def description_template; end

  sig { returns(T::Boolean) }
  def description_template?; end

  sig { returns(T::Boolean) }
  def has_been_seen; end

  sig { returns(T::Boolean) }
  def has_been_seen?; end

  sig { returns(PlatformTypes::AchievementTier) }
  def highest_tier; end

  sig { returns(T::Boolean) }
  def highest_tier?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_fully_unlocked; end

  sig { returns(T::Boolean) }
  def is_fully_unlocked?; end

  sig { returns(T::Boolean) }
  def is_hidden; end

  sig { returns(T::Boolean) }
  def is_hidden?; end

  sig { returns(String) }
  def localized_description; end

  sig { returns(T::Boolean) }
  def localized_description?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(PlatformTypes::AchievementTier)) }
  def tier; end

  sig { returns(T::Boolean) }
  def tier?; end

  sig { returns(T::Array[PlatformTypes::AchievementTier]) }
  def tiers; end

  sig { returns(T::Boolean) }
  def tiers?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def unlocked_at; end

  sig { returns(T::Boolean) }
  def unlocked_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(PlatformTypes::User)) }
  def user; end

  sig { returns(T::Boolean) }
  def user?; end
end
