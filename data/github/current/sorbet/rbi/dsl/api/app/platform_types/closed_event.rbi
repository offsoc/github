# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::ClosedEvent`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::ClosedEvent`.

class Api::App::PlatformTypes::ClosedEvent < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(GraphQL::Client::Schema::InterfaceType) }
  def closable; end

  sig { returns(T::Boolean) }
  def closable?; end

  sig do
    returns(T.nilable(T.any(Api::App::PlatformTypes::Commit, Api::App::PlatformTypes::PullRequest, Api::App::PlatformTypes::ProjectV2)))
  end
  def closer; end

  sig { returns(T::Boolean) }
  def closer?; end

  sig { returns(T.nilable(String)) }
  def closing_project_item_status; end

  sig { returns(T::Boolean) }
  def closing_project_item_status?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def full_database_id; end

  sig { returns(T::Boolean) }
  def full_database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def safe_actor; end

  sig { returns(T::Boolean) }
  def safe_actor?; end

  sig { returns(T.nilable(String)) }
  def state_reason; end

  sig { returns(T::Boolean) }
  def state_reason?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::App)) }
  def via_app; end

  sig { returns(T::Boolean) }
  def via_app?; end
end
