<%# erblint:counter DeprecatedComponentsCounter 2 %>
<%# erblint:counter GoogleAnalyticsDeprecation 1 %>
<%# `view` is an instance of Orgs::People::SidebarView %>
<div class="Box mb-3">
  <div class="Box-row">
    <div class="d-flex flex-items-center">
      <%= linked_avatar_for(view.person, 32, img_class: "avatar-small mr-2 mt-1") %>
      <div>
        <%= profile_link(view.person, "aria-label" => "#{view.person.display_login}", class: "css-truncate css-truncate-target text-bold d-block") %>
        <span class="css-truncate css-truncate-target" itemprop="name"><%= view.person.display_login %></span>
      </div>
    </div>
    <% if view.show_organization_domain_emails? %>
      <% domain_emails = view.admin_visible_domain_emails %>
      <% if domain_emails.any? || view.show_approved_domain_message? %>
        <ul class="pt-2 list-style-none" id="domain-emails">
          <% domain_emails.first(2).each do |email| %>
            <li><%= email %></li>
          <% end %>
          <% if view.show_approved_domain_message? && domain_emails.count <= 2 %>
            <li class="text-italic color-fg-muted">Has approved domain email</li>
          <% end %>
        </ul>
        <% if domain_emails.count > 2 %>
          <div class="Details js-details-container">
            <div class="Details-content--hidden">
              <ul class="list-style-none">
                <% domain_emails.drop(2).each do |email| %>
                  <li><%= email %></li>
                <% end %>
                <% if view.show_approved_domain_message? %>
                  <li class="text-italic color-fg-muted">Has approved domain email</li>
                <% end %>
              </ul>
            </div>
            <%= render Primer::ButtonComponent.new(scheme: :link, classes: "js-details-target", "aria-expanded": "false") do %>
              <span class="Details-content--shown">Show more <%= primer_octicon(:"chevron-down") %></span>
              <span class="Details-content--hidden">Show less <%= primer_octicon(:"chevron-up") %></span>
            <% end %>
          </div>
        <% end %>
      <% else %>
        <span class="d-block pt-2 text-italic color-fg-muted" id="domain-emails">No verified or approved domain email</span>
      <% end %>
    <% end %>
  </div>
  <div class="Box-row position-relative">
    <% if view.can_change_role? %>
      <%= render "orgs/people/member_role_select", view: create_view_model(
        Orgs::People::MemberRoleSelectView,
        organization: view.organization,
        selected_members: [view.person],
      ) %>
    <% else %>
      <div>
        <%= view.role_name %>
        <%= render(Primer::Beta::Link.new(
          float: :right,
          href: "#{GitHub.help_url}/organizations/managing-peoples-access-to-your-organization-with-roles/roles-in-an-organization"
        )) do %>
          <%= render Primer::Beta::Octicon.new(:question, color: :muted, "aria-label": "help for user roles") %>
        <% end %>
      </div>
    <% end %>
  </div>
  <ul class="Box-footer Box-row--gray manage-member-meta">
    <li class="manage-member-meta-item">
      <%= primer_octicon(:repo) %>
      <%= render Primer::Beta::Button.new(tag: :a, scheme: :link, href: org_person_path(view.organization, view.person)) do %>
        Has access to <%= pluralize view.repositories_count, "repository" %>
      <% end %>
    </li>
    <% if view.organization.direct_or_team_member?(view.person) %>
       <% if view.should_show_organization_roles_count? %>
        <li class="manage-member-meta-item">
          <%= primer_octicon("id-badge") %>
          <%= render Primer::Beta::Button.new(tag: :a, scheme: :link, href: view.organization_roles_assignment_path) do %>
            <%= pluralize view.organization_roles_count, "role" %>
          <% end %>
        </li>
       <% end %>
      <li class="manage-member-meta-item">
        <%= primer_octicon(:people) %>
        <%= render Primer::Beta::Button.new(tag: :a, scheme: :link, href: teams_path(view.organization, :query => "@" + view.person.display_login)) do %>
          <%= pluralize view.organization.teams_for(view.person, viewer: current_user).size, "team" %>
        <% end %>
      </li>
      <li class="manage-member-meta-item">
        <%= primer_octicon(:eye) %>
        Membership
        <% if view.can_change_visibility? %>
          <details class="details-reset details-overlay select-menu d-inline position-relative">
            <%= render Primer::ButtonComponent.new(tag: :summary, scheme: :link, classes: "select-menu-button") do %>
              <strong>
                <% if view.public_member? %>
                  public
                <% else %>
                  private
                <% end %>
              </strong>
            <% end %>
            <%= render "orgs/people/visibility_select", view: create_view_model(
              Orgs::People::MemberView,
              member: view.person,
              organization: view.organization,
            ) %>
          </details>
        <% else %>
          <strong>
            <% if view.public_member? %>
              public
            <% else %>
              private
            <% end %>
          </strong>
        <% end %>
      </li>
      <% if view.show_two_factor_status? %>
        <li class="manage-member-meta-item">
          <% if view.person.two_factor_authentication_enabled? %>
            <%= primer_octicon(:lock) %>
            Two-factor security <strong>enabled</strong>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "alert")) %>
            <span class="color-fg-danger">
              Two-factor security <strong>disabled</strong>
            </span>
          <% end %>
        </li>
      <% end %>
    <% end %>
    <% if view.show_sso_status? %>
      <li class="manage-member-meta-item">
        <%= primer_octicon(:"shield-lock") %>
        <%= render Primer::Beta::Button.new(tag: :a, scheme: :link, href: org_person_sso_path(view.organization, view.person)) do %>
          <%= view.sso_status %>
        <% end %>
      </li>
    <% end %>
    <% if view.show_billing_manager? %>
      <li class="manage-member-meta-item">
        <%= primer_octicon(:"credit-card") %>
        Billing manager
      </li>
    <% end %>
  </ul>
</div>

<% if view.editable? && view.organization.direct_or_team_member?(view.person) %>
  <% if view.organization.allow_conversion_to_outside_collaborator?(actor: current_user) %>
    <%= render(Primer::Alpha::Dialog.new(
      size: :large,
      title: "Convert #{view.person.display_login} to #{outside_collaborators_verbiage(view.organization).singularize}?",
    )) do |dialog| %>
      <% dialog.with_show_button(
        size: :small,
        block: :true,
        classes: "manage-member-button",
        data: {
          "ga-click": "Orgs, convert to outside collaborator, location:manage member sidebar; text:Convert to outside collaborator"
        }
      ) do %>
        Convert to <%= outside_collaborators_verbiage(view.organization).singularize %>
      <% end %>
      <%= render :partial => "orgs/people/convert_to_outside_collaborator_dialog", locals: {
        members: [view.person],
        member_ids: [view.person.id]
      } %>
    <% end %>
  <% end %>

  <% unless view.hide_remove_from_org_button? %>
    <%= render(Primer::Alpha::Dialog.new(
      size: :large,
      title: "Removing 1 member from #{view.organization.display_login}",
      id: "remove-member-dialog-#{view.person.id}"
    )) do |dialog| %>
      <% dialog.with_show_button(
        size: :small,
        scheme: :danger,
        block: true,
        classes: "manage-member-button",
        test_selector: "remove_user_from_org"
      ) { "Remove from organization" } %>
      <% dialog.with_body do %>
        <include-fragment
          class="my-3"
          aria-label="Loading..."
          src="<%= org_destroy_people_dialog_path(
            view.organization,
            "member_ids[]": view.person.id,
            redirect_to_path: org_people_path(view.organization)
          ) %>">
          <%= render(Primer::Beta::Spinner.new(size: :large, mx: :auto, display: :block)) %>
        </include-fragment>
      <% end %>
    <% end %>
  <% end %>
<% elsif view.editable? && view.organization.outside_collaborators.exists?(view.person.id) %>
  <%= render Primer::Beta::Button.new(tag: :a, href: org_edit_invitation_path(view.organization, view.person), size: :small, block: true, classes: "manage-member-button", "data-ga-click": "Orgs, invite an outside collab, location:manage member sidebar; text:Invite to organization") do %>
      Invite to organization
  <% end %>

  <%= render layout: "shared/details_dialog", locals: {
    details_class: "width-full",
    button_class: "btn btn-sm btn-block btn-danger manage-member-button",
    button_text: "Remove from all repositories",
    ga_click: "Orgs, remove from all repositories, location:outside collabs list; text:Remove from all repositories",
    title: "Removing 1 #{outside_collaborators_verbiage(view.organization).singularize} from #{view.organization.display_login}"
  } do %>
    <%= render :partial => "orgs/people/remove_outside_collaborator_dialog", :locals => {
      :selected_outside_collaborators => [view.person],
      :organization => view.organization,
      :redirect_to_path => org_outside_collaborators_path(view.organization)
    }
    %>
  <% end %>
<% end %>
