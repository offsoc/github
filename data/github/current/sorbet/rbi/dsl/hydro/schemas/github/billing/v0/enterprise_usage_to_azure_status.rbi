# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Billing::V0::EnterpriseUsageToAzureStatus`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Billing::V0::EnterpriseUsageToAzureStatus`.

class Hydro::Schemas::Github::Billing::V0::EnterpriseUsageToAzureStatus
  sig do
    params(
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      error_message: T.nilable(Google::Protobuf::StringValue),
      event_date_time: T.nilable(Google::Protobuf::Timestamp),
      meter_id: T.nilable(String),
      quantity: T.nilable(Float),
      subscription_id: T.nilable(String),
      success: T.nilable(T::Boolean)
    ).void
  end
  def initialize(business: nil, error_message: nil, event_date_time: nil, meter_id: nil, quantity: nil, subscription_id: nil, success: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_error_message; end

  sig { void }
  def clear_event_date_time; end

  sig { void }
  def clear_meter_id; end

  sig { void }
  def clear_quantity; end

  sig { void }
  def clear_subscription_id; end

  sig { void }
  def clear_success; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def error_message; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def error_message=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def event_date_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def event_date_time=(value); end

  sig { returns(String) }
  def meter_id; end

  sig { params(value: String).void }
  def meter_id=(value); end

  sig { returns(Float) }
  def quantity; end

  sig { params(value: Float).void }
  def quantity=(value); end

  sig { returns(String) }
  def subscription_id; end

  sig { params(value: String).void }
  def subscription_id=(value); end

  sig { returns(T::Boolean) }
  def success; end

  sig { params(value: T::Boolean).void }
  def success=(value); end
end
