# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: repositories/v1/repositories_api.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("repositories/v1/repositories_api.proto", :syntax => :proto3) do
    add_message "licensing.repositories.v1.Repository" do
      optional :id, :uint64, 1
      optional :visibility, :enum, 2, "licensing.repositories.v1.Repository.Visibility"
      optional :parent_id, :uint32, 3
      optional :owner_customer_id, :int64, 4
      optional :is_fork, :bool, 5
      optional :is_advisory_workspace, :bool, 6
      optional :is_active, :bool, 7
    end
    add_enum "licensing.repositories.v1.Repository.Visibility" do
      value :VISIBILITY_INVALID, 0
      value :VISIBILITY_PUBLIC, 1
      value :VISIBILITY_PRIVATE, 2
      value :VISIBILITY_INTERNAL, 3
    end
    add_message "licensing.repositories.v1.GetRepositoryInformationRequest" do
      optional :id, :uint64, 1
      optional :include_collaborators, :bool, 2
    end
    add_message "licensing.repositories.v1.GetRepositoryInformationResponse" do
      optional :repository, :message, 1, "licensing.repositories.v1.Repository"
      repeated :collaborator_ids, :uint64, 2
    end
  end
end

module MonolithTwirp
  module Licensing
    module Repositories
      module V1
        Repository = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("licensing.repositories.v1.Repository").msgclass
        Repository::Visibility = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("licensing.repositories.v1.Repository.Visibility").enummodule
        GetRepositoryInformationRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("licensing.repositories.v1.GetRepositoryInformationRequest").msgclass
        GetRepositoryInformationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("licensing.repositories.v1.GetRepositoryInformationResponse").msgclass
      end
    end
  end
end
