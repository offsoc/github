# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Query::V2::CountMode`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Query::V2::CountMode`.

module Blackbird::Query::V2::CountMode
  class << self
    sig { returns(Google::Protobuf::EnumDescriptor) }
    def descriptor; end

    sig { params(number: Integer).returns(T.nilable(Symbol)) }
    def lookup(number); end

    sig { params(symbol: Symbol).returns(T.nilable(Integer)) }
    def resolve(symbol); end
  end
end

Blackbird::Query::V2::CountMode::COUNT_MODE_APPROXIMATE = 1
Blackbird::Query::V2::CountMode::COUNT_MODE_INVALID = 0
Blackbird::Query::V2::CountMode::COUNT_MODE_LOWER_BOUND = 2
