# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `primer_view_components` gem.
# Please instead update this file by running `bin/tapioca gem primer_view_components`.

class AfterContentForm < ::ApplicationForm; end
class ApplicationForm < ::Primer::Forms::Base; end
class ArrayCheckBoxGroupForm < ::ApplicationForm; end
class AutoCompleteForm < ::ApplicationForm; end
class BothTypesOfCaptionForm < ::ApplicationForm; end
class CaptionTemplateForm < ::ApplicationForm; end
class CheckBoxGroupForm < ::ApplicationForm; end
class ComposedForm < ::ApplicationForm; end
class CustomCitiesForm < ::ApplicationForm; end
class FirstNameForm < ::ApplicationForm; end
class FriendForm < ::ApplicationForm; end
class HorizontalForm < ::ApplicationForm; end
class ImmediateValidationForm < ::ApplicationForm; end
class InvalidForm < ::ApplicationForm; end
class LastNameForm < ::ApplicationForm; end
class MultiInputForm < ::ApplicationForm; end
class MultiTextFieldForm < ::ApplicationForm; end
class NameWithQuestionMarkForm < ::ApplicationForm; end

# :nocov:
#
# source://primer_view_components//lib/primer/classify/utilities.rb#6
module Primer; end

module Primer::Alpha; end

class Primer::Alpha::ActionBar < ::Primer::Component
  def initialize(size: T.unsafe(nil), overflow_menu: T.unsafe(nil), **system_arguments); end

  def _call_item_divider; end
  def _call_item_icon_button(icon:, label:, item_arguments: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def items?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_item_divider(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_item_divider_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_item_icon_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_item_icon_button_content(content); end

  private

  def before_render; end
  def render?; end
  def render_overflow_menu?; end
  def with_menu_item(id:, **system_arguments, &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionBar::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionBar::Divider < ::Primer::Component
  def initialize; end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionBar::Item < ::Primer::Component
  def initialize(item_content, **item_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionBar::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionBar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList < ::Primer::Component
  def initialize(id: T.unsafe(nil), role: T.unsafe(nil), item_classes: T.unsafe(nil), scheme: T.unsafe(nil), show_dividers: T.unsafe(nil), aria_selection_variant: T.unsafe(nil), select_variant: T.unsafe(nil), form_arguments: T.unsafe(nil), **system_arguments); end

  def _call_avatar_item(**system_arguments); end
  def _call_heading(component_klass: T.unsafe(nil), **system_arguments); end
  def _call_item(**system_arguments); end
  def _call_primer__alpha__action_list; end
  def acts_as_form_input?; end
  def acts_as_listbox?; end
  def acts_as_menu?; end
  def allows_selection?; end
  def aria_selection_variant; end
  def before_render; end
  def build_avatar_item(src:, username:, full_name: T.unsafe(nil), full_name_scheme: T.unsafe(nil), component_klass: T.unsafe(nil), avatar_arguments: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments); end
  def call; end
  def custom_element_name; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  def id; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def items?; end

  def multi_select?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  def required_form_arguments_given?; end
  def role; end
  def select_variant; end
  def single_select?; end
  def will_add_item(_item); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_avatar_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_avatar_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_divider(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_divider_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_item_content(content); end

  private

  def post_list_content_block; end
  def with_post_list_content(&block); end

  class << self
    def audit_date; end
    def component_status; end
    def custom_element_name; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::ARIA_SELECTION_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::DEFAULT_ARIA_SELECTION_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_MENU_ITEM_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionList::Divider < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), **system_arguments); end

  def _call_primer__alpha__action_list__divider; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Divider::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Divider::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Divider::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::FormWrapper < ::Primer::Component
  def initialize(list:, action: T.unsafe(nil), **form_arguments); end

  def form_required?; end
  def get?; end
  def render_inputs?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def extract_http_method(args); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::FormWrapper::DEFAULT_HTTP_METHOD = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::FormWrapper::HTTP_METHOD_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::Heading < ::Primer::Component
  def initialize(title:, heading_level: T.unsafe(nil), scheme: T.unsafe(nil), subtitle: T.unsafe(nil), **system_arguments); end

  def _call_primer__alpha__action_list__heading; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  def subtitle?; end
  def subtitle_id; end
  def title_id; end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Heading::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Heading::HEADING_LEVELS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Heading::HEADING_MAX = T.let(T.unsafe(nil), Integer)
Primer::Alpha::ActionList::Heading::HEADING_MIN = T.let(T.unsafe(nil), Integer)
Primer::Alpha::ActionList::Heading::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Heading::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::Item < ::Primer::Component
  def initialize(list:, label: T.unsafe(nil), item_id: T.unsafe(nil), label_classes: T.unsafe(nil), label_arguments: T.unsafe(nil), content_arguments: T.unsafe(nil), form_arguments: T.unsafe(nil), parent: T.unsafe(nil), truncate_label: T.unsafe(nil), href: T.unsafe(nil), role: T.unsafe(nil), size: T.unsafe(nil), scheme: T.unsafe(nil), disabled: T.unsafe(nil), description_scheme: T.unsafe(nil), active: T.unsafe(nil), on_click: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_description(legacy_content = T.unsafe(nil), test_selector: T.unsafe(nil)); end
  def _call_leading_visual_avatar(*_arg0); end
  def _call_leading_visual_content(**system_arguments); end
  def _call_leading_visual_icon(**system_arguments, &block); end
  def _call_leading_visual_svg(**system_arguments); end
  def _call_primer__alpha__action_list__item; end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_action(**system_arguments); end
  def _call_trailing_visual_text(text); end
  def active; end
  def active?; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def description?; end

  def disabled; end
  def disabled?; end
  def href; end
  def id; end
  def item_id; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  def list; end
  def parent; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def private_content; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def private_content?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def private_leading_action_icon; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def private_leading_action_icon?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def private_trailing_action_icon; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def private_trailing_action_icon?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def trailing_action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def trailing_action?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_avatar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_avatar_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_content_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_raw_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_raw_content_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_svg(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_svg_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_private_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_private_content_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_private_leading_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_private_leading_action_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_private_trailing_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_private_trailing_action_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_trailing_action(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_trailing_action_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_text(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_text_content(content); end

  private

  def before_render; end
  def list_class; end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Item::DEFAULT_DESCRIPTION_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_TRUNCATION_BEHAVIOR = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DESCRIPTION_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::DESCRIPTION_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::TRUNCATION_BEHAVIOR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::TRUNCATION_BEHAVIOR_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::LIST_BOX_ITEM_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::MENU_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::SELECT_VARIANT_ROLE_MAP = T.let(T.unsafe(nil), Hash)

class Primer::Alpha::ActionMenu < ::Primer::Component
  def initialize(menu_id: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_side: T.unsafe(nil), size: T.unsafe(nil), src: T.unsafe(nil), preload: T.unsafe(nil), dynamic_label: T.unsafe(nil), dynamic_label_prefix: T.unsafe(nil), select_variant: T.unsafe(nil), form_arguments: T.unsafe(nil), overlay_arguments: T.unsafe(nil), **system_arguments); end

  def list; end
  def preload; end
  def preload?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def with_avatar_item(**system_arguments, &block); end
  def with_divider(**system_arguments, &block); end
  def with_group(**system_arguments, &block); end
  def with_item(**system_arguments, &block); end
  def with_show_button(**system_arguments, &block); end

  private

  def before_render; end
  def render?; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::DEFAULT_PRELOAD = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::ActionMenu::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionMenu::Group < ::Primer::Alpha::ActionList
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def with_divider; end
  def with_heading(**system_arguments, &block); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionMenu::Heading < ::Primer::Alpha::ActionList::Heading
  def initialize(**_arg0); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionMenu::List < ::Primer::Component
  def initialize(**system_arguments); end

  def items; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def with_avatar_item(**system_arguments, &block); end
  def with_divider(**system_arguments, &block); end
  def with_group(**system_arguments, &block); end
  def with_item(**system_arguments, &block); end

  private

  def add_item(item, to:); end
  def before_render; end
  def contains_group?; end
  def organize_arguments(data: T.unsafe(nil), **system_arguments); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::List::DEFAULT_ITEM_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionMenu::List::ITEM_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionMenu::ListWrapper < ::Primer::Alpha::ActionList
  def initialize(menu_id:, **system_arguments); end

  def _call_group(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def with_group(**system_arguments, &block); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::AutoComplete < ::Primer::Component
  def initialize(label_text:, src:, list_id:, input_id:, input_name: T.unsafe(nil), is_label_visible: T.unsafe(nil), is_label_inline: T.unsafe(nil), with_icon: T.unsafe(nil), is_clearable: T.unsafe(nil), **system_arguments); end

  def _call_input(**system_arguments); end
  def _call_results(**system_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def input; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def input?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def results; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def results?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_input(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_input_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_results(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_results_content(content); end

  private

  def label_classes(**args); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::AutoComplete::Item < ::Primer::Component
  def initialize(value:, selected: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Banner < ::Primer::Component
  def initialize(tag: T.unsafe(nil), full: T.unsafe(nil), full_when_narrow: T.unsafe(nil), dismiss_scheme: T.unsafe(nil), dismiss_label: T.unsafe(nil), description: T.unsafe(nil), icon: T.unsafe(nil), scheme: T.unsafe(nil), **system_arguments); end

  def _call_action_button(**system_arguments); end
  def _call_action_content(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def action?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_action_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_action_button_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_action_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_action_content_content(content); end

  private

  def catalyst_action(event:, function:); end
  def catalyst_target(field:); end
  def custom_element_name; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Banner::DEFAULT_DISMISS_LABEL = T.let(T.unsafe(nil), String)
Primer::Alpha::Banner::DEFAULT_DISMISS_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DEFAULT_ICONS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DISMISS_SCHEMES = T.let(T.unsafe(nil), Array)
Primer::Alpha::Banner::LEGACY_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ButtonMarketing < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), variant: T.unsafe(nil), tag: T.unsafe(nil), type: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ButtonMarketing::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ButtonMarketing::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ButtonMarketing::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dialog < ::Primer::Component
  def initialize(title:, subtitle: T.unsafe(nil), size: T.unsafe(nil), position: T.unsafe(nil), position_narrow: T.unsafe(nil), visually_hide_title: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_header(show_divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end
  def _call_show_button(icon: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def header?; end

  def id; end
  def labelledby; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def show_button?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dialog::Body < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dialog::DEFAULT_POSITION = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::DEFAULT_POSITION_NARROW = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::Dialog::Footer < ::Primer::Component
  def initialize(show_divider: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dialog::Header < ::Primer::Component
  def initialize(id:, title:, subtitle: T.unsafe(nil), show_divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), variant: T.unsafe(nil), **system_arguments); end

  def _call_filter(**system_arguments); end
  def _call_subtitle(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def filter; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def filter?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_filter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_filter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dialog::Header::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::Header::VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::Header::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::POSITION_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::POSITION_NARROW_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::POSITION_NARROW_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::POSITION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dropdown < ::Primer::Component
  def initialize(overlay: T.unsafe(nil), with_caret: T.unsafe(nil), **system_arguments); end

  def _call_button(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def button; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def button?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def menu; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def menu?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_button_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_menu(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_menu_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dropdown::Menu < ::Primer::Component
  def initialize(as: T.unsafe(nil), direction: T.unsafe(nil), scheme: T.unsafe(nil), header: T.unsafe(nil), **system_arguments); end

  def _call_items(divider: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  private

  def list?; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dropdown::Menu::AS_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::AS_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dropdown::Menu::Item < ::Primer::Component
  def initialize(as:, tag: T.unsafe(nil), divider: T.unsafe(nil), **system_arguments); end

  def call; end
  def divider?; end
  def list?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dropdown::Menu::Item::BUTTON_TAGS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::Item::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::Item::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::SCHEME_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Alpha::FormControl < ::Primer::Component
  def initialize(label:, caption: T.unsafe(nil), validation_message: T.unsafe(nil), required: T.unsafe(nil), visually_hide_label: T.unsafe(nil), full_width: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def caption; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def caption?; end

  def full_width?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def required?; end
  def visually_hide_label?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_caption(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_caption_content(content); end

  def with_input(&block); end

  private

  def before_render; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::HellipButton < ::Primer::Component
  def initialize(inline: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::HiddenTextExpander < ::Primer::Component
  def initialize(inline: T.unsafe(nil), button_arguments: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Image < ::Primer::Component
  def initialize(src:, alt:, lazy: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ImageCrop < ::Primer::Component
  def initialize(src:, rounded: T.unsafe(nil), **system_arguments); end

  def _call_loading(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def loading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def loading?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_loading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_loading_content(content); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Layout < ::Primer::Component
  def initialize(stacking_breakpoint: T.unsafe(nil), first_in_source: T.unsafe(nil), gutter: T.unsafe(nil), **system_arguments); end

  def _call_sidebar(width: T.unsafe(nil), col_placement: T.unsafe(nil), row_placement: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def main; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def main?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def sidebar; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def sidebar?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_main(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_main_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_sidebar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_sidebar_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::FIRST_IN_SOURCE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::FIRST_IN_SOURCE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::GUTTER_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::GUTTER_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::GUTTER_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Layout::Main < ::Primer::Component
  def initialize(tag: T.unsafe(nil), width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::Main::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Main::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::Main::WIDTH_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Main::WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_COL_PLACEMENT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_COL_PLACEMENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_ROW_PLACEMENT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_ROW_PLACEMENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_WIDTH_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_WIDTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::SIDEBAR_WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::STACKING_BREAKPOINT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::STACKING_BREAKPOINT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::STACKING_BREAKPOINT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Layout::Sidebar < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::Sidebar::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Sidebar::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Menu < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_heading(tag:, **system_arguments); end
  def _call_items(href:, selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Menu::HEADING_TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Menu::HEADING_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::NavList < ::Primer::Beta::NavList
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Divider < ::Primer::Beta::NavList::Divider
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Group < ::Primer::Beta::NavList::Group
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Heading < ::Primer::Beta::NavList::Heading
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Item < ::Primer::Beta::NavList::Item
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::Alpha::Navigation; end

class Primer::Alpha::Navigation::Tab < ::Primer::Component
  def initialize(list: T.unsafe(nil), selected: T.unsafe(nil), with_panel: T.unsafe(nil), panel_id: T.unsafe(nil), icon_classes: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_icon(icon = T.unsafe(nil), **system_arguments); end
  def _call_panel(**system_arguments); end
  def _call_primer__alpha__navigation__tab; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def counter; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def counter?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def icon; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def icon?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def panel; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def panel?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  def selected; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def text; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def text?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_counter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_panel(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_panel_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_text(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_text_content(content); end

  def wrapper; end

  private

  def panel_id(panel_id); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Navigation::Tab::ARIA_CURRENT_OPTIONS_FOR_ANCHOR = T.let(T.unsafe(nil), Array)
Primer::Alpha::Navigation::Tab::DEFAULT_ARIA_CURRENT_FOR_ANCHOR = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::OcticonSymbols < ::Primer::Component
  def initialize(icons: T.unsafe(nil)); end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def symbol_tags; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Overlay < ::Primer::Component
  def initialize(title:, role: T.unsafe(nil), subtitle: T.unsafe(nil), popover: T.unsafe(nil), size: T.unsafe(nil), padding: T.unsafe(nil), anchor: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_offset: T.unsafe(nil), anchor_side: T.unsafe(nil), allow_out_of_bounds: T.unsafe(nil), visually_hide_title: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_body(padding: T.unsafe(nil), **system_arguments); end
  def _call_header(divider: T.unsafe(nil), size: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end
  def _call_show_button(icon: T.unsafe(nil), controls: T.unsafe(nil), **button_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def header?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def show_button?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  private

  def show_button_id; end
  def title_id; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::ALIGN_CONTENT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::ALIGN_CONTENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_OFFSET_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_SIDE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::ANCHOR_SIDE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Overlay::Body < ::Primer::Component
  def initialize(padding: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::DEFAULT_ALIGN_CONTENT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_ALIGN = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_OFFSET = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_SIDE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_PADDING = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_POPOVER = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::Overlay::Footer < ::Primer::Component
  def initialize(show_divider: T.unsafe(nil), align_content: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Overlay::Header < ::Primer::Component
  def initialize(id:, title:, overlay_id: T.unsafe(nil), subtitle: T.unsafe(nil), size: T.unsafe(nil), divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end

  def _call_filter(**system_arguments); end
  def _call_subtitle(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def filter; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def filter?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_filter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_filter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::Header::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::Header::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::Header::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::PADDING_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::PADDING_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::POPOVER_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ROLE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SegmentedControl < ::Primer::Component
  def initialize(hide_labels: T.unsafe(nil), full_width: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def _call_items(label:, selected: T.unsafe(nil), icon: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SegmentedControl::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SegmentedControl::FULL_WIDTH_DEFAULT = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::SegmentedControl::HIDE_LABELS_DEFAULT = T.let(T.unsafe(nil), FalseClass)

class Primer::Alpha::SegmentedControl::Item < ::Primer::BaseComponent
  def initialize(label:, selected: T.unsafe(nil), icon: T.unsafe(nil), hide_labels: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def with_trailing_visual_label(**system_arguments, &block); end

  private

  def before_render; end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SegmentedControl::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::SegmentedControl::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SelectPanel < ::Primer::Component
  def initialize(src: T.unsafe(nil), title: T.unsafe(nil), id: T.unsafe(nil), size: T.unsafe(nil), select_variant: T.unsafe(nil), fetch_strategy: T.unsafe(nil), no_results_label: T.unsafe(nil), preload: T.unsafe(nil), dynamic_label: T.unsafe(nil), dynamic_label_prefix: T.unsafe(nil), dynamic_aria_label_prefix: T.unsafe(nil), body_id: T.unsafe(nil), list_arguments: T.unsafe(nil), form_arguments: T.unsafe(nil), show_filter: T.unsafe(nil), open_on_load: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_side: T.unsafe(nil), **system_arguments); end

  def _call_show_button(**system_arguments); end
  def body_id; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def error_content; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def error_content?; end

  def fetch_strategy; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def footer?; end

  def panel_id; end
  def preload; end
  def preload?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def preload_error_content; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def preload_error_content?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def select_variant; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def show_button?; end

  def show_filter; end
  def show_filter?; end
  def src; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  def with_avatar_item(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_error_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_error_content_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  def with_item(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_preload_error_content(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_preload_error_content_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  private

  def before_render; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SelectPanel::DEFAULT_FETCH_STRATEGY = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SelectPanel::DEFAULT_PRELOAD = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::SelectPanel::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SelectPanel::FETCH_STRATEGIES = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SelectPanel::ItemList < ::Primer::Alpha::ActionList
  def initialize(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SelectPanel::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::TabContainer < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end
  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::TabNav < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::TabNavHelper

  def initialize(label:, tag: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  def _call_extra(align: T.unsafe(nil), &block); end
  def _call_tabs(selected: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def extra; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def extra?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_extra(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_extra_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::TabNav::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabNav::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabNav::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::TabPanels < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::TabNavHelper

  def initialize(label:, body_arguments: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_extra(align: T.unsafe(nil), &block); end
  def _call_tabs(id:, selected: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def extra; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def extra?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_extra(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_extra_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::TabPanels::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabPanels::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabPanels::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ToggleSwitch < ::Primer::Component
  def initialize(src: T.unsafe(nil), csrf_token: T.unsafe(nil), checked: T.unsafe(nil), enabled: T.unsafe(nil), size: T.unsafe(nil), status_label_position: T.unsafe(nil), turbo: T.unsafe(nil), **system_arguments); end

  def disabled?; end
  def enabled?; end
  def on?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def before_render; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ToggleSwitch::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ToggleSwitch::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ToggleSwitch::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Tooltip < ::Primer::Component
  def initialize(type:, for_id:, text:, direction: T.unsafe(nil), **system_arguments); end

  def call; end
  def id; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Tooltip::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Tooltip::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Tooltip::TYPE_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Tooltip::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::UnderlineNav < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::UnderlineNavHelper

  def initialize(label:, tag: T.unsafe(nil), align: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  def _call_actions(tag: T.unsafe(nil), **system_arguments); end
  def _call_tabs(selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  private

  def body; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::UnderlineNav::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::UnderlineNav::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::UnderlineNav::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::UnderlinePanels < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::UnderlineNavHelper

  def initialize(label:, align: T.unsafe(nil), body_arguments: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_actions(tag: T.unsafe(nil), **system_arguments); end
  def _call_tabs(id:, selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  private

  def body; end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::AttributesHelper
  def aria(val, system_arguments); end
  def data(val, system_arguments); end
  def merge_aria(*hashes); end
  def merge_data(*hashes); end
  def merge_prefixed_attribute_hashes(*hashes, prefix:, plural_keys:); end
end

Primer::AttributesHelper::PLURAL_ARIA_ATTRIBUTES = T.let(T.unsafe(nil), Array)
Primer::AttributesHelper::PLURAL_DATA_ATTRIBUTES = T.let(T.unsafe(nil), Array)
module Primer::Audited; end

module Primer::Audited::Dsl
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::Primer::Audited::Dsl::ClassMethods

  module GeneratedClassMethods
    def audit_date; end
    def audit_date=(value); end
    def audit_date?; end
  end

  module GeneratedInstanceMethods
    def audit_date; end
    def audit_date?; end
  end
end

module Primer::Audited::Dsl::ClassMethods
  def audited_at(date = T.unsafe(nil)); end
end

class Primer::BaseComponent < ::Primer::Component
  def initialize(tag:, classes: T.unsafe(nil), **system_arguments); end

  def _call_primer__base_component; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::BaseComponent::SELF_CLOSING_TAGS = T.let(T.unsafe(nil), Array)
module Primer::Beta; end

class Primer::Beta::AutoComplete < ::Primer::Component
  def initialize(label_text:, src:, list_id:, input_id:, input_name: T.unsafe(nil), placeholder: T.unsafe(nil), show_clear_button: T.unsafe(nil), visually_hide_label: T.unsafe(nil), size: T.unsafe(nil), full_width: T.unsafe(nil), width: T.unsafe(nil), disabled: T.unsafe(nil), invalid: T.unsafe(nil), inset: T.unsafe(nil), monospace: T.unsafe(nil), **system_arguments); end

  def _call_input(**system_arguments); end
  def _call_leading_visual_icon(**system_arguments); end
  def _call_results(**system_arguments); end
  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def input; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def input?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def results; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def results?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_input(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_input_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_results(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_results_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AutoComplete::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AutoComplete::DEFAULT_WIDTH = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::AutoComplete::Item < ::Primer::Component
  def initialize(value:, selected: T.unsafe(nil), disabled: T.unsafe(nil), description_variant: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_avatar(**kwargs); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_avatar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_avatar_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AutoComplete::Item::DEFAULT_DESCRIPTION_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AutoComplete::Item::DESCRIPTION_VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::Item::DESCRIPTION_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AutoComplete::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AutoComplete::WIDTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Avatar < ::Primer::Component
  def initialize(src:, alt: T.unsafe(nil), size: T.unsafe(nil), shape: T.unsafe(nil), href: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Avatar::DEFAULT_SHAPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Avatar::DEFAULT_SIZE = T.let(T.unsafe(nil), Integer)
Primer::Beta::Avatar::SHAPE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Avatar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Avatar::SMALL_THRESHOLD = T.let(T.unsafe(nil), Integer)

class Primer::Beta::AvatarStack < ::Primer::Component
  def initialize(tag: T.unsafe(nil), align: T.unsafe(nil), tooltipped: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def avatars; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def avatars?; end

  def before_render; end
  def body_component; end
  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_avatar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_avatar_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_avatars(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AvatarStack::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AvatarStack::BODY_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AvatarStack::DEFAULT_BODY_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::BaseButton < ::Primer::Component
  def initialize(tag: T.unsafe(nil), type: T.unsafe(nil), block: T.unsafe(nil), disabled: T.unsafe(nil), inactive: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__base_button; end
  def call; end
  def disabled; end
  def disabled?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BaseButton::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BaseButton::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BaseButton::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::BaseButton::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Blankslate < ::Primer::Component
  def initialize(narrow: T.unsafe(nil), spacious: T.unsafe(nil), border: T.unsafe(nil), **system_arguments); end

  def _call_description(**system_arguments); end
  def _call_heading(tag:, **system_arguments); end
  def _call_primary_action(href:, **system_arguments); end
  def _call_secondary_action(href:, **system_arguments); end
  def _call_visual_icon(**system_arguments); end
  def _call_visual_image(**system_arguments); end
  def _call_visual_spinner(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def primary_action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def primary_action?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def secondary_action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def secondary_action?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def visual?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_primary_action(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_primary_action_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_secondary_action(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_secondary_action_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_visual_image(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_visual_image_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_visual_spinner(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_visual_spinner_content(content); end

  def wrapper; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Blankslate::VISUAL_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::BorderBox < ::Primer::Component
  def initialize(padding: T.unsafe(nil), **system_arguments); end

  def _call_body(**system_arguments); end
  def _call_footer(**system_arguments); end
  def _call_rows(scheme: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def header?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def rows; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def rows?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_row(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_row_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_rows(collection_args = T.unsafe(nil), &block); end

  private

  def before_render; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BorderBox::DEFAULT_PADDING = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BorderBox::DEFAULT_ROW_SCHEME = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::BorderBox::Header < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_title(tag:, **system_arguments); end
  def id; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def title; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def title?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_title(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_title_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BorderBox::Header::TITLE_TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BorderBox::Header::TITLE_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::BorderBox::PADDING_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::BorderBox::PADDING_SUGGESTION = T.let(T.unsafe(nil), String)
Primer::Beta::BorderBox::ROW_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Breadcrumbs < ::Primer::Component
  def initialize(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Breadcrumbs::ARGS_DENYLIST = T.let(T.unsafe(nil), Hash)
Primer::Beta::Breadcrumbs::ARIA_LABEL = T.let(T.unsafe(nil), Hash)
Primer::Beta::Breadcrumbs::FONT_SIZE_MESSAGE = T.let(T.unsafe(nil), String)

class Primer::Beta::Breadcrumbs::Item < ::Primer::Component
  def initialize(href:, target: T.unsafe(nil), **system_arguments); end

  def call; end
  def href; end
  def href=(_arg0); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  def selected; end
  def selected=(_arg0); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Breadcrumbs::PADDING_MESSAGE = T.let(T.unsafe(nil), String)

class Primer::Beta::Button < ::Primer::Component
  def initialize(base_button_class: T.unsafe(nil), scheme: T.unsafe(nil), size: T.unsafe(nil), block: T.unsafe(nil), align_content: T.unsafe(nil), disabled: T.unsafe(nil), label_wrap: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_icon(**system_arguments); end
  def _call_leading_visual_svg(**system_arguments); end
  def _call_primer__beta__button; end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_visual_counter(**system_arguments); end
  def call; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def trailing_action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def trailing_action?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_svg(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_svg_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_action_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  private

  def before_render; end
  def trimmed_content; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Button::ALIGN_CONTENT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::ALIGN_CONTENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Button::DEFAULT_ALIGN_CONTENT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Button::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::ButtonGroup < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def _call_button(icon: T.unsafe(nil), **kwargs); end
  def _call_clipboard_copy_button(**kwargs); end
  def _call_menu_button(menu_arguments: T.unsafe(nil), button_arguments: T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def buttons; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def buttons?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_button_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_clipboard_copy_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_clipboard_copy_button_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_menu_button(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_menu_button_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ButtonGroup::MenuButton < ::Primer::Component
  def initialize(menu_arguments: T.unsafe(nil), button_arguments: T.unsafe(nil)); end

  def before_render; end
  def call; end
  def render_in(view_context, &block); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopy < ::Primer::Component
  def initialize(value: T.unsafe(nil), **system_arguments); end

  def before_render; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def validate!; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopyBaseButton < ::Primer::Beta::BaseButton
  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopyButton < ::Primer::Beta::Button
  def initialize(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::CloseButton < ::Primer::Component
  def initialize(type: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::CloseButton::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::CloseButton::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Counter < ::Primer::Component
  def initialize(count: T.unsafe(nil), scheme: T.unsafe(nil), limit: T.unsafe(nil), hide_if_zero: T.unsafe(nil), text: T.unsafe(nil), round: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def title; end
  def value; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Counter::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Counter::DEPRECATED_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Counter::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Counter::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Details < ::Primer::Component
  def initialize(overlay: T.unsafe(nil), reset: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def _call_body(tag: T.unsafe(nil), **system_arguments); end
  def _call_summary(button: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  def disabled; end
  def disabled?; end
  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def summary; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def summary?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_summary(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_summary_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Details::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Details::BODY_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Details::NO_OVERLAY = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Details::OVERLAY_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Flash < ::Primer::Component
  def initialize(full: T.unsafe(nil), spacious: T.unsafe(nil), dismissible: T.unsafe(nil), icon: T.unsafe(nil), scheme: T.unsafe(nil), **system_arguments); end

  def _call_action(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def action; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def action?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_action(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_action_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Flash::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Flash::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Heading < ::Primer::Component
  def initialize(tag:, **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Heading::TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Heading::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::IconButton < ::Primer::Component
  def initialize(icon:, scheme: T.unsafe(nil), show_tooltip: T.unsafe(nil), tooltip_direction: T.unsafe(nil), size: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def render_tooltip?; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::IconButton::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::IconButton::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::IconButton::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Label < ::Primer::Component
  def initialize(tag: T.unsafe(nil), scheme: T.unsafe(nil), size: T.unsafe(nil), inline: T.unsafe(nil), variant: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Label::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEPRECATED_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::DEPRECATED_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::INLINE_CLASS = T.let(T.unsafe(nil), String)
Primer::Beta::Label::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Label::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Label::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Link < ::Primer::Component
  def initialize(href: T.unsafe(nil), scheme: T.unsafe(nil), muted: T.unsafe(nil), underline: T.unsafe(nil), **system_arguments); end

  def _call_tooltip(**system_arguments); end
  def before_render; end
  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Link::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Link::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Markdown < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Markdown::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Markdown::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::NavList < ::Primer::Component
  def initialize(selected_item_id: T.unsafe(nil), **system_arguments); end

  def _call_avatar_item(**system_arguments); end
  def _call_group(**system_arguments, &block); end
  def _call_item(**system_arguments, &block); end
  def _call_primer__beta__nav_list; end
  def build_avatar_item(src:, username:, full_name: T.unsafe(nil), full_name_scheme: T.unsafe(nil), component_klass: T.unsafe(nil), avatar_arguments: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments, &block); end
  def call; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def items?; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_avatar_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_avatar_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_divider(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_divider_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_group(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_group_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_item_content(content); end

  private

  def before_render; end
  def both_are_groups?(item1, item2); end
  def divider?(item); end
  def either_is_divider?(item1, item2); end
  def group?(item); end
  def heterogeneous?(item1, item2); end
  def kind(item); end
  def render_divider_between?(item1, item2); end
  def render_outer_list?; end
  def top_level_group; end

  class << self
    def audit_date; end
    def component_status; end
    def custom_element_name; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Divider < ::Primer::Alpha::ActionList::Divider
  def _call_primer__beta__nav_list__divider; end
  def kind; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Group < ::Primer::Alpha::ActionList
  def initialize(selected_item_id: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__nav_list__group; end
  def _call_show_more_item(src:, pages:, component_klass: T.unsafe(nil), **system_arguments); end
  def before_render; end
  def build_avatar_item(component_klass: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments); end
  def call; end
  def expand!; end
  def kind; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def show_more_item; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def show_more_item?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_show_more_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_show_more_item_content(content); end

  class << self
    def custom_element_name; end

    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Heading < ::Primer::Component
  def initialize(title:, id: T.unsafe(nil), heading_level: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__nav_list__heading; end
  def call; end
  def heading_level; end
  def id; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  def system_arguments; end
  def title; end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Item < ::Primer::Alpha::ActionList::Item
  def initialize(selected_item_id: T.unsafe(nil), selected_by_ids: T.unsafe(nil), sub_item: T.unsafe(nil), expanded: T.unsafe(nil), **system_arguments); end

  def _call_items(**system_arguments); end
  def _call_primer__beta__nav_list__item; end
  def active?; end
  def before_render; end
  def call; end
  def expand!; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def kind; end

  # source://view_component/3.13.0/lib/view_component/compiler.rb#124
  def render_template_for(variant = T.unsafe(nil)); end

  def selected_by_ids; end
  def sub_item; end
  def sub_item?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  private

  def active_sub_item?; end
  def current_page?(url); end
  def item_active?(item); end
  def list_class; end

  class << self
    # source://view_component/3.13.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Octicon < ::Primer::Component
  def initialize(icon_name = T.unsafe(nil), icon: T.unsafe(nil), size: T.unsafe(nil), use_symbol: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Octicon::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Octicon::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Octicon::SIZE_MEDIUM = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Octicon::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Octicon::SIZE_XSMALL = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::Popover < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_body(caret: T.unsafe(nil), large: T.unsafe(nil), **system_arguments); end
  def _call_heading(tag: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  def body_component; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Popover::CARET_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Popover::CARET_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Popover::DEFAULT_HEADING_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::ProgressBar < ::Primer::Component
  def initialize(size: T.unsafe(nil), **system_arguments); end

  def _call_items(percentage: T.unsafe(nil), bg: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::ProgressBar::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::ProgressBar::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::ProgressBar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::RelativeTime < ::Primer::Component
  def initialize(datetime:, tense: T.unsafe(nil), prefix: T.unsafe(nil), second: T.unsafe(nil), minute: T.unsafe(nil), hour: T.unsafe(nil), weekday: T.unsafe(nil), day: T.unsafe(nil), month: T.unsafe(nil), year: T.unsafe(nil), time_zone_name: T.unsafe(nil), threshold: T.unsafe(nil), precision: T.unsafe(nil), format: T.unsafe(nil), format_style: T.unsafe(nil), lang: T.unsafe(nil), title: T.unsafe(nil), no_title: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::RelativeTime::DAY_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::DAY_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::DAY_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::FORMAT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::RelativeTime::FORMAT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::FORMAT_STYLE_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::FORMAT_STYLE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::HOUR_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::HOUR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::HOUR_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::MINUTE_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::MINUTE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::MINUTE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::MONTH_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::MONTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::MONTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::PRECISION_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::PRECISION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::SECOND_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::SECOND_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::SECOND_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TENSE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::RelativeTime::TENSE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TIMEZONENAME_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::TIMEZONENAME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TIMEZONE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::WEEKDAY_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::WEEKDAY_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::YEAR_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::YEAR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::YEAR_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Spinner < ::Primer::Component
  def initialize(size: T.unsafe(nil), style: T.unsafe(nil), sr_text: T.unsafe(nil), **system_arguments); end

  def no_aria_label?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Spinner::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Spinner::DEFAULT_SR_TEXT = T.let(T.unsafe(nil), String)
Primer::Beta::Spinner::DEFAULT_STYLE = T.let(T.unsafe(nil), String)
Primer::Beta::Spinner::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Spinner::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::State < ::Primer::Component
  def initialize(title:, scheme: T.unsafe(nil), tag: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::State::DEPRECATED_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::NEW_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SCHEME_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::State::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::State::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Subhead < ::Primer::Component
  def initialize(spacious: T.unsafe(nil), hide_border: T.unsafe(nil), **system_arguments); end

  def _call_actions(**system_arguments); end
  def _call_description(**system_arguments); end
  def _call_heading(tag: T.unsafe(nil), danger: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def heading?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Subhead::DEFAULT_HEADING_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Subhead::DEFAULT_HEADING_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Subhead::HEADING_SIZE_MAP = T.let(T.unsafe(nil), Hash)
Primer::Beta::Subhead::HEADING_SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Subhead::HEADING_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Text < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Text::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::TimelineItem < ::Primer::Component
  def initialize(condensed: T.unsafe(nil), **system_arguments); end

  def _call_avatar(src:, size: T.unsafe(nil), shape: T.unsafe(nil), **system_arguments); end
  def _call_body(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def avatar; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def avatar?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def badge; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def badge?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def body?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_avatar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_avatar_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_badge(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_badge_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::TimelineItem::Badge < ::Primer::Component
  def initialize(icon: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Truncate < ::Primer::Component
  def initialize(**system_arguments); end

  def before_render; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Truncate::TruncateText < ::Primer::Component
  def initialize(priority: T.unsafe(nil), expandable: T.unsafe(nil), max_width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::BlankslateComponent < ::Primer::Component
  def initialize(title: T.unsafe(nil), title_tag: T.unsafe(nil), icon: T.unsafe(nil), icon_size: T.unsafe(nil), image_src: T.unsafe(nil), image_alt: T.unsafe(nil), description: T.unsafe(nil), button_text: T.unsafe(nil), button_url: T.unsafe(nil), button_classes: T.unsafe(nil), link_text: T.unsafe(nil), link_url: T.unsafe(nil), narrow: T.unsafe(nil), large: T.unsafe(nil), spacious: T.unsafe(nil), **system_arguments); end

  def _call_spinner(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def spinner; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def spinner?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_spinner(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_spinner_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Box < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::ButtonComponent < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), variant: T.unsafe(nil), size: T.unsafe(nil), group_item: T.unsafe(nil), block: T.unsafe(nil), dropdown: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_icon(**system_arguments); end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_visual_counter(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  private

  def link?; end
  def trimmed_content; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::ButtonComponent::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::LINK_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::ButtonComponent::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::ButtonComponent::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::ButtonComponent::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::ClassNameHelper
  def class_names(*args); end
end

# source://primer_view_components//lib/primer/classify/utilities.rb#7
class Primer::Classify
  class << self
    # Utility for mapping component configuration into Primer CSS class names.
    #
    # **args can contain utility keys that mimic the interface used by
    # https://github.com/primer/components, as well as the special entries :classes
    # and :style.
    #
    # Returns a hash containing two entries. The :classes entry is a string of
    # Primer CSS class names, including any classes given in the :classes entry
    # in **args. The :style entry is the value of the given :style entry given in
    # **args.
    #
    #
    # Example usage:
    # extract_css_attrs({ mt: 4, py: 2 }) => { classes: "mt-4 py-2", style: nil }
    # extract_css_attrs(classes: "d-flex", mt: 4, py: 2) => { classes: "d-flex mt-4 py-2", style: nil }
    # extract_css_attrs(classes: "d-flex", style: "float: left", mt: 4, py: 2) => { classes: "d-flex mt-4 py-2", style: "float: left" }
    #
    # source://primer_view_components//lib/primer/classify.rb#45
    def call(args = T.unsafe(nil)); end

    private

    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify.rb#128
    def raise_on_invalid_options?; end

    # source://primer_view_components//lib/primer/classify.rb#104
    def validate(key, val, brk); end

    # source://primer_view_components//lib/primer/classify.rb#109
    def validated_class_names(classes); end
  end
end

# source://primer_view_components//lib/primer/classify.rb#23
Primer::Classify::FLEX_ALIGN_ITEMS_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#17
Primer::Classify::FLEX_ALIGN_SELF_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#19
Primer::Classify::FLEX_DIRECTION_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#21
Primer::Classify::FLEX_JUSTIFY_CONTENT_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#9
Primer::Classify::FLEX_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#11
Primer::Classify::FLEX_WRAP_MAPPINGS = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify.rb#25
Primer::Classify::LOOKUP = T.let(T.unsafe(nil), Hash)

# Handler for PrimerCSS utility classes loaded from utilities.rake
#
# source://primer_view_components//lib/primer/classify/utilities.rb#9
class Primer::Classify::Utilities
  class << self
    # source://primer_view_components//lib/primer/classify/utilities.rb#126
    def classes_to_args(classes); end

    # Extract hash from classes ie. "mr-1 mb-2 foo" => { mr: 1, mb: 2, classes: "foo" }
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#95
    def classes_to_hash(classes); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#42
    def classname(key, val, breakpoint = T.unsafe(nil)); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#130
    def hash_to_args(hash); end

    # Get the options for the given key
    #
    # returns Array or nil if key not supported
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#88
    def mappings(key); end

    # Is the key and value responsive
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#81
    def responsive?(key, val); end

    # Does the Utility class support the given key
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#57
    def supported_key?(key); end

    # Does the given selector exist in the utilities file
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#71
    def supported_selector?(selector); end

    # Does the Utility class support the given key and value
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#64
    def supported_value?(key, val); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#145
    def validate(key, val, breakpoint); end

    # Returns the value of attribute validate_class_names.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names; end

    # Sets the attribute validate_class_names
    #
    # @param value the value to set the attribute validate_class_names to.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names=(_arg0); end

    # Returns the value of attribute validate_class_names.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names?; end

    private

    # source://primer_view_components//lib/primer/classify/utilities.rb#171
    def find_selector(selector); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#191
    def infer_selector_key(selector); end
  end
end

# source://primer_view_components//lib/primer/classify/utilities.rb#17
Primer::Classify::Utilities::BREAKPOINTS = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify/utilities.rb#36
Primer::Classify::Utilities::BREAKPOINT_INDEX_CACHE = T.let(T.unsafe(nil), Hash)

# Replacements for some classnames that end up being a different argument key
#
# source://primer_view_components//lib/primer/classify/utilities.rb#20
Primer::Classify::Utilities::REPLACEMENT_KEYS = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/utilities.rb#35
Primer::Classify::Utilities::SUPPORTED_KEY_CACHE = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/utilities.rb#10
Primer::Classify::Utilities::UTILITIES = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/validation.rb#8
class Primer::Classify::Validation
  class << self
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/validation.rb#12
    def invalid?(class_name); end
  end
end

# source://primer_view_components//lib/primer/classify/validation.rb#9
Primer::Classify::Validation::INVALID_CLASS_NAME_PREFIXES = T.let(T.unsafe(nil), Regexp)

class Primer::Component < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Primer::ExperimentalRenderHelpers
  include ::Primer::ExperimentalRenderHelpers::InstanceMethods
  include ::Primer::ExperimentalSlotHelpers
  include ::Primer::AttributesHelper
  include ::Primer::ClassNameHelper
  include ::Primer::FetchOrFallbackHelper
  include ::Primer::TestSelectorHelper
  include ::Primer::JoinStyleArgumentsHelper
  include ::Primer::ViewHelper
  include ::Primer::Status::Dsl
  include ::Primer::Audited::Dsl
  extend ::Primer::ExperimentalSlotHelpers::ClassMethods
  extend ::Primer::Status::Dsl::ClassMethods
  extend ::Primer::Audited::Dsl::ClassMethods

  def audit_date; end
  def audit_date?; end
  def component_status; end
  def component_status?; end

  # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
  def default_url_options; end

  # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
  def default_url_options=(_arg0); end

  # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
  def default_url_options?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def check_denylist(denylist = T.unsafe(nil), **arguments); end
  def deny_aria_key(key, help_text, **arguments); end
  def deny_aria_label(tag:, arguments:); end
  def deny_single_argument(key, help_text, **arguments); end
  def deny_tag_argument(**arguments); end
  def deprecated_component_warning(new_class: T.unsafe(nil), version: T.unsafe(nil)); end
  def raise_on_invalid_aria?; end
  def raise_on_invalid_options?; end
  def should_raise_aria_error?; end
  def should_raise_error?; end
  def silence_deprecations?; end
  def validate_arguments(tag:, denylist_name: T.unsafe(nil), **arguments); end
  def validate_aria_label; end

  class << self
    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/route_set.rb#612
    def _routes; end

    def audit_date; end
    def audit_date=(value); end
    def audit_date?; end
    def component_status; end
    def component_status=(value); end
    def component_status?; end

    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options; end

    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options=(value); end

    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options?; end

    def deprecated?; end
    def generate_id(base_name: T.unsafe(nil)); end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Component::INVALID_ARIA_LABEL_TAGS = T.let(T.unsafe(nil), Array)

class Primer::ConditionalWrapper < ::Primer::Component
  def initialize(condition:, **base_component_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Content < ::Primer::Component
  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::ExperimentalRenderHelpers
  include ::Primer::ExperimentalRenderHelpers::InstanceMethods

  class << self
    def included(base); end
  end
end

module Primer::ExperimentalRenderHelpers::InstanceMethods
  def evaluate_block(*args, **kwargs, &block); end
end

module Primer::ExperimentalSlotHelpers
  mixes_in_class_methods ::Primer::ExperimentalSlotHelpers::ClassMethods

  class << self
    def included(base); end
  end
end

module Primer::ExperimentalSlotHelpers::ClassMethods
  def add_polymorphic_slot_type(slot_name:, type:, callable:); end
end

module Primer::FetchOrFallbackHelper
  def fallback_raises; end
  def fallback_raises=(val); end
  def fetch_or_fallback(allowed_values, given_value, fallback = T.unsafe(nil), deprecated_values: T.unsafe(nil)); end
  def fetch_or_fallback_boolean(given_value, fallback = T.unsafe(nil)); end
  def silence_deprecations?; end

  class << self
    def fallback_raises; end
    def fallback_raises=(val); end
  end
end

class Primer::FetchOrFallbackHelper::InvalidValueError < ::StandardError; end

module Primer::FormHelper
  def inline_form(*args, &block); end
  def primer_fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def primer_form_with(**kwargs, &block); end
  def render_inline_form(*args, &block); end
end

# source://primer_view_components//lib/primer/forms/acts_as_component.rb#6
module Primer::Forms; end

# source://primer_view_components//lib/primer/forms/acts_as_component.rb#8
module Primer::Forms::ActsAsComponent
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#60
  def compile!; end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#55
  def renders_template(glob_pattern, method_name = T.unsafe(nil), &block); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#55
  def renders_templates(glob_pattern, method_name = T.unsafe(nil), &block); end

  # Returns the value of attribute template_root_path.
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#53
  def template_root_path; end

  # Sets the attribute template_root_path
  #
  # @param value the value to set the attribute template_root_path to.
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#53
  def template_root_path=(_arg0); end

  private

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#109
  def compile_template(path); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#77
  def compile_templates_in(template_glob); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#99
  def define_template_method(template_path, method_name); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#73
  def template_globs; end

  class << self
    # @private
    #
    # source://primer_view_components//lib/primer/forms/acts_as_component.rb#46
    def extended(base); end
  end
end

# source://primer_view_components//lib/primer/forms/acts_as_component.rb#10
module Primer::Forms::ActsAsComponent::InstanceMethods
  # :nocov:
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#36
  def before_render; end

  # This is necessary to restore the functionality changed by https://github.com/rails/rails/pull/47194.
  # I would love to remove this at some point, perhaps if we ever decide to replace
  # ActsAsComponent with view component.
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#22
  def capture(*args, &block); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#11
  def content_tag(*_arg0, **_arg1, &_arg2); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#11
  def output_buffer(*_arg0, **_arg1, &_arg2); end

  # :nocov:
  #
  # @raise [NotImplementedError]
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#31
  def perform_render(&_block); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#11
  def render(*_arg0, **_arg1, &_arg2); end

  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#13
  def render_in(view_context, &block); end

  # :nocov:
  #
  # source://primer_view_components//lib/primer/forms/acts_as_component.rb#39
  def set_original_view_context(view_context); end
end

# source://primer_view_components//lib/primer/forms/acts_as_component.rb#50
class Primer::Forms::ActsAsComponent::TemplateGlob < ::Struct
  # Returns the value of attribute glob_pattern
  #
  # @return [Object] the current value of glob_pattern
  def glob_pattern; end

  # Sets the attribute glob_pattern
  #
  # @param value [Object] the value to set the attribute glob_pattern to.
  # @return [Object] the newly set value
  def glob_pattern=(_); end

  # Returns the value of attribute method_name
  #
  # @return [Object] the current value of method_name
  def method_name; end

  # Sets the attribute method_name
  #
  # @param value [Object] the value to set the attribute method_name to.
  # @return [Object] the newly set value
  def method_name=(_); end

  # Returns the value of attribute on_compile_callback
  #
  # @return [Object] the current value of on_compile_callback
  def on_compile_callback; end

  # Sets the attribute on_compile_callback
  #
  # @param value [Object] the value to set the attribute on_compile_callback to.
  # @return [Object] the newly set value
  def on_compile_callback=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://primer_view_components//lib/primer/forms/acts_as_component.rb#51
class Primer::Forms::ActsAsComponent::TemplateParams < ::Struct
  # Returns the value of attribute format
  #
  # @return [Object] the current value of format
  def format; end

  # Sets the attribute format
  #
  # @param value [Object] the value to set the attribute format to.
  # @return [Object] the newly set value
  def format=(_); end

  # Returns the value of attribute identifier
  #
  # @return [Object] the current value of identifier
  def identifier; end

  # Sets the attribute identifier
  #
  # @param value [Object] the value to set the attribute identifier to.
  # @return [Object] the newly set value
  def identifier=(_); end

  # Returns the value of attribute source
  #
  # @return [Object] the current value of source
  def source; end

  # Sets the attribute source
  #
  # @param value [Object] the value to set the attribute source to.
  # @return [Object] the newly set value
  def source=(_); end

  # Returns the value of attribute type
  #
  # @return [Object] the current value of type
  def type; end

  # Sets the attribute type
  #
  # @param value [Object] the value to set the attribute type to.
  # @return [Object] the newly set value
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://primer_view_components//lib/primer/forms/base.rb#6
class Primer::Forms::Base
  include ::Primer::Forms::ActsAsComponent::InstanceMethods
  extend ::Primer::Forms::ActsAsComponent

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/forms/base.rb#99
  def after_content?(*args); end

  # source://primer_view_components//lib/primer/forms/base.rb#86
  def before_render; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/forms/base.rb#95
  def caption_template?(*args); end

  # source://primer_view_components//lib/primer/forms/base.rb#74
  def each_input_in(root_input, &block); end

  # source://primer_view_components//lib/primer/forms/base.rb#59
  def inputs; end

  # source://primer_view_components//lib/primer/forms/base.rb#107
  def perform_render(&_block); end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/forms/base.rb#116
  def render?; end

  # source://primer_view_components//lib/primer/forms/base.rb#103
  def render_caption_template(field_name); end

  private

  # source://primer_view_components//lib/primer/forms/base.rb#122
  def form_object; end

  class << self
    # Returns the value of attribute __vcf_builder.
    #
    # source://primer_view_components//lib/primer/forms/base.rb#12
    def __vcf_builder; end

    # Returns the value of attribute __vcf_form_block.
    #
    # source://primer_view_components//lib/primer/forms/base.rb#12
    def __vcf_form_block; end

    # Returns the value of attribute has_after_content.
    #
    # source://primer_view_components//lib/primer/forms/base.rb#12
    def after_content?; end

    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/forms/base.rb#46
    def caption_template?(field_name); end

    # source://primer_view_components//lib/primer/forms/base.rb#50
    def fields_with_caption_templates; end

    # source://primer_view_components//lib/primer/forms/base.rb#15
    def form(&block); end

    # Returns the value of attribute has_after_content.
    #
    # source://primer_view_components//lib/primer/forms/base.rb#12
    def has_after_content; end

    # @private
    #
    # source://primer_view_components//lib/primer/forms/base.rb#31
    def inherited(base); end

    # source://primer_view_components//lib/primer/forms/base.rb#19
    def new(builder, **options); end

    # source://primer_view_components//lib/primer/forms/base.rb#54
    def sanitize_field_name_for_template_path(field_name); end
  end
end

# source://primer_view_components//lib/primer/forms/form_list.rb#6
class Primer::Forms::FormList
  include ::Primer::Forms::ActsAsComponent::InstanceMethods
  extend ::Primer::Forms::ActsAsComponent

  # @return [FormList] a new instance of FormList
  #
  # source://primer_view_components//lib/primer/forms/form_list.rb#11
  def initialize(*forms); end

  # source://primer_view_components//lib/primer/forms/form_list.rb#15
  def perform_render(&_block); end
end

class Primer::IconButton < ::Primer::Component
  def initialize(icon:, scheme: T.unsafe(nil), box: T.unsafe(nil), tooltip_direction: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def render_tooltip?; end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::IconButton::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::IconButton::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::IconButton::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::JoinStyleArgumentsHelper
  def join_style_arguments(*args); end
end

class Primer::LayoutComponent < ::Primer::Component
  def initialize(responsive: T.unsafe(nil), side: T.unsafe(nil), sidebar_col: T.unsafe(nil), **system_arguments); end

  def _call_main(**system_arguments); end
  def _call_sidebar(**system_arguments); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def main; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def main?; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#92
  def sidebar; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#96
  def sidebar?; end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_main(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_main_content(content); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#87
  def with_sidebar(*args, **_arg1, &block); end

  # source://view_component/3.13.0/lib/view_component/slotable.rb#100
  def with_sidebar_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::LayoutComponent::ALLOWED_SIDEBAR_COLS = T.let(T.unsafe(nil), Array)
Primer::LayoutComponent::ALLOWED_SIDES = T.let(T.unsafe(nil), Array)
Primer::LayoutComponent::DEFAULT_SIDE = T.let(T.unsafe(nil), Symbol)
Primer::LayoutComponent::DEFAULT_SIDEBAR_COL = T.let(T.unsafe(nil), Integer)
Primer::LayoutComponent::MAX_COL = T.let(T.unsafe(nil), Integer)
module Primer::Navigation; end

class Primer::Navigation::TabComponent < ::Primer::Alpha::Navigation::Tab
  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::Octicon; end

class Primer::Octicon::Cache
  class << self
    def clear!; end
    def get_key(symbol:, size:, width: T.unsafe(nil), height: T.unsafe(nil)); end
    def limit; end
    def preload!; end
    def read(key); end
    def set(key, value); end
  end
end

Primer::Octicon::Cache::LOOKUP = T.let(T.unsafe(nil), Hash)
Primer::Octicon::Cache::PRELOADED_ICONS = T.let(T.unsafe(nil), Array)
module Primer::Status; end

module Primer::Status::Dsl
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::Primer::Status::Dsl::ClassMethods

  module GeneratedClassMethods
    def component_status; end
    def component_status=(value); end
    def component_status?; end
  end

  module GeneratedInstanceMethods
    def component_status; end
    def component_status?; end
  end
end

module Primer::Status::Dsl::ClassMethods
  def status(status = T.unsafe(nil)); end
end

Primer::Status::Dsl::STATUSES = T.let(T.unsafe(nil), Hash)
class Primer::Status::Dsl::UnknownStatusError < ::StandardError; end

module Primer::TabNavHelper
  extend ::ActiveSupport::Concern

  def tab_nav_body_classes(classes); end
  def tab_nav_classes(classes); end
  def tab_nav_tab_classes(classes); end
end

Primer::TabNavHelper::EXTRA_ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::TabNavHelper::EXTRA_ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::TabbedComponentHelper
  extend ::ActiveSupport::Concern

  def before_render; end

  private

  def aria_label_for_page_nav(label); end
  def selected_tabs_count; end
  def tab_container_wrapper(with_panel:, **system_arguments); end
  def validate_single_selected_tab; end
end

class Primer::TabbedComponentHelper::MultipleSelectedTabsError < ::StandardError; end

module Primer::TestSelectorHelper
  def add_test_selector(args); end
end

Primer::TestSelectorHelper::TEST_SELECTOR_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Tooltip < ::Primer::Component
  def initialize(label:, direction: T.unsafe(nil), align: T.unsafe(nil), multiline: T.unsafe(nil), no_delay: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Tooltip::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Tooltip::ALIGN_MAPPING = T.let(T.unsafe(nil), Hash)
Primer::Tooltip::DELAY_DEFAULT = T.let(T.unsafe(nil), FalseClass)
Primer::Tooltip::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Tooltip::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Tooltip::MULTILINE_DEFAULT = T.let(T.unsafe(nil), FalseClass)

class Primer::Truncate < ::Primer::Component
  def initialize(tag: T.unsafe(nil), inline: T.unsafe(nil), expandable: T.unsafe(nil), max_width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.13.0/lib/view_component/base.rb#521
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.13.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Truncate::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Truncate::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::UnderlineNavHelper
  extend ::ActiveSupport::Concern

  def underline_nav_action_classes(classes); end
  def underline_nav_body_classes(classes); end
  def underline_nav_classes(classes, align); end
  def underline_nav_tab_classes(classes); end
end

Primer::UnderlineNavHelper::ACTIONS_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::UnderlineNavHelper::ACTIONS_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::UnderlineNavHelper::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::UnderlineNavHelper::ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::UrlHelpers
  extend ::ActionDispatch::Routing::PolymorphicRoutes
  extend ::ActionDispatch::Routing::UrlFor

  class << self
    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options; end

    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options=(_arg0); end

    # source://actionpack/8.0.0.alpha.d7f9347368/lib/action_dispatch/routing/url_for.rb#100
    def default_url_options?; end

    private

    def controller; end
  end
end

# source://primer_view_components//lib/primer/view_components/version.rb#5
module Primer::ViewComponents
  class << self
    # :nocov:
    #
    # source://primer_view_components//lib/primer/view_components.rb#21
    def deprecation; end

    # source://railties/8.0.0.alpha.d7f9347368/lib/rails/engine.rb#414
    def railtie_helpers_paths; end

    # source://railties/8.0.0.alpha.d7f9347368/lib/rails/engine.rb#397
    def railtie_namespace; end

    # source://railties/8.0.0.alpha.d7f9347368/lib/rails/engine.rb#418
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # primer/view_components root directory.
    #
    # source://primer_view_components//lib/primer/view_components.rb#13
    def root; end

    # source://railties/8.0.0.alpha.d7f9347368/lib/rails/engine.rb#403
    def table_name_prefix; end

    # source://railties/8.0.0.alpha.d7f9347368/lib/rails/engine.rb#410
    def use_relative_model_naming?; end
  end
end

# source://primer_view_components//lib/primer/view_components.rb#10
Primer::ViewComponents::DEPRECATION_HORIZON = T.let(T.unsafe(nil), String)

# source://primer_view_components//lib/primer/view_components/engine.rb#9
class Primer::ViewComponents::Engine < ::Rails::Engine
  class << self
    # source://activesupport/8.0.0.alpha.d7f9347368/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

# source://primer_view_components//lib/primer/view_components/version.rb#6
module Primer::ViewComponents::VERSION; end

# source://primer_view_components//lib/primer/view_components/version.rb#7
Primer::ViewComponents::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#8
Primer::ViewComponents::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#9
Primer::ViewComponents::VERSION::PATCH = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#11
Primer::ViewComponents::VERSION::STRING = T.let(T.unsafe(nil), String)

module Primer::ViewHelper
  def primer_heading(*args, **kwargs, &block); end
  def primer_image(*args, **kwargs, &block); end
  def primer_octicon(*args, **kwargs, &block); end
end

Primer::ViewHelper::HELPERS = T.let(T.unsafe(nil), Hash)
class Primer::ViewHelper::ViewHelperNotFound < ::StandardError; end
class RadioButtonGroupForm < ::ApplicationForm; end
class SelectForm < ::ApplicationForm; end
class SingleTextFieldForm < ::ApplicationForm; end
class SubmitButtonForm < ::ApplicationForm; end
class TextFieldAndCheckboxForm < ::ApplicationForm; end
