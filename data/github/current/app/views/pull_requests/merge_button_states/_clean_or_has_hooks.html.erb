<% pull = view.pull %>
<% review_decision = view.merge_state.pull_request_review_policy_decision %>

<div class="ml-0 pl-0 ml-md-6 pl-md-3 my-3 branch-action
  <%= review_decision.changes_requested? ? 'branch-action-state-unstable' : 'branch-action-state-clean' %>
  <%= "branch-action-state-dirty-if-rebasing" unless pull.rebase_safe? %>
  <%= "branch-action-state-error-if-merging" if view.enforce_linear_history? %>">
  <span class="branch-action-icon d-none d-md-flex flex-items-center flex-justify-center">
    <%= primer_octicon(:"git-merge", size: :medium) %>
  </span>
  <div class="branch-action-body timeline-comment--caret">
    <div class="mergeability-details js-details-container Details">
      <%= render "statuses/review_status", view: view %>
      <%= render "statuses/required_conversation_resolution_status", view: view %>
      <% if show_protect_branch_banner?(pull.base_repository) && !pull.repository.advisory_workspace? %>
        <%= render "statuses/protect_default_branch", view: view %>
      <% end %>
      <%= render "statuses/setup_continuous_integration", view: view %>
      <%= render PullRequests::MergeBox::CombinedBranchStatusComponent.new(view) %>
      <include-fragment src="<%= pull_request_actions_prompt_partial_path(id: pull) %>">
      </include-fragment>

      <%= render "statuses/mergeability_status", view: view %>

      <% if view.show_merge_message? %>
        <%= render partial: "pull_requests/merge_button_states/merge_message", locals: { pull: pull, view: view } %>
      <% elsif !view.authorized_to_update_protected_base_branch? %>
        <%= render "pull_requests/unauthorized_merge_button", pull: pull %>
      <% end %>
    </div>
  </div>
</div>
