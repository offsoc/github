# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Proto::RegistryMetadata::V1::Migrator::Common::RequestMeta`.
# Please instead update this file by running `bin/tapioca dsl Proto::RegistryMetadata::V1::Migrator::Common::RequestMeta`.

class Proto::RegistryMetadata::V1::Migrator::Common::RequestMeta
  sig do
    params(
      actor_id: T.nilable(Integer),
      actor_type: T.nilable(T.any(Symbol, Integer)),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(String),
      package_creation_visibility: T.nilable(T.any(Symbol, Integer)),
      repo_id: T.nilable(Integer),
      repo_visibility: T.nilable(T.any(Symbol, Integer)),
      user_agent: T.nilable(String),
      username: T.nilable(String)
    ).void
  end
  def initialize(actor_id: nil, actor_type: nil, owner_id: nil, owner_type: nil, package_creation_visibility: nil, repo_id: nil, repo_visibility: nil, user_agent: nil, username: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def actor_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def actor_type=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_actor_type; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_package_creation_visibility; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_repo_visibility; end

  sig { void }
  def clear_user_agent; end

  sig { void }
  def clear_username; end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(String) }
  def owner_type; end

  sig { params(value: String).void }
  def owner_type=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def package_creation_visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def package_creation_visibility=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def repo_visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def repo_visibility=(value); end

  sig { returns(String) }
  def user_agent; end

  sig { params(value: String).void }
  def user_agent=(value); end

  sig { returns(String) }
  def username; end

  sig { params(value: String).void }
  def username=(value); end
end
