# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::DiscussionCategory`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::DiscussionCategory`.

class Api::App::PlatformTypes::DiscussionCategory < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(String) }
  def emoji; end

  sig { returns(T::Boolean) }
  def emoji?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def emoji_html; end

  sig { returns(T::Boolean) }
  def emoji_html?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_answerable; end

  sig { returns(T::Boolean) }
  def is_answerable?; end

  sig { returns(T::Boolean) }
  def is_pollable; end

  sig { returns(T::Boolean) }
  def is_pollable?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(Api::App::PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(String) }
  def slug; end

  sig { returns(T::Boolean) }
  def slug?; end

  sig { returns(T::Boolean) }
  def supports_announcements; end

  sig { returns(T::Boolean) }
  def supports_announcements?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::DiscussionTemplate)) }
  def template; end

  sig { returns(T::Boolean) }
  def template?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end
end
