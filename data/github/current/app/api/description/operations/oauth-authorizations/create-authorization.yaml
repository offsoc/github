---
summary: Create a new authorization
description: |-
  > [!WARNING]
  > **Deprecation notice:** ${apiName} will discontinue the [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](${externalDocsUrl}/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations) will be removed on November 13 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

  > [!WARNING]
  > Apps must use the [web application flow](${externalDocsUrl}/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with ${apiName} SAML organizations. OAuth tokens created using the Authorizations API will be unable to access ${apiName} SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

  Creates OAuth tokens using [Basic Authentication](${externalDocsUrl}/rest/authentication/authenticating-to-the-rest-api#using-basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](${externalDocsUrl}/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."

  To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.

  You can also create tokens on ${apiName} from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](${externalDocsUrl}/articles/creating-an-access-token-for-command-line-use).

  Organizations that enforce SAML SSO require personal access tokens to be allowed. For more information, see "[About identity and access management with SAML single sign-on](${externalDocsUrl}/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/about-identity-and-access-management-with-saml-single-sign-on)" in the GitHub Enterprise Cloud documentation.
tags:
  - oauth-authorizations
operationId: oauth-authorizations/create-authorization
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations#create-a-new-authorization'
parameters: []
requestBody:
  required: false
  content:
    application/json:
      schema:
        type: object
        properties:
          scopes:
            description: A list of scopes that this authorization is in.
            type: array
            items:
              type: string
            example:
              - public_repo
              - user
            nullable: true
          note:
            description: A note to remind you what the OAuth token is for.
            type: string
            example: Update all gems
          note_url:
            description: A URL to remind you what app the OAuth token is for.
            type: string
          client_id:
            description: The OAuth app client key for which to create the token.
            maxLength: 20
            type: string
          client_secret:
            description: The OAuth app client secret for which to create the token.
            maxLength: 40
            type: string
          fingerprint:
            description: A unique string to distinguish an authorization from others
              created for the same client ID and user.
            type: string
      examples:
        default:
          summary: Create an authorization
          value:
            scopes: ['public_repo']
            note: optional note
            note_url: http://optional/note/url
            client_id: abcde12345fghij67890
            client_secret: 3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f
responses:
  '201':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/authorization.yaml'
        examples:
          default:
            $ref: '../../components/examples/authorization.yaml'
    headers:
      Location:
        example: https://api.github.com/authorizations/1
        schema:
          type: string
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
  '410':
    $ref: '../../components/responses/gone.yaml'
  '304':
    $ref: '../../components/responses/not_modified.yaml'
  '403':
    $ref: '../../components/responses/forbidden.yaml'
  '401':
    $ref: '../../components/responses/requires_authentication.yaml'
x-github-releases:
  - ghes: '>= 2.18'
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: false
  removalDate: '2020-11-13'
  deprecationDate: '2020-02-14'
  category: oauth-authorizations
  subcategory: oauth-authorizations
deprecated: true
x-deprecation-details:
  date: '2020-02-14'
  sunsetDate: '2020-11-13'
x-github-internal:
  path: '/authorizations'
  http-method: post
  service-tier: 2
  owner: '@github/ecosystem-apps'
  published: true
