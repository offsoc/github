{"version":3,"file":"ui_packages_create-branch-button_CreateBranchButton_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/alive/alive.ts","ui/packages/alive/connect-alive-subscription.ts","ui/packages/alive/session.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/copy-to-clipboard/copy.ts","ui/packages/failbot/failbot.ts","ui/packages/get-scrollable-parent/get-scrollable-parent.ts","ui/packages/trusted-types-policies/alive.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/copy-to-clipboard/CopyToClipboardButton.tsx","ui/packages/create-branch-button/components/NewBranchName.tsx","ui/packages/create-branch-button/components/ForkPicker.tsx","ui/packages/create-branch-button/components/LiveBranches.tsx","ui/packages/create-branch-button/CreateBranchButton.tsx","ui/packages/flash-error/FlashError.tsx","ui/packages/portal-tooltip/ControlledTooltip.tsx","ui/packages/portal-tooltip/PortalTooltip.tsx","ui/packages/portal-tooltip/hooks/UsePortalTooltip.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["import type {AliveEvent, MetadataUpdate, Notifier, Subscription} from '@github/alive-client'\nimport {PresenceMetadataSet, SubscriptionSet, isPresenceChannel} from '@github/alive-client'\nimport {AliveSession} from './session'\nimport {debounce} from '@github/mini-throttle'\nimport {ready} from '@github-ui/document-ready'\nimport safeStorage from '@github-ui/safe-storage'\nimport {alivePolicy, InvalidSourceRelError} from '@github-ui/trusted-types-policies/alive'\nimport {isSafari} from '@braintree/browser-detection'\n\nexport interface Dispatchable {\n  dispatchEvent: (e: Event) => unknown\n}\n\nfunction isSharedWorkerSupported(): boolean {\n  // There is currently a bug in safari that causes shared workers to stop working after a while\n  // see https://github.com/github/web-systems/issues/965\n  if (isSafari()) return false\n  return 'SharedWorker' in window && safeStorage('localStorage').getItem('bypassSharedWorker') !== 'true'\n}\n\nexport function workerSrc(): string | null {\n  const url =\n    document.head.querySelector<HTMLLinkElement>(`link[rel=shared-web-socket-src]`)?.getAttribute('href') ?? ''\n  try {\n    return alivePolicy.createScriptURL(url)\n  } catch (e) {\n    if (e instanceof InvalidSourceRelError) {\n      return null\n    }\n    throw e\n  }\n}\n\nfunction socketUrl(): string | null {\n  return document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.href ?? null\n}\n\nfunction socketRefreshUrl(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-refresh-url') ??\n    null\n  )\n}\n\nfunction sessionIdentifier(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-session-id') ?? null\n  )\n}\n\n/**\n * dispatches events of type: 'socket:message' | 'socket:presence'\n */\nfunction notify(subscribers: Iterable<Dispatchable>, {channel, type, data}: AliveEvent) {\n  for (const el of subscribers) {\n    el.dispatchEvent(\n      new CustomEvent(`socket:${type}`, {\n        bubbles: false,\n        cancelable: false,\n        detail: {name: channel, data},\n      }),\n    )\n  }\n}\n\nclass AliveSessionProxy {\n  private worker: SharedWorker\n  private subscriptions = new SubscriptionSet<Dispatchable>()\n  private presenceMetadata = new PresenceMetadataSet<Dispatchable>()\n  private notify: Notifier<Dispatchable>\n\n  constructor(src: string, url: string, refreshUrl: string, sessionId: string, notifier: Notifier<Dispatchable>) {\n    this.notify = notifier\n    // eslint-disable-next-line ssr-friendly/no-dom-globals-in-constructor, compat/compat\n    this.worker = new SharedWorker(src, `github-socket-worker-v2-${sessionId}`)\n    this.worker.port.onmessage = ({data}) => this.receive(data)\n    this.worker.port.postMessage({connect: {url, refreshUrl}})\n  }\n\n  subscribe(subs: Array<Subscription<Dispatchable>>) {\n    const added = this.subscriptions.add(...subs)\n    if (added.length) {\n      this.worker.port.postMessage({subscribe: added})\n    }\n\n    // We may be adding a subscription to a presence channel which is already subscribed.\n    // In this case, we need to explicitly ask the SharedWorker to send us the presence data.\n    const addedChannels = new Set(added.map(topic => topic.name))\n    const redundantPresenceChannels = subs.reduce((redundantChannels, subscription) => {\n      const channel = subscription.topic.name\n\n      if (isPresenceChannel(channel) && !addedChannels.has(channel)) {\n        redundantChannels.add(channel)\n      }\n\n      return redundantChannels\n    }, new Set<string>())\n\n    if (redundantPresenceChannels.size) {\n      this.worker.port.postMessage({requestPresence: Array.from(redundantPresenceChannels)})\n    }\n  }\n\n  unsubscribeAll(...subscribers: Dispatchable[]) {\n    const removed = this.subscriptions.drain(...subscribers)\n    if (removed.length) {\n      this.worker.port.postMessage({unsubscribe: removed})\n    }\n\n    const updatedPresenceChannels = this.presenceMetadata.removeSubscribers(subscribers)\n    this.sendPresenceMetadataUpdate(updatedPresenceChannels)\n  }\n\n  updatePresenceMetadata(metadataUpdates: Array<MetadataUpdate<Dispatchable>>) {\n    const updatedChannels = new Set<string>()\n\n    for (const update of metadataUpdates) {\n      // update the local metadata for this specific element\n      this.presenceMetadata.setMetadata(update)\n      updatedChannels.add(update.channelName)\n    }\n\n    // Send the full local metadata for these channels to the SharedWorker\n    this.sendPresenceMetadataUpdate(updatedChannels)\n  }\n\n  sendPresenceMetadataUpdate(channelNames: Set<string>) {\n    if (!channelNames.size) {\n      return\n    }\n\n    const updatesForSharedWorker: Array<Omit<MetadataUpdate<Element>, 'subscriber'>> = []\n\n    for (const channelName of channelNames) {\n      // get all metadata for this channel (from all elements) to send to the SharedWorker\n      updatesForSharedWorker.push({\n        channelName,\n        metadata: this.presenceMetadata.getChannelMetadata(channelName),\n      })\n    }\n\n    // Send the full metadata updates to the SharedWorker\n    this.worker.port.postMessage({updatePresenceMetadata: updatesForSharedWorker})\n  }\n\n  online() {\n    this.worker.port.postMessage({online: true})\n  }\n\n  offline() {\n    this.worker.port.postMessage({online: false})\n  }\n\n  hangup() {\n    this.worker.port.postMessage({hangup: true})\n  }\n\n  private notifyPresenceDebouncedByChannel = new Map<string, Notifier<Dispatchable>>()\n  private receive(event: AliveEvent) {\n    const {channel} = event\n\n    if (event.type === 'presence') {\n      // There are times when we get a flood of messages from the SharedWorker, such as a tab that has been idle for a long time and then comes back to the foreground.\n      // Since each presence message for a channel contains the full list of users, we can debounce the events and only notify subscribers with the last one\n      let debouncedNotify = this.notifyPresenceDebouncedByChannel.get(channel)\n      if (!debouncedNotify) {\n        debouncedNotify = debounce((subscribers, debouncedEvent) => {\n          this.notify(subscribers, debouncedEvent)\n          this.notifyPresenceDebouncedByChannel.delete(channel)\n        }, 100)\n        this.notifyPresenceDebouncedByChannel.set(channel, debouncedNotify)\n      }\n\n      debouncedNotify(this.subscriptions.subscribers(channel), event)\n      return\n    }\n\n    // For non-presence messages, we can send them through immediately since they may contain different messages/data\n    this.notify(this.subscriptions.subscribers(channel), event)\n  }\n}\n\nasync function connect() {\n  const src = workerSrc()\n  if (!src) return\n\n  const url = socketUrl()\n  if (!url) return\n\n  const refreshUrl = socketRefreshUrl()\n  if (!refreshUrl) return\n\n  const sessionId = sessionIdentifier()\n  if (!sessionId) return\n\n  const createSession = () => {\n    if (isSharedWorkerSupported()) {\n      try {\n        return new AliveSessionProxy(src, url, refreshUrl, sessionId, notify)\n      } catch (_) {\n        // ignore errors.  CSP will some times block SharedWorker creation. Fall back to standard AliveSession.\n      }\n    }\n\n    return new AliveSession(url, refreshUrl, false, notify)\n  }\n  const session = createSession()\n\n  window.addEventListener('online', () => session.online())\n  window.addEventListener('offline', () => session.offline())\n  window.addEventListener('pagehide', () => {\n    if ('hangup' in session) session.hangup()\n  })\n\n  return session\n}\n\nasync function connectWhenReady() {\n  await ready\n  return connect()\n}\n\nlet sessionPromise: undefined | ReturnType<typeof connectWhenReady>\n\nexport function getSession() {\n  return (sessionPromise ||= connectWhenReady())\n}\n","import type {getSession} from '@github-ui/alive'\nimport {Topic} from '@github/alive-client'\n\n/**\n * Connect to an Alive subscription\n * @param aliveSession the Alive session\n * @param channelName the signed channel name\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\n\nexport function connectAliveSubscription<T>(\n  aliveSession: Awaited<ReturnType<typeof getSession>>,\n  channelName: string | null,\n  callback: (data: T) => unknown,\n) {\n  if (!aliveSession) {\n    // the alive session failed to connect\n    throw new Error('Not connected to alive')\n  }\n\n  if (!channelName) {\n    throw new Error('No channel name')\n  }\n\n  const topic = Topic.parse(channelName)\n\n  if (!topic) {\n    throw new Error('Invalid channel name')\n  }\n\n  const aliveSubscription = {\n    subscriber: {\n      dispatchEvent: (event: Event) => {\n        if (event instanceof CustomEvent) {\n          const subscriptionEvent = event.detail\n          callback(subscriptionEvent.data)\n        }\n      },\n    },\n    topic,\n  }\n\n  aliveSession.subscribe([aliveSubscription])\n  return {\n    unsubscribe: () => aliveSession.unsubscribeAll(aliveSubscription.subscriber),\n  }\n}\n","import {AliveSession as BaseAliveSession} from '@github/alive-client'\nimport type {Notifier} from '@github/alive-client'\nexport class AliveSession<T> extends BaseAliveSession<T> {\n  constructor(\n    url: string,\n    private refreshUrl: string,\n    shared: boolean,\n    notify: Notifier<T>,\n  ) {\n    super(url, () => this.getUrlFromRefreshUrl(), shared, notify)\n  }\n\n  private getUrlFromRefreshUrl() {\n    return fetchRefreshUrl(this.refreshUrl)\n  }\n}\n\ntype PostUrl = {url?: string; token?: string}\nasync function fetchRefreshUrl(url: string): Promise<string | null> {\n  const data = await fetchJSON<PostUrl>(url)\n  return data && data.url && data.token ? post(data.url, data.token) : null\n}\n\nasync function fetchJSON<T>(url: string): Promise<T | null> {\n  const response = await fetch(url, {headers: {Accept: 'application/json'}})\n  if (response.ok) {\n    return response.json()\n  } else if (response.status === 404) {\n    return null\n  } else {\n    throw new Error('fetch error')\n  }\n}\n\nasync function post(url: string, csrf: string): Promise<string> {\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'same-origin',\n    headers: {\n      'Scoped-CSRF-Token': csrf,\n    },\n  })\n  if (response.ok) {\n    return response.text()\n  } else {\n    throw new Error('fetch error')\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","function createNode(text: string): Element {\n  const node = document.createElement('pre')\n  node.style.width = '1px'\n  node.style.height = '1px'\n  node.style.position = 'fixed'\n  node.style.top = '5px'\n  node.textContent = text\n  return node\n}\n\nfunction copyNode(node: Element): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(node.textContent || '')\n  }\n\n  const selection = getSelection()\n  if (selection == null) {\n    return Promise.reject(new Error())\n  }\n\n  selection.removeAllRanges()\n\n  const range = document.createRange()\n  range.selectNodeContents(node)\n  selection.addRange(range)\n\n  document.execCommand('copy')\n  selection.removeAllRanges()\n  return Promise.resolve()\n}\n\nexport function copyText(text: string): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(text)\n  }\n\n  const body = document.body\n  if (!body) {\n    return Promise.reject(new Error())\n  }\n\n  const node = createNode(text)\n  body.appendChild(node)\n  copyNode(node)\n  body.removeChild(node)\n  return Promise.resolve()\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","const hasScrollableParent = (node: Element) => {\n  const computedStyle = getComputedStyle(node, null)\n  return ['overflow', 'overflow-y', 'overflow-x'].some(overflow => {\n    const value = computedStyle.getPropertyValue(overflow)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nconst collectParents = (node: Node | null, ps: Node[]): Node[] => {\n  if (!node || node.parentNode === null) {\n    return ps\n  }\n  return collectParents(node.parentNode, ps.concat([node]))\n}\n\n/**\n * Traverse the DOM tree up to find the first scrollable parent of a given element,\n * returning `document.scrollingElement` or `document.documentElement` if none is found\n */\nexport function getScrollableParent(node: HTMLElement | SVGElement) {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return\n  }\n\n  const ps = collectParents(node.parentNode, [])\n\n  for (const item of ps) {\n    if ((item instanceof HTMLElement || item instanceof SVGElement) && hasScrollableParent(item)) {\n      return item\n    }\n  }\n\n  return document.scrollingElement || document.documentElement\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {isStaff} from '@github-ui/stats'\nimport {TrustedTypesPolicyError, trustedTypesPolicy} from './policy'\n\nconst policyName = 'alive'\n\nexport class InvalidSourceRelError extends TrustedTypesPolicyError {}\nexport const alivePolicy = ghTrustedTypes.createPolicy(policyName, {\n  createScriptURL: (url: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        if (!isStaff()) return url\n        if (!url.startsWith('/')) throw new InvalidSourceRelError('Alive worker src URL must start with a slash')\n        return url\n      },\n      policyName,\n      fallback: url,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {usePortalTooltip, type PortalTooltipProps} from '@github-ui/portal-tooltip/use-portal-tooltip'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport type {Icon} from '@primer/octicons-react'\nimport {CheckIcon, CopyIcon} from '@primer/octicons-react'\nimport type {SxProp, TooltipProps} from '@primer/react'\nimport {IconButton, Octicon} from '@primer/react'\nimport React from 'react'\nimport {clsx} from 'clsx'\nimport {Tooltip} from '@primer/react/next'\nimport {announce} from '@github-ui/aria-live'\n\nimport {copyText} from './copy'\n\nconst copyConfirmationMsDelay = 2000\n\nexport interface CopyToClipboardButtonProps extends SxProp {\n  /**\n   * Octicon that is displayed on the copy button\n   *\n   * @default CopyIcon\n   */\n  icon?: Icon\n  /**\n   * Size of the button, passed to IconButton\n   */\n  size?: 'small' | 'medium' | 'large'\n  /**\n   * Optional callback that is invoked when the user clicks the copy button\n   */\n  onCopy?: () => void\n  /**\n   * Text that will be copied to the clipboard\n   */\n  textToCopy: string\n  /**\n   * Props that will be applied to tooltips\n   */\n  tooltipProps?: TooltipProps | PortalTooltipProps\n  /**\n   * Text that will be displayed in the tooltip\n   */\n  ariaLabel?: string | null\n  /**\n   * If the button should be accessible or not\n   */\n  accessibleButton?: boolean\n  /**\n   * Whether or not to use the portal tooltip\n   */\n  hasPortalTooltip?: boolean\n  /**\n   * Whether or not to avoid using styled-components when rendering a portalled tooltip button\n   * If true, underlying icon button will be rendered with <button> + Primer CSS\n   * If false, underlying icon button will be rendered with Primer's <IconButton>\n   * Providing a custom sx prop will override this behavior and use styled-components\n   * @default false\n   */\n  avoidStyledComponent?: boolean\n  /**\n   * Apply Primer CSS utility classes to button\n   * See https://primer.style/foundations/css-utilities\n   */\n  className?: string\n}\n\nexport function CopyToClipboardButton({\n  icon = CopyIcon,\n  size = 'medium',\n  onCopy,\n  sx,\n  textToCopy,\n  tooltipProps,\n  ariaLabel,\n  accessibleButton,\n  hasPortalTooltip = false,\n  avoidStyledComponent = false,\n  className,\n}: CopyToClipboardButtonProps) {\n  const [copied, setCopied] = React.useState(false)\n  const isMounted = useIsMounted()\n  const onClickCopy = () => {\n    setCopied(true)\n    announce('Copied!')\n    void copyText(textToCopy)\n    onCopy?.()\n    setTimeout(() => isMounted() && setCopied(false), copyConfirmationMsDelay)\n  }\n\n  const label = ariaLabel ?? `Copy ${textToCopy} to clipboard`\n  const visibleTooltipText = copied ? 'Copied!' : label\n\n  // We are adding `aria-hidden=\"true\"` to the tooltip because the button has an accessible name.\n  // We don't want to override that when the visible text updates to \"Copied!\" because\n  // our screen reader announcement will let the user know their action was successful in the most\n  // consistent way across browsers and assistive technology.\n  tooltipProps = {...tooltipProps, 'aria-hidden': 'true'}\n\n  if (hasPortalTooltip) {\n    return (\n      <PortalTooltipCopyButton\n        label={label}\n        size={size}\n        textToCopy={textToCopy}\n        copied={copied}\n        onClickCopy={onClickCopy}\n        tooltipProps={tooltipProps}\n        text={visibleTooltipText}\n        avoidStyledComponent={avoidStyledComponent}\n        sx={sx}\n        className={className}\n      />\n    )\n  }\n  return (\n    <Tooltip\n      className=\"position-absolute\"\n      text={visibleTooltipText}\n      aria-label={label}\n      type={'label'}\n      {...tooltipProps}\n    >\n      {/* @ts-expect-error aria-labelledby is automatically added at runtime */}\n      <IconButton\n        icon={copied ? CheckIcon : icon}\n        variant=\"invisible\"\n        size={size}\n        tabIndex={accessibleButton === false ? -1 : 0}\n        className={clsx(copied ? 'color-fg-success' : undefined, className)}\n        sx={{...sx}}\n        onClick={onClickCopy}\n      />\n    </Tooltip>\n  )\n}\n\ninterface PortalTooltipCopyButtonProps extends CopyToClipboardButtonProps {\n  /**\n   * Text that will be displayed in the tooltip\n   */\n  label: string\n  /**\n   * Copy state\n   */\n  copied: boolean\n  /**\n   * Function to call when copy button is clicked\n   */\n  onClickCopy: () => void\n  /**\n   * Text that should be passed in for the visible label when it is different than the aria-label\n   */\n  text?: string\n}\n\nfunction PortalTooltipCopyButton({\n  icon = CopyIcon,\n  size = 'medium',\n  label,\n  accessibleButton,\n  copied,\n  onClickCopy,\n  text,\n  tooltipProps,\n  sx,\n  avoidStyledComponent = false,\n  className,\n}: PortalTooltipCopyButtonProps) {\n  const contentRef = React.useRef<HTMLDivElement>(null)\n  const [buttonContentProps, buttonTooltipElement] = usePortalTooltip({\n    contentRef,\n    'aria-label': label,\n    text,\n    ...tooltipProps,\n  })\n\n  return (\n    <div ref={contentRef} {...buttonContentProps}>\n      <PortalCopyIconButton\n        icon={icon}\n        size={size}\n        label={label}\n        copied={copied}\n        onClickCopy={onClickCopy}\n        accessibleButton={accessibleButton}\n        avoidStyledComponent={avoidStyledComponent}\n        className={className}\n        sx={sx}\n      />\n      {buttonTooltipElement}\n    </div>\n  )\n}\n\ntype CopyIconButtonProps = Pick<\n  PortalTooltipCopyButtonProps,\n  | 'icon'\n  | 'size'\n  | 'label'\n  | 'accessibleButton'\n  | 'copied'\n  | 'onClickCopy'\n  | 'sx'\n  | 'avoidStyledComponent'\n  | 'className'\n>\n\nfunction PortalCopyIconButton({\n  icon = CopyIcon,\n  size = 'medium',\n  label,\n  accessibleButton,\n  copied,\n  onClickCopy,\n  sx,\n  avoidStyledComponent = false,\n  className,\n}: CopyIconButtonProps) {\n  if (avoidStyledComponent && !sx) {\n    return (\n      <button\n        aria-label={label}\n        tabIndex={accessibleButton === false ? -1 : 0}\n        className={clsx(\n          `Button Button--iconOnly Button--invisible Button--${size} ${copied ? 'color-fg-success' : ''}`,\n          className,\n        )}\n        onClick={onClickCopy}\n      >\n        {copied ? <CheckIcon /> : <Octicon icon={icon} />}\n      </button>\n    )\n  }\n\n  return (\n    // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n    <IconButton\n      unsafeDisableTooltip={true}\n      aria-label={label}\n      icon={copied ? CheckIcon : icon}\n      variant=\"invisible\"\n      size={size}\n      tabIndex={accessibleButton === false ? -1 : 0}\n      className={copied ? 'color-fg-success' : undefined}\n      sx={{...sx}}\n      onClick={onClickCopy}\n    />\n  )\n}\n\ntry{ CopyToClipboardButton.displayName ||= 'CopyToClipboardButton' } catch {}\ntry{ PortalTooltipCopyButton.displayName ||= 'PortalTooltipCopyButton' } catch {}\ntry{ PortalCopyIconButton.displayName ||= 'PortalCopyIconButton' } catch {}","import {CopyToClipboardButton} from '@github-ui/copy-to-clipboard'\nimport {FormControl, Box, TextInput} from '@primer/react'\n\nexport function NewBranchName({\n  newBranchName,\n  setNewBranchName,\n}: {\n  newBranchName: string\n  setNewBranchName: (newName: string) => void\n}) {\n  return (\n    <FormControl>\n      <FormControl.Label>New branch name</FormControl.Label>\n      <Box sx={{display: 'flex', width: '100%'}}>\n        <TextInput\n          block\n          className=\"color-bg-subtle\"\n          sx={{borderBottomRightRadius: 0, borderTopRightRadius: 0, width: '88%'}}\n          value={newBranchName}\n          onChange={e => setNewBranchName(e.target.value)}\n        />\n        <Box\n          className=\"color-bg-subtle\"\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            borderRightWidth: 1,\n            borderLeftWidth: 0,\n            borderTopWidth: 1,\n            borderBottomWidth: 1,\n            borderTopRightRadius: '10%',\n            borderBottomRightRadius: '10%',\n            borderColor: 'border.default',\n            borderStyle: 'solid',\n            width: '12%',\n          }}\n        >\n          <CopyToClipboardButton\n            tooltipProps={{direction: 'nw'}}\n            textToCopy={newBranchName}\n            ariaLabel=\"Copy to clipboard\"\n            accessibleButton\n            className=\"pt-1\"\n            sx={{height: 25, width: 25}}\n          />\n        </Box>\n      </Box>\n    </FormControl>\n  )\n}\n\ntry{ NewBranchName.displayName ||= 'NewBranchName' } catch {}","import {type Dispatch, Fragment, type SetStateAction} from 'react'\nimport {AnchoredOverlay, Button, Box, ActionList, Text} from '@primer/react'\nimport {TriangleDownIcon, RepoIcon} from '@primer/octicons-react'\nimport type {Repo} from '../types'\n\nfunction repoNameWithOwner(repo: Repo) {\n  return `${repo.ownerLogin}/${repo.name}`\n}\n\nexport function ForkPicker({\n  isForkSourceOpen,\n  setForkSourceOpen,\n  repoSource,\n  setRepoSource,\n  repository,\n  repositoryParent,\n  setDefaultBranch,\n  setBranchSource,\n}: {\n  isForkSourceOpen: boolean\n  setForkSourceOpen: Dispatch<SetStateAction<boolean>>\n  repoSource: Repo\n  setRepoSource: Dispatch<SetStateAction<Repo>>\n  repository: Repo\n  repositoryParent: Repo\n  setDefaultBranch: Dispatch<SetStateAction<string>>\n  setBranchSource: Dispatch<SetStateAction<string>>\n}) {\n  return (\n    <Fragment>\n      <span className=\"note text-small mt-0\">Choose from this fork or its upstream repository.</span>\n      <AnchoredOverlay\n        open={isForkSourceOpen}\n        overlayProps={{role: 'dialog', width: 'medium'}}\n        onOpen={() => setForkSourceOpen(true)}\n        onClose={() => setForkSourceOpen(false)}\n        renderAnchor={anchorProps => (\n          <>\n            <Button\n              {...anchorProps}\n              trailingVisual={TriangleDownIcon}\n              aria-label={repoNameWithOwner(repoSource)}\n              data-testid=\"anchor-button\"\n            >\n              <Box sx={{display: 'flex'}}>\n                <Box sx={{mr: 1, color: 'fg.muted'}}>\n                  <RepoIcon size=\"small\" />\n                </Box>\n                <Box\n                  sx={{\n                    fontSize: 1,\n                    maxWidth: 125,\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                  }}\n                >\n                  <Text sx={{minWidth: 0}}>&nbsp;{`${repoNameWithOwner(repoSource)}`}</Text>\n                </Box>\n              </Box>\n            </Button>\n          </>\n        )}\n        focusZoneSettings={{disabled: true}}\n      >\n        <div data-testid=\"overlay-content\" id=\"selectPanel\">\n          <ActionList selectionVariant=\"single\">\n            <ActionList.Item\n              selected={repoSource.id === repositoryParent.id}\n              onSelect={() => {\n                setRepoSource(repositoryParent)\n                setDefaultBranch(repositoryParent.defaultBranch)\n                setBranchSource(repositoryParent.defaultBranch)\n                setForkSourceOpen(false)\n              }}\n            >{`${repositoryParent.ownerLogin}/${repositoryParent.name}`}</ActionList.Item>\n            <ActionList.Item\n              selected={repoSource.id === repository.id}\n              onSelect={() => {\n                setRepoSource(repository)\n                setDefaultBranch(repository.defaultBranch)\n                setBranchSource(repository.defaultBranch)\n                setForkSourceOpen(false)\n              }}\n            >{`${repository.ownerLogin}/${repository.name}`}</ActionList.Item>\n          </ActionList>\n        </div>\n      </AnchoredOverlay>\n    </Fragment>\n  )\n}\n\ntry{ ForkPicker.displayName ||= 'ForkPicker' } catch {}","import {useCallback} from 'react'\nimport {useAlive} from '@github-ui/use-alive'\nimport {useSearchParams} from 'react-router-dom'\n\ntype LiveBranchesProps = {\n  channel?: string\n  onUpdate: (data: unknown) => void\n}\ntype AliveResponse = {\n  reason: string\n}\n\nexport function LiveBranches({channel = '', onUpdate}: LiveBranchesProps) {\n  const [, setSearchParams] = useSearchParams()\n  const aliveCallback = useCallback(\n    (args: AliveResponse) => {\n      onUpdate(args)\n      setSearchParams(params => {\n        params.set('branch_event', encodeURIComponent(args.reason))\n        return params\n      })\n    },\n    [onUpdate, setSearchParams],\n  )\n\n  useAlive(channel, aliveCallback)\n  return null\n}\n\ntry{ LiveBranches.displayName ||= 'LiveBranches' } catch {}","import {Fragment, useState} from 'react'\nimport {Box, Button, FormControl} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {RefSelector} from '@github-ui/ref-selector'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport type {Repo} from './types'\nimport {FlashError} from '@github-ui/flash-error'\nimport {NewBranchName} from './components/NewBranchName'\nimport {ForkPicker} from './components/ForkPicker'\nimport {LiveBranches} from './components/LiveBranches'\n\nexport interface CreateBranchButtonProps {\n  branchListCacheKey: string\n  repository: Repo\n  repositoryParent?: Repo\n  createUrl: string\n  helpUrl: string\n  liveReload?: boolean\n}\n\nexport function CreateBranchButton({\n  branchListCacheKey,\n  repository,\n  repositoryParent,\n  createUrl,\n  helpUrl,\n  liveReload,\n}: CreateBranchButtonProps) {\n  const [showModal, setShowModal] = useState(false)\n  const [currentDefaultBranch, setCurrentDefaultBranch] = useState(repository.defaultBranch)\n  const [branchSource, setBranchSource] = useState(repository.defaultBranch)\n  const [newBranchName, setNewBranchName] = useState('')\n  const [repoSource, setRepoSource] = useState<Repo>(repository)\n  const [isForkSourceOpen, setForkSourceOpen] = useState(false)\n  const [ruleErrors, setRuleErrors] = useState<string[] | undefined>(undefined)\n  const [otherErrorMessage, setOtherErrorMessage] = useState<string | undefined>(undefined)\n  const [isNext, setNext] = useState(false)\n  const [isCreating, setCreating] = useState(false)\n  const [channel, setChannel] = useState<string | undefined>(undefined)\n\n  function resetData() {\n    setRuleErrors(undefined)\n    setOtherErrorMessage(undefined)\n    setNewBranchName('')\n    setNext(false)\n  }\n\n  async function createBranch() {\n    if (!isCreating) {\n      setCreating(true)\n      const body = new FormData()\n\n      body.append('name', newBranchName)\n      body.append('branch', branchSource)\n      if (repositoryParent) {\n        body.append('repo', repoSource.id.toString())\n      }\n      body.append('send_response_as_json', 'true')\n\n      const response = await verifiedFetch(createUrl, {\n        method: 'post',\n        body,\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      const json = await response.json()\n\n      if (response.ok) {\n        resetData()\n        setShowModal(false)\n        liveReload && json.channel ? setChannel(json.channel) : window.location.reload()\n      } else {\n        const errorMessage: string = json.error\n        if (errorMessage?.includes('Repository rule violations found')) {\n          setOtherErrorMessage(undefined)\n          setRuleErrors(errorMessage.replace('Repository rule violations found', '').trim().split('\\n\\n').slice(0, 3))\n        } else if (errorMessage) {\n          setRuleErrors(undefined)\n          setOtherErrorMessage(errorMessage.trim())\n        }\n      }\n      setCreating(false)\n    }\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        sx={{marginLeft: 3}}\n        onClick={() => {\n          resetData()\n          setShowModal(true)\n        }}\n      >\n        New branch\n      </Button>\n      {showModal && (\n        <Dialog\n          title=\"Create a branch\"\n          width=\"large\"\n          onClose={() => {\n            setShowModal(false)\n            resetData()\n          }}\n          footerButtons={\n            isNext\n              ? []\n              : [\n                  {\n                    content: 'Cancel',\n                    buttonType: 'normal',\n                    onClick: () => {\n                      setShowModal(false)\n                      resetData()\n                    },\n                  },\n                  {content: 'Create new branch', buttonType: 'primary', onClick: createBranch},\n                ]\n          }\n        >\n          <Fragment>\n            {(ruleErrors || otherErrorMessage) && (\n              <FlashError\n                prefix=\"Unable to create branch:\"\n                errorMessageUsingPrefix={ruleErrors ? 'Please address the rule violations and try again.' : undefined}\n                errorMessageNotUsingPrefix={otherErrorMessage}\n                ruleErrors={ruleErrors}\n                helpUrl={helpUrl}\n              />\n            )}\n            <NewBranchName newBranchName={newBranchName} setNewBranchName={setNewBranchName} />\n            <Box sx={{marginTop: 3}}>\n              <FormControl>\n                <FormControl.Label sx={{marginBottom: 0}}>Source</FormControl.Label>\n                {repositoryParent && (\n                  <ForkPicker\n                    isForkSourceOpen={isForkSourceOpen}\n                    setForkSourceOpen={setForkSourceOpen}\n                    repoSource={repoSource}\n                    setRepoSource={setRepoSource}\n                    repository={repository}\n                    repositoryParent={repositoryParent}\n                    setDefaultBranch={setCurrentDefaultBranch}\n                    setBranchSource={setBranchSource}\n                  />\n                )}\n                <RefSelector\n                  currentCommitish={branchSource}\n                  defaultBranch={currentDefaultBranch}\n                  owner={repoSource.ownerLogin}\n                  repo={repoSource.name}\n                  canCreate={false}\n                  cacheKey={branchListCacheKey}\n                  selectedRefType={'branch'}\n                  onSelectItem={newRef => setBranchSource(newRef)}\n                  closeOnSelect={true}\n                  types={['branch']}\n                  hideShowAll\n                />\n              </FormControl>\n            </Box>\n          </Fragment>\n        </Dialog>\n      )}\n      {channel ? <LiveBranches channel={channel} onUpdate={() => setChannel(undefined)} /> : null}\n    </>\n  )\n}\n\ntry{ CreateBranchButton.displayName ||= 'CreateBranchButton' } catch {}","import {XCircleFillIcon} from '@primer/octicons-react'\nimport {Box, Flash, Link, Octicon} from '@primer/react'\nimport {SafeHTMLText} from '@github-ui/safe-html'\n\nexport function FlashError({\n  prefix,\n  errorMessageUsingPrefix,\n  errorMessageNotUsingPrefix,\n  ruleErrors,\n  helpUrl,\n  flashRef,\n}: {\n  prefix: string\n  errorMessageUsingPrefix?: string\n  errorMessageNotUsingPrefix?: string\n  ruleErrors?: string[]\n  helpUrl: string\n  flashRef?: React.RefObject<HTMLDivElement>\n}) {\n  const isRuleViolation = (ruleErrors?.length || 0) > 0\n\n  return errorMessageUsingPrefix || errorMessageNotUsingPrefix ? (\n    <>\n      <Flash\n        id=\"flash\"\n        variant=\"danger\"\n        className=\"d-flex flex-items-center flex-justify-between\"\n        sx={{marginBottom: 3}}\n        tabIndex={-1}\n        ref={flashRef}\n      >\n        {errorMessageUsingPrefix ? (\n          <div>\n            {prefix} <SafeHTMLText sx={{fontWeight: 'bold'}} unverifiedHTML={errorMessageUsingPrefix} />\n            {isRuleViolation && (\n              <Link\n                href={`${helpUrl}/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets`}\n                sx={{marginLeft: 1}}\n              >\n                Learn more about rulesets.\n              </Link>\n            )}\n          </div>\n        ) : (\n          errorMessageNotUsingPrefix && <div>{errorMessageNotUsingPrefix}</div>\n        )}\n      </Flash>\n      {isRuleViolation && (\n        <Box sx={{marginBottom: 3}}>\n          <Box sx={{fontWeight: 'bold', marginBottom: 1}}>Repository rule violations found:</Box>\n          {ruleErrors?.map(rule => (\n            <Box key={rule} sx={{display: 'flex', alignItems: 'center'}}>\n              <Octicon icon={XCircleFillIcon} size={16} sx={{color: 'danger.fg'}} />\n              <Box sx={{marginLeft: 2}}>{rule}</Box>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </>\n  ) : null\n}\n\ntry{ FlashError.displayName ||= 'FlashError' } catch {}","import {Portal, type PortalProps, sx, type SxProp, themeGet, type TooltipProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {forwardRef, useSyncExternalStore} from 'react'\nimport styled from 'styled-components'\n\n/**\n * This file is a copy of the file at: {@link https://github.com/primer/react/blob/main/src/Tooltip.tsx} with\n * some modifications to allow the tooltip to be controlled by the parent component.\n */\n\nconst TooltipBase = styled.span<SxProp>`\n  &::after {\n    position: absolute;\n    z-index: 1000000;\n    display: none;\n    /* stylelint-disable-next-line primer/spacing */\n    padding: 0.5em 0.75em;\n    font: normal normal 11px/1.5 ${themeGet('fonts.normal')};\n    -webkit-font-smoothing: subpixel-antialiased;\n    color: ${themeGet('colors.fg.onEmphasis')};\n    text-align: center;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: break-word;\n    white-space: pre;\n    pointer-events: none;\n    content: attr(data-visible-text);\n    background: ${themeGet('colors.neutral.emphasisPlus')};\n    border-radius: ${themeGet('radii.2')};\n    opacity: 0;\n  }\n  /* delay animation for tooltip */\n  @keyframes tooltip-appear {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  &.tooltipped-open,\n  &:hover,\n  &:active,\n  &:focus {\n    &::after {\n      display: inline-block;\n      text-decoration: none;\n      animation-name: tooltip-appear;\n      animation-duration: 0.1s;\n      animation-fill-mode: forwards;\n      animation-timing-function: ease-in;\n      animation-delay: 0s;\n    }\n  }\n\n  &.tooltipped-no-delay.tooltipped-open,\n  &.tooltipped-no-delay:hover,\n  &.tooltipped-no-delay:active,\n  &.tooltipped-no-delay:focus {\n    &::after {\n      animation-delay: 0s;\n    }\n  }\n\n  /* Tooltipped south */\n  &.tooltipped-s,\n  &.tooltipped-se,\n  &.tooltipped-sw {\n    &::after {\n      top: 100%;\n      right: 50%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-top: 6px;\n    }\n  }\n  &.tooltipped-se {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -${themeGet('space.3')};\n    }\n  }\n  &.tooltipped-sw::after {\n    margin-right: -${themeGet('space.3')};\n  }\n  /* Tooltips above the object */\n  &.tooltipped-n,\n  &.tooltipped-ne,\n  &.tooltipped-nw {\n    &::after {\n      right: 50%;\n      bottom: 100%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-bottom: 6px;\n    }\n  }\n  &.tooltipped-ne {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -${themeGet('space.3')};\n    }\n  }\n  &.tooltipped-nw::after {\n    margin-right: -${themeGet('space.3')};\n  }\n  /* Move the tooltip body to the center of the object. */\n  &.tooltipped-s::after,\n  &.tooltipped-n::after {\n    transform: translateX(50%);\n  }\n  /* Tooltipped to the left */\n  &.tooltipped-w {\n    &::after {\n      right: 100%;\n      bottom: 50%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-right: 6px;\n      transform: translateY(50%);\n    }\n  }\n  /* tooltipped to the right */\n  &.tooltipped-e {\n    &::after {\n      bottom: 50%;\n      left: 100%;\n      /* stylelint-disable-next-line primer/spacing */\n      margin-left: 6px;\n      transform: translateY(50%);\n    }\n  }\n  &.tooltipped-align-right-2::after {\n    right: 0;\n    margin-right: 0;\n  }\n  &.tooltipped-align-left-2::after {\n    left: 0;\n    margin-left: 0;\n  }\n  ${sx};\n`\n\nexport type ControlledTooltipProps = Omit<TooltipProps, 'children'> & {\n  /**\n   * Whether the tooltip is open or closed\n   */\n  open?: boolean\n  /**\n   * Props passed into the portal\n   */\n  portalProps?: PortalProps\n}\n\nconst noop = () => () => undefined\nconst getServerSideState = () => false\nconst getClientSideState = () => true\n/**\n * An extended `@primer/react` tooltip (based on version 35.21 and prior) which allows for external control\n * using an `open` prop\n */\nexport const ControlledTooltip = forwardRef<HTMLSpanElement, ControlledTooltipProps>(function ControlledPortalTooltip(\n  {direction = 'n', className, text, noDelay, align, wrap, open = false, portalProps = {}, ...rest},\n  ref,\n) {\n  const isClientRender = useSyncExternalStore(noop, getClientSideState, getServerSideState)\n  const classes = clsx(\n    className,\n    `tooltipped-${direction}`,\n    align && `tooltipped-align-${align}-2`,\n    noDelay && 'tooltipped-no-delay',\n    wrap && 'tooltipped-multiline',\n    open && 'tooltipped-open',\n  )\n  if (!isClientRender) return null\n  return (\n    <Portal {...portalProps}>\n      <TooltipBase\n        ref={ref}\n        role=\"tooltip\"\n        aria-label={text}\n        data-visible-text={text || rest['aria-label']}\n        {...rest}\n        sx={{\n          position: 'fixed',\n          zIndex: 1,\n          ...rest.sx,\n        }}\n        className={classes}\n      />\n    </Portal>\n  )\n})\n\ntry{ ControlledTooltip.displayName ||= 'ControlledTooltip' } catch {}","import {getAnchoredPosition, type PositionSettings} from '@primer/behaviors'\nimport {forwardRef, useCallback, useImperativeHandle, useRef, useSyncExternalStore} from 'react'\n\nimport {ControlledTooltip, type ControlledTooltipProps} from './ControlledTooltip'\nimport {getScrollableParent} from '@github-ui/get-scrollable-parent'\n\nexport interface PortalTooltipProps extends ControlledTooltipProps {\n  /**\n   * A ref to the element that the tooltip should be positioned relative to\n   */\n  contentRef: React.RefObject<HTMLElement>\n  anchoredPositionAlignment?: PositionSettings['align']\n  anchorSide?: PositionSettings['side']\n  anchorOffset?: number\n  alignmentOffset?: number\n  allowOutOfBounds?: boolean\n  includeAriaAttributes?: boolean\n}\n\n/**\n * A tooltip that portals an uses absolute positioning to position itself relative to the contentRef\n *\n * it tricks scroll in the nearest scrollable parent to the contentRef to reposition itself.\n *\n * For now this uses the aria-label prop similar to the primer tooltip, but a more complete implementation\n * would allow for using children to tooltip rich content\n */\nexport const PortalTooltip = forwardRef<HTMLSpanElement, PortalTooltipProps & {id: string}>(function PortalTooltip(\n  {contentRef, open, anchoredPositionAlignment, anchorSide, anchorOffset, alignmentOffset, allowOutOfBounds, ...props},\n  forwardedRef,\n) {\n  const ref = useRef<HTMLSpanElement>(null)\n  useImperativeHandle<HTMLSpanElement | null, HTMLSpanElement | null>(forwardedRef, () => ref.current)\n\n  const positionCache = useRef<{left: number; top: number}>({left: 0, top: 0})\n  const position = useSyncExternalStore(\n    useCallback(\n      notify => {\n        if (!ref.current || !contentRef.current || !open) {\n          return () => undefined\n        }\n        const scrollableParent = getScrollableParent(contentRef.current)\n        // eslint-disable-next-line github/prefer-observers\n        scrollableParent?.addEventListener('scroll', notify)\n        return () => {\n          scrollableParent?.removeEventListener('scroll', notify)\n        }\n      },\n      [contentRef, open],\n    ),\n    useCallback(() => {\n      if (!ref.current || !contentRef.current) {\n        return positionCache.current\n      }\n      const nextPosition = getAnchoredPosition(ref.current, contentRef.current, {\n        align: anchoredPositionAlignment ?? 'center',\n        side: anchorSide ?? 'outside-top',\n        alignmentOffset: alignmentOffset ?? 0,\n        anchorOffset: anchorOffset ?? 0,\n        allowOutOfBounds,\n      })\n      if (nextPosition.left !== positionCache.current.left || nextPosition.top !== positionCache.current.top) {\n        positionCache.current = nextPosition\n      }\n      return positionCache.current\n    }, [contentRef, alignmentOffset, anchorOffset, anchoredPositionAlignment, anchorSide, allowOutOfBounds]),\n    useCallback(() => positionCache.current, []),\n  )\n\n  return (\n    <ControlledTooltip\n      {...props}\n      ref={ref}\n      open={open}\n      style={{\n        position: 'absolute',\n        ...position,\n        ...props.style,\n      }}\n    />\n  )\n})\n\ntry{ PortalTooltip.displayName ||= 'PortalTooltip' } catch {}","import {useCallback, useId, useState} from 'react'\n\nimport {PortalTooltip, type PortalTooltipProps} from '../PortalTooltip'\n\nexport type {PortalTooltipProps}\n\n/**\n * A hook that returns a set of props for controlling a portal tooltip from a parent element, as well as the\n * portalled element\n *\n * This provides a simple, base case usage, without having to configure much directly, automatically generating an id and using\n * that for aria-describedby when not given an id to use instead.\n */\nexport function usePortalTooltip({includeAriaAttributes = true, ...props}: PortalTooltipProps) {\n  const id = useId()\n  const [open, setOpen] = useState(false)\n  const isOpen = props.open ?? open\n  const actualId = props.id ?? id\n  const ariaAttributes = includeAriaAttributes\n    ? {\n        'aria-describedby': actualId,\n      }\n    : {}\n\n  const onSetOpen = useCallback(() => setOpen(true), [])\n  const onSetClose = useCallback(() => setOpen(false), [])\n\n  return [\n    {\n      ...ariaAttributes,\n      onPointerEnter: onSetOpen,\n      onPointerLeave: onSetClose,\n      onFocus: onSetOpen,\n      onBlur: onSetClose,\n    },\n    <PortalTooltip key=\"portal-tooltip\" {...props} open={isOpen} id={actualId} />,\n  ] as const\n}\n","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["sessionPromise","notify","subscribers","channel","type","data","el","dispatchEvent","CustomEvent","bubbles","cancelable","detail","name","AliveSessionProxy","subscribe","subs","added","subscriptions","add","length","worker","port","postMessage","addedChannels","Set","map","topic","redundantPresenceChannels","reduce","redundantChannels","subscription","isPresenceChannel","has","size","requestPresence","Array","from","unsubscribeAll","removed","drain","unsubscribe","updatedPresenceChannels","presenceMetadata","removeSubscribers","sendPresenceMetadataUpdate","updatePresenceMetadata","metadataUpdates","updatedChannels","update","setMetadata","channelName","channelNames","updatesForSharedWorker","push","metadata","getChannelMetadata","online","offline","hangup","receive","event","debouncedNotify","notifyPresenceDebouncedByChannel","get","debounce","debouncedEvent","delete","set","constructor","src","url","refreshUrl","sessionId","notifier","SubscriptionSet","PresenceMetadataSet","Map","SharedWorker","onmessage","connect","workerSrc","document","head","querySelector","getAttribute","alivePolicy","createScriptURL","e","InvalidSourceRelError","href","session","createSession","isSafari","window","safeStorage","getItem","_","AliveSession","addEventListener","connectWhenReady","ready","getSession","connectAliveSubscription","aliveSession","callback","Topic","parse","aliveSubscription","subscriber","subscriptionEvent","BaseAliveSession","getUrlFromRefreshUrl","fetchRefreshUrl","shared","fetchJSON","token","post","response","fetch","headers","Accept","ok","json","status","csrf","method","mode","text","queryLast","selector","list","querySelectorAll","requestUri","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","copyText","navigator","clipboard","writeText","body","Promise","reject","node","createNode","createElement","style","width","height","position","top","textContent","appendChild","copyNode","selection","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","resolve","removeChild","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","error","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","value","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","stack","frame","extensions","test","filename","function","Object","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","String","methodName","lineno","lineNumber","toString","colno","column","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","hasScrollableParent","computedStyle","getComputedStyle","overflow","getPropertyValue","collectParents","ps","parentNode","concat","getScrollableParent","HTMLElement","SVGElement","item","scrollingElement","documentElement","policyName","TrustedTypesPolicyError","ghTrustedTypes","createPolicy","trustedTypesPolicy","apply","policy","isStaff","fallback","fallbackOnError","sanitize","silenceErrorReporting","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","slice","output","sendEvent","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createHTML","createScript","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","AliveTestProvider","AliveTestContext","createContext","testSubscribeToAlive","signedChannel","displayName","children","initialMessages","useEffect","users","setTimeout","dispatchAliveTestMessage","Provider","useAlive","isMounted","useIsMounted","useContext","unsubscribeFromAlive","closed","subscribeToAlive","resp","verifiedFetch","path","init","assertRelativePathOrSameOrigin","URL","origin","verifiedFetchJSON","reactFetch","reactFetchJSON","CopyToClipboardButton","icon","CopyIcon","onCopy","sx","textToCopy","tooltipProps","ariaLabel","accessibleButton","hasPortalTooltip","avoidStyledComponent","className","copied","setCopied","React","onClickCopy","announce","label","visibleTooltipText","PortalTooltipCopyButton","Tooltip","aria-label","IconButton","CheckIcon","variant","tabIndex","clsx","onClick","contentRef","buttonContentProps","buttonTooltipElement","usePortalTooltip","div","ref","PortalCopyIconButton","button","Octicon","unsafeDisableTooltip","NewBranchName","newBranchName","setNewBranchName","FormControl","Label","Box","display","TextInput","block","borderBottomRightRadius","borderTopRightRadius","onChange","target","justifyContent","borderRightWidth","borderLeftWidth","borderTopWidth","borderBottomWidth","borderColor","borderStyle","direction","repoNameWithOwner","repo","ownerLogin","ForkPicker","isForkSourceOpen","setForkSourceOpen","repoSource","setRepoSource","repository","repositoryParent","setDefaultBranch","setBranchSource","Fragment","span","AnchoredOverlay","open","overlayProps","role","onOpen","onClose","renderAnchor","anchorProps","Button","trailingVisual","TriangleDownIcon","data-testid","mr","color","RepoIcon","fontSize","maxWidth","textOverflow","whiteSpace","Text","minWidth","focusZoneSettings","disabled","id","ActionList","selectionVariant","Item","selected","onSelect","defaultBranch","LiveBranches","onUpdate","setSearchParams","useSearchParams","aliveCallback","useCallback","args","params","encodeURIComponent","reason","CreateBranchButton","branchListCacheKey","createUrl","helpUrl","liveReload","showModal","setShowModal","useState","currentDefaultBranch","setCurrentDefaultBranch","branchSource","ruleErrors","setRuleErrors","otherErrorMessage","setOtherErrorMessage","isNext","setNext","isCreating","setCreating","setChannel","resetData","createBranch","FormData","append","reload","errorMessage","trim","marginLeft","Dialog","title","footerButtons","buttonType","FlashError","prefix","errorMessageUsingPrefix","errorMessageNotUsingPrefix","marginTop","marginBottom","RefSelector","currentCommitish","owner","canCreate","cacheKey","selectedRefType","onSelectItem","newRef","closeOnSelect","types","hideShowAll","flashRef","isRuleViolation","Flash","SafeHTMLText","fontWeight","unverifiedHTML","Link","rule","alignItems","XCircleFillIcon","TooltipBase","styled","themeGet","noop","getServerSideState","getClientSideState","ControlledTooltip","forwardRef","noDelay","align","wrap","portalProps","rest","isClientRender","useSyncExternalStore","classes","Portal","data-visible-text","zIndex","PortalTooltip","anchoredPositionAlignment","anchorSide","anchorOffset","alignmentOffset","allowOutOfBounds","props","forwardedRef","useRef","useImperativeHandle","current","positionCache","left","scrollableParent","removeEventListener","nextPosition","getAnchoredPosition","side","includeAriaAttributes","useId","setOpen","isOpen","actualId","ariaAttributes","onSetOpen","onSetClose","onPointerEnter","onPointerLeave","onFocus","onBlur","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","html","safeHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","SafeHTMLBox","withSafeHTML","Component","dangerouslySetInnerHTML","__html","SafeHTMLDiv"],"sourceRoot":""}