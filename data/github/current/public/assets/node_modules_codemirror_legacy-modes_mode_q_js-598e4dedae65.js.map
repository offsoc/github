{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_q_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/q.js"],"sourcesContent":["var curPunc,\n    keywords=buildRE([\"abs\",\"acos\",\"aj\",\"aj0\",\"all\",\"and\",\"any\",\"asc\",\"asin\",\"asof\",\"atan\",\"attr\",\"avg\",\"avgs\",\"bin\",\"by\",\"ceiling\",\"cols\",\"cor\",\"cos\",\"count\",\"cov\",\"cross\",\"csv\",\"cut\",\"delete\",\"deltas\",\"desc\",\"dev\",\"differ\",\"distinct\",\"div\",\"do\",\"each\",\"ej\",\"enlist\",\"eval\",\"except\",\"exec\",\"exit\",\"exp\",\"fby\",\"fills\",\"first\",\"fkeys\",\"flip\",\"floor\",\"from\",\"get\",\"getenv\",\"group\",\"gtime\",\"hclose\",\"hcount\",\"hdel\",\"hopen\",\"hsym\",\"iasc\",\"idesc\",\"if\",\"ij\",\"in\",\"insert\",\"inter\",\"inv\",\"key\",\"keys\",\"last\",\"like\",\"list\",\"lj\",\"load\",\"log\",\"lower\",\"lsq\",\"ltime\",\"ltrim\",\"mavg\",\"max\",\"maxs\",\"mcount\",\"md5\",\"mdev\",\"med\",\"meta\",\"min\",\"mins\",\"mmax\",\"mmin\",\"mmu\",\"mod\",\"msum\",\"neg\",\"next\",\"not\",\"null\",\"or\",\"over\",\"parse\",\"peach\",\"pj\",\"plist\",\"prd\",\"prds\",\"prev\",\"prior\",\"rand\",\"rank\",\"ratios\",\"raze\",\"read0\",\"read1\",\"reciprocal\",\"reverse\",\"rload\",\"rotate\",\"rsave\",\"rtrim\",\"save\",\"scan\",\"select\",\"set\",\"setenv\",\"show\",\"signum\",\"sin\",\"sqrt\",\"ss\",\"ssr\",\"string\",\"sublist\",\"sum\",\"sums\",\"sv\",\"system\",\"tables\",\"tan\",\"til\",\"trim\",\"txf\",\"type\",\"uj\",\"ungroup\",\"union\",\"update\",\"upper\",\"upsert\",\"value\",\"var\",\"view\",\"views\",\"vs\",\"wavg\",\"where\",\"where\",\"while\",\"within\",\"wj\",\"wj1\",\"wsum\",\"xasc\",\"xbar\",\"xcol\",\"xcols\",\"xdesc\",\"xexp\",\"xgroup\",\"xkey\",\"xlog\",\"xprev\",\"xrank\"]),\n    E=/[|/&^!+:\\\\\\-*%$=~#;@><,?_\\'\\\"\\[\\(\\]\\)\\s{}]/;\nfunction buildRE(w){return new RegExp(\"^(\"+w.join(\"|\")+\")$\");}\nfunction tokenBase(stream,state){\n  var sol=stream.sol(),c=stream.next();\n  curPunc=null;\n  if(sol)\n    if(c==\"/\")\n      return(state.tokenize=tokenLineComment)(stream,state);\n  else if(c==\"\\\\\"){\n    if(stream.eol()||/\\s/.test(stream.peek()))\n      return stream.skipToEnd(),/^\\\\\\s*$/.test(stream.current())?(state.tokenize=tokenCommentToEOF)(stream):state.tokenize=tokenBase,\"comment\";\n    else\n      return state.tokenize=tokenBase,\"builtin\";\n  }\n  if(/\\s/.test(c))\n    return stream.peek()==\"/\"?(stream.skipToEnd(),\"comment\"):\"null\";\n  if(c=='\"')\n    return(state.tokenize=tokenString)(stream,state);\n  if(c=='`')\n    return stream.eatWhile(/[A-Za-z\\d_:\\/.]/),\"macroName\";\n  if((\".\"==c&&/\\d/.test(stream.peek()))||/\\d/.test(c)){\n    var t=null;\n    stream.backUp(1);\n    if(stream.match(/^\\d{4}\\.\\d{2}(m|\\.\\d{2}([DT](\\d{2}(:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?)?)?)?)/)\n       || stream.match(/^\\d+D(\\d{2}(:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?)?)/)\n       || stream.match(/^\\d{2}:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?/)\n       || stream.match(/^\\d+[ptuv]{1}/))\n      t=\"temporal\";\n    else if(stream.match(/^0[NwW]{1}/)\n            || stream.match(/^0x[\\da-fA-F]*/)\n            || stream.match(/^[01]+[b]{1}/)\n            || stream.match(/^\\d+[chijn]{1}/)\n            || stream.match(/-?\\d*(\\.\\d*)?(e[+\\-]?\\d+)?(e|f)?/))\n      t=\"number\";\n    return(t&&(!(c=stream.peek())||E.test(c)))?t:(stream.next(),\"error\");\n  }\n  if(/[A-Za-z]|\\./.test(c))\n    return stream.eatWhile(/[A-Za-z._\\d]/),keywords.test(stream.current())?\"keyword\":\"variable\";\n  if(/[|/&^!+:\\\\\\-*%$=~#;@><\\.,?_\\']/.test(c))\n    return null;\n  if(/[{}\\(\\[\\]\\)]/.test(c))\n    return null;\n  return\"error\";\n}\nfunction tokenLineComment(stream,state){\n  return stream.skipToEnd(),/\\/\\s*$/.test(stream.current())?(state.tokenize=tokenBlockComment)(stream,state):(state.tokenize=tokenBase),\"comment\";\n}\nfunction tokenBlockComment(stream,state){\n  var f=stream.sol()&&stream.peek()==\"\\\\\";\n  stream.skipToEnd();\n  if(f&&/^\\\\\\s*$/.test(stream.current()))\n    state.tokenize=tokenBase;\n  return\"comment\";\n}\nfunction tokenCommentToEOF(stream){return stream.skipToEnd(),\"comment\";}\nfunction tokenString(stream,state){\n  var escaped=false,next,end=false;\n  while((next=stream.next())){\n    if(next==\"\\\"\"&&!escaped){end=true;break;}\n    escaped=!escaped&&next==\"\\\\\";\n  }\n  if(end)state.tokenize=tokenBase;\n  return\"string\";\n}\nfunction pushContext(state,type,col){state.context={prev:state.context,indent:state.indent,col:col,type:type};}\nfunction popContext(state){state.indent=state.context.indent;state.context=state.context.prev;}\nexport const q = {\n  name: \"q\",\n  startState:function(){\n    return{tokenize:tokenBase,\n           context:null,\n           indent:0,\n           col:0};\n  },\n  token:function(stream,state){\n    if(stream.sol()){\n      if(state.context&&state.context.align==null)\n        state.context.align=false;\n      state.indent=stream.indentation();\n    }\n    //if (stream.eatSpace()) return null;\n    var style=state.tokenize(stream,state);\n    if(style!=\"comment\"&&state.context&&state.context.align==null&&state.context.type!=\"pattern\"){\n      state.context.align=true;\n    }\n    if(curPunc==\"(\")pushContext(state,\")\",stream.column());\n    else if(curPunc==\"[\")pushContext(state,\"]\",stream.column());\n    else if(curPunc==\"{\")pushContext(state,\"}\",stream.column());\n    else if(/[\\]\\}\\)]/.test(curPunc)){\n      while(state.context&&state.context.type==\"pattern\")popContext(state);\n      if(state.context&&curPunc==state.context.type)popContext(state);\n    }\n    else if(curPunc==\".\"&&state.context&&state.context.type==\"pattern\")popContext(state);\n    else if(/atom|string|variable/.test(style)&&state.context){\n      if(/[\\}\\]]/.test(state.context.type))\n        pushContext(state,\"pattern\",stream.column());\n      else if(state.context.type==\"pattern\"&&!state.context.align){\n        state.context.align=true;\n        state.context.col=stream.column();\n      }\n    }\n    return style;\n  },\n  indent:function(state,textAfter,cx){\n    var firstChar=textAfter&&textAfter.charAt(0);\n    var context=state.context;\n    if(/[\\]\\}]/.test(firstChar))\n      while (context&&context.type==\"pattern\")context=context.prev;\n    var closing=context&&firstChar==context.type;\n    if(!context)\n      return 0;\n    else if(context.type==\"pattern\")\n      return context.col;\n    else if(context.align)\n      return context.col+(closing?0:1);\n    else\n      return context.indent+(closing?0:cx.unit);\n  }\n};\n"],"names":["curPunc","keywords","E","tokenBase","stream","state","sol","c","next","tokenize","tokenLineComment","eol","test","peek","skipToEnd","current","tokenCommentToEOF","tokenString","eatWhile","t","backUp","match","tokenBlockComment","f","escaped","end","pushContext","type","col","context","prev","indent","popContext","q","name","startState","token","align","indentation","style","column","textAfter","cx","firstChar","charAt","closing","unit"],"sourceRoot":""}