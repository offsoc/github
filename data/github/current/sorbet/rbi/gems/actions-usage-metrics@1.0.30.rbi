# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `actions-usage-metrics` gem.
# Please instead update this file by running `bin/tapioca gem actions-usage-metrics`.

# source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#1
module ActionsUsageMetrics; end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#297
module ActionsUsageMetrics::Api; end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#298
module ActionsUsageMetrics::Api::V1; end

class ActionsUsageMetrics::Api::V1::CardinalityField
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::DateRangeType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_CURRENT_WEEK = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_LAST_30_DAYS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_LAST_90_DAYS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_LAST_YEAR = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_LATEST_MONTH = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_PREVIOUS_MONTH = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#342
ActionsUsageMetrics::Api::V1::DateRangeType::DATE_RANGE_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::ExportHeader
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::ExportStatus
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#345
ActionsUsageMetrics::Api::V1::ExportStatus::EXPORT_STATUS_COMPLETE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#345
ActionsUsageMetrics::Api::V1::ExportStatus::EXPORT_STATUS_FAILED = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#345
ActionsUsageMetrics::Api::V1::ExportStatus::EXPORT_STATUS_PENDING = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#345
ActionsUsageMetrics::Api::V1::ExportStatus::EXPORT_STATUS_UNKNOWN = T.let(T.unsafe(nil), Integer)

module ActionsUsageMetrics::Api::V1::ExportType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_JOB_USAGE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_REPO_USAGE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_RUNNER_RUNTIME_USAGE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_RUNNER_TYPE_USAGE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_WORKFLOW_PERFORMANCE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#344
ActionsUsageMetrics::Api::V1::ExportType::EXPORT_TYPE_WORKFLOW_USAGE = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::Filter
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::FilterOperator
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_BETWEEN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_CONTAINS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_EQUALS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_GREATER_THAN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_GREATER_THAN_OR_EQUAL = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_LESS_THAN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_LESS_THAN_OR_EQUAL = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_NOT_EQUALS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#343
ActionsUsageMetrics::Api::V1::FilterOperator::FILTER_OPERATOR_UNKNOWN = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::GetAutoCompleteRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetAutoCompleteResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetExportStatusRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetExportStatusResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetJobUsageRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetJobUsageResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetJobsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetJobsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetPerformanceSummaryRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetPerformanceSummaryResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRepoUsageRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRepoUsageResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRunnerRuntimeUsageRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRunnerRuntimeUsageResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRunnerTypeUsageRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetRunnerTypeUsageResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetUsageByRepoWorkflowRunnerRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetUsageByRepoWorkflowRunnerResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetUsageSummaryRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetUsageSummaryResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetWorkflowPerformanceRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetWorkflowPerformanceResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetWorkflowsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::GetWorkflowsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::Job
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::JobUsageItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::OrderBy
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::OrderByDirection
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#347
ActionsUsageMetrics::Api::V1::OrderByDirection::ORDER_BY_DIRECTION_ASC = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#347
ActionsUsageMetrics::Api::V1::OrderByDirection::ORDER_BY_DIRECTION_DESC = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#347
ActionsUsageMetrics::Api::V1::OrderByDirection::ORDER_BY_DIRECTION_UNKNOWN = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::ProjectionOptions
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::RepoUsageItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::RepoWorkflowRunnerUsageItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::RequestOptions
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::RequestType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#348
ActionsUsageMetrics::Api::V1::RequestType::REQUEST_TYPE_PERFORMANCE = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#348
ActionsUsageMetrics::Api::V1::RequestType::REQUEST_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#348
ActionsUsageMetrics::Api::V1::RequestType::REQUEST_TYPE_USAGE = T.let(T.unsafe(nil), Integer)

module ActionsUsageMetrics::Api::V1::RunnerRuntime
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#340
ActionsUsageMetrics::Api::V1::RunnerRuntime::RUNNER_RUNTIME_LINUX = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#340
ActionsUsageMetrics::Api::V1::RunnerRuntime::RUNNER_RUNTIME_MACOS = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#340
ActionsUsageMetrics::Api::V1::RunnerRuntime::RUNNER_RUNTIME_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#340
ActionsUsageMetrics::Api::V1::RunnerRuntime::RUNNER_RUNTIME_WINDOWS = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::RunnerRuntimeUsageItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::RunnerType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#341
ActionsUsageMetrics::Api::V1::RunnerType::RUNNER_TYPE_HOSTED = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#341
ActionsUsageMetrics::Api::V1::RunnerType::RUNNER_TYPE_HOSTED_LARGER = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#341
ActionsUsageMetrics::Api::V1::RunnerType::RUNNER_TYPE_SELF_HOSTED = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#341
ActionsUsageMetrics::Api::V1::RunnerType::RUNNER_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::RunnerTypeUsageItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::Scope
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module ActionsUsageMetrics::Api::V1::ScopeType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#346
ActionsUsageMetrics::Api::V1::ScopeType::SCOPE_TYPE_ORG = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#346
ActionsUsageMetrics::Api::V1::ScopeType::SCOPE_TYPE_REPO = T.let(T.unsafe(nil), Integer)

# source://actions-usage-metrics//ruby/lib/proto/usage_pb.rb#346
ActionsUsageMetrics::Api::V1::ScopeType::SCOPE_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

class ActionsUsageMetrics::Api::V1::StartExportRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::StartExportResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_twirp.rb#25
class ActionsUsageMetrics::Api::V1::UsageApiClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_export_status(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_job_usage(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_jobs(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_performance_summary(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_repo_usage(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_runner_runtime_usage(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_runner_type_usage(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_usage_by_repo_workflow_runner(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_usage_summary(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_workflow_performance(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_workflows(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def start_export(input, req_opts = T.unsafe(nil)); end
end

# source://actions-usage-metrics//ruby/lib/proto/usage_twirp.rb#8
class ActionsUsageMetrics::Api::V1::UsageApiService < ::Twirp::Service; end

class ActionsUsageMetrics::Api::V1::Workflow
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class ActionsUsageMetrics::Api::V1::WorkflowPerformanceItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://actions-usage-metrics//ruby/lib/client/client.rb#7
class ActionsUsageMetrics::Client
  # @return [Client] a new instance of Client
  #
  # source://actions-usage-metrics//ruby/lib/client/client.rb#10
  def initialize(host:, hmac_key:, path_prefix: T.unsafe(nil)); end

  # Returns the value of attribute connection.
  #
  # source://actions-usage-metrics//ruby/lib/client/client.rb#8
  def connection; end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#173
  def get_export_status(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#33
  def get_job_usage(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#117
  def get_jobs(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#145
  def get_performance_summary(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#47
  def get_repo_usage(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#61
  def get_runner_runtime_usage(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#75
  def get_runner_type_usage(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#19
  def get_usage_by_repo_workflow_runner(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#131
  def get_usage_summary(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#89
  def get_workflow_performance(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#103
  def get_workflows(request:); end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#159
  def start_export(request:); end

  private

  # source://actions-usage-metrics//ruby/lib/client/client.rb#197
  def default_headers; end

  # source://actions-usage-metrics//ruby/lib/client/client.rb#189
  def setup_default_connection; end
end

# Faraday middleware to HMAC sign requests from Twirp.
#
# source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#3
class ActionsUsageMetrics::RequestSigningMiddleware
  # @return [RequestSigningMiddleware] a new instance of RequestSigningMiddleware
  #
  # source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#7
  def initialize(app, key); end

  # source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#12
  def call(env); end

  private

  # source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#19
  def request_hmac(time, key); end
end

# source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#4
ActionsUsageMetrics::RequestSigningMiddleware::HMAC_ALGORITHM = T.let(T.unsafe(nil), String)

# source://actions-usage-metrics//ruby/lib/client/request_signing_middleware.rb#5
ActionsUsageMetrics::RequestSigningMiddleware::HMAC_HEADER = T.let(T.unsafe(nil), String)

# source://actions-usage-metrics//ruby/lib/client/version.rb#2
ActionsUsageMetrics::VERSION = T.let(T.unsafe(nil), String)

module Google::Protobuf::MessageExts::ClassMethods; end
