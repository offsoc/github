<%
  user = this_user
  page_info title: user_repositories_title(login: user&.display_login, name: user&.name, is_viewer: user == current_user), breadcrumb: "Repositories"
  type_filter = params[:type]
  phrase = params[:q]
  language = params[:language]
  sort = params[:sort]
%>

<div id="user-repositories-list" data-hpc>
  <% if !private_profile && user_repositories_filtering?(phrase: phrase, language: language, type_filter: type_filter) %>
    <div class="TableObject border-bottom color-border-muted py-3">
      <div class="user-repo-search-results-summary TableObject-item TableObject-item--primary v-align-top">
        <strong><%= number_with_delimiter paginated_repositories.total_entries %></strong>
        <%= "result".pluralize(paginated_repositories.total_entries) %>
        for
        <% if type_filter.present? %>
          <strong><%= type_filter_description(type_filter) %></strong>
        <% end %>
        repositories
        <% if phrase.present? %>
          matching
          <strong><%= phrase %></strong>
        <% end %>
        <% if language.present? %>
          written in <strong><%= get_selected_language(language) %></strong>
        <% end %>
        sorted by <strong><%= sort_order_description(sort_order: sort) %></strong>
      </div>
      <div class="TableObject-item text-right v-align-top">
        <%= link_to url_for(:q => nil, :type => nil, :language => nil, tab: "repositories"),
                :class => "issues-reset-query text-normal d-inline-block ml-3" do %>
          <%= primer_octicon(:x, mt: 1, classes: "issues-reset-query-icon") %>
          Clear filter
        <% end %>
      </div>
    </div>
  <% end %>

  <% if repositories.any? %>
    <%= render InteractionLimits::OverrideBannerComponent.new(
      object: this_user,
      return_to: return_to_path,
      mt: 3,
    ) %>
    <ul data-filterable-for="your-repos-filter" data-filterable-type="substring">
      <% repositories.each do |repository| %>
        <%= render partial: "repositories/repository", locals: { repository: repository } %>
      <% end %>
    </ul>
    <div class="paginate-container">
      <%= will_paginate paginated_repositories, page_links: false, class: "d-flex d-md-inline-block pagination" %>
    </div>
  <% elsif user_repositories_filtering?(phrase: phrase, language: language, type_filter: type_filter) %>
    <%= render Primer::Beta::Blankslate.new(mt: 5) do |c| %>
      <% c.with_heading(tag: :h2) do %>
        <%= user.display_login %> doesn’t have any repositories that match.
      <% end %>
    <% end %>
  <% else %>
    <%= render Primer::Beta::Blankslate.new(mt: 5) do |c| %>
      <% c.with_heading(tag: :h2) do %>
        <%= user.display_login %> doesn’t have any <%= GitHub.public_repositories_available? ? "public " : "" %>repositories yet.
      <% end %>
    <% end %>
  <% end %>
</div>
