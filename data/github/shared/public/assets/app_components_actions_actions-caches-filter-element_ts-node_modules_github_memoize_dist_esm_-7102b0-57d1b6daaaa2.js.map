{"version":3,"file":"chunk-app_components_actions_actions-caches-filter-element_ts-node_modules_github_memoize_dist_esm_-7102b0-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/mini-throttle/dist/decorators.js","node_modules/@github/mini-throttle/dist/index.js","app/components/actions/actions-base-filter.ts","app/components/actions/actions-caches-filter-element.ts","node_modules/@github/memoize/dist/esm/index.js"],"sourcesContent":["import { debounce as db, throttle as th } from './index';\nexport function throttle(wait = 0, opts = {}) {\n    return (proto, name, descriptor) => {\n        if (!descriptor || typeof descriptor.value !== 'function') {\n            throw new Error('debounce can only decorate functions');\n        }\n        const fn = descriptor.value;\n        descriptor.value = th(fn, wait, opts);\n        Object.defineProperty(proto, name, descriptor);\n    };\n}\nexport function debounce(wait = 0, opts = {}) {\n    return (proto, name, descriptor) => {\n        if (!descriptor || typeof descriptor.value !== 'function') {\n            throw new Error('debounce can only decorate functions');\n        }\n        const fn = descriptor.value;\n        descriptor.value = db(fn, wait, opts);\n        Object.defineProperty(proto, name, descriptor);\n    };\n}\n","export function throttle(callback, wait = 0, { start = true, middle = true, once = false } = {}) {\n    let innerStart = start;\n    let last = 0;\n    let timer;\n    let cancelled = false;\n    function fn(...args) {\n        if (cancelled)\n            return;\n        const delta = Date.now() - last;\n        last = Date.now();\n        if (start && middle && delta >= wait) {\n            innerStart = true;\n        }\n        if (innerStart) {\n            innerStart = false;\n            callback.apply(this, args);\n            if (once)\n                fn.cancel();\n        }\n        else if ((middle && delta < wait) || !middle) {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                last = Date.now();\n                callback.apply(this, args);\n                if (once)\n                    fn.cancel();\n            }, !middle ? wait : wait - delta);\n        }\n    }\n    fn.cancel = () => {\n        clearTimeout(timer);\n        cancelled = true;\n    };\n    return fn;\n}\nexport function debounce(callback, wait = 0, { start = false, middle = false, once = false } = {}) {\n    return throttle(callback, wait, { start, middle, once });\n}\n","import type {Suggestion} from '../../assets/modules/github/filter-input'\nimport {BaseFilterElement} from '../../assets/modules/github/filter-input'\nimport {target} from '@github/catalyst'\nimport {debounce} from '@github/mini-throttle/decorators'\n\nexport abstract class ActionsBaseFilter extends BaseFilterElement {\n  @target filterKeywordWarningContainer: HTMLElement\n  @target filterKeywordWarningMessage: HTMLElement\n\n  override showAllQualifiersIfNoneMatch = false\n  override fuzzyMatchQualifiers = true\n  override showSubmissionOptionIfInvalidSearchTerms = true\n  override suggestionsTitle = 'Narrow your search'\n\n  // No space between the value and description because they are\n  // a qualifier:value pair, and qualifiers and values don't have\n  // a space between them.\n  override spaceBetweenValueAndDescription = false\n\n  override renderSearchWarningIfRequired() {\n    // Search warnings are displayed differently in the actions search\n    // so just return empty string here.\n    return ''\n  }\n\n  override postDropdownRender() {\n    this.updateKeywordWarning()\n  }\n\n  override invalidSearchTerms() {\n    return this.getFilterInputStringWithoutQualifiers()\n  }\n\n  // Gets the current filter input with any qualifiers (qualifier:value) removed.\n  getFilterInputStringWithoutQualifiers(): string {\n    return this.searchInput.value.replace(/\\S+:(\"[^\"]+\"?|\\S)*/g, '').trim()\n  }\n\n  updateKeywordWarning() {\n    // Remove any qualifiers from filter string, if there is any free text input, show a warning that it won't\n    // affect the filter result\n    if (this.getFilterInputStringWithoutQualifiers().length === 0) {\n      this.hideKeywordWarning()\n    } else {\n      this.showKeywordWarning()\n    }\n  }\n\n  // We want to hide the warning immediately, but only show them once the user stops typing, so debounce\n  // the show method.\n  hideKeywordWarning() {\n    this.filterKeywordWarningContainer.hidden = true\n  }\n\n  @debounce(300)\n  showKeywordWarning() {\n    if (this.getFilterInputStringWithoutQualifiers().length > 0) {\n      this.filterKeywordWarningMessage.textContent = this.getFilterInputStringWithoutQualifiers()\n      this.filterKeywordWarningContainer.hidden = false\n    }\n  }\n\n  async fetchBranchSuggestions(): Promise<Suggestion[]> {\n    const url = this.searchInput.getAttribute('data-suggested-branches-path')!\n    const branches = await this.cachedJSON<{refs: string[]}>(url)\n    return branches.refs.map(branch => ({value: branch}))\n  }\n}\n","import type {Suggestion} from '../../assets/modules/github/filter-input'\nimport {controller} from '@github/catalyst'\nimport {ActionsBaseFilter} from './actions-base-filter'\n\n@controller\nclass ActionsCachesFilterElement extends ActionsBaseFilter {\n  override fetchQualifierSuggestions(): Suggestion[] {\n    return [\n      {value: 'branch:', description: 'my-branch-name'},\n      {value: 'key:', description: 'key-name'},\n    ]\n  }\n\n  override async fetchSuggestionsForQualifier(qualifier: string): Promise<Suggestion[]> {\n    switch (qualifier) {\n      case 'branch':\n        return this.fetchBranchSuggestions()\n      default:\n        return []\n    }\n  }\n}\n","export function defaultHash(...args) {\n    // JSON.stringify ellides `undefined` and function values by default. We do not want that.\n    return JSON.stringify(args, (_, v) => (typeof v === 'object' ? v : String(v)));\n}\nexport default function memoize(fn, opts = {}) {\n    const { hash = defaultHash, cache = new Map() } = opts;\n    return function (...args) {\n        const id = hash.apply(this, args);\n        if (cache.has(id))\n            return cache.get(id);\n        let result = fn.apply(this, args);\n        if (result instanceof Promise) {\n            // eslint-disable-next-line github/no-then\n            result = result.catch(error => {\n                cache.delete(id);\n                throw error;\n            });\n        }\n        cache.set(id, result);\n        return result;\n    };\n}\n"],"names":["debounce","wait","opts","proto","name","descriptor","value","fn","Object","defineProperty","throttle","callback","start","middle","once","timer","innerStart","last","cancelled","args","delta","Date","now","apply","cancel","clearTimeout","setTimeout","ActionsBaseFilter","BaseFilterElement","renderSearchWarningIfRequired","postDropdownRender","updateKeywordWarning","invalidSearchTerms","getFilterInputStringWithoutQualifiers","searchInput","replace","trim","length","hideKeywordWarning","showKeywordWarning","filterKeywordWarningContainer","hidden","filterKeywordWarningMessage","textContent","fetchBranchSuggestions","url","getAttribute","branches","cachedJSON","refs","map","branch","showAllQualifiersIfNoneMatch","fuzzyMatchQualifiers","showSubmissionOptionIfInvalidSearchTerms","suggestionsTitle","spaceBetweenValueAndDescription","target","ActionsCachesFilterElement","fetchQualifierSuggestions","description","fetchSuggestionsForQualifier","qualifier","controller","defaultHash","JSON","stringify","_","v","String","memoize","hash","cache","Map","id","has","get","result","Promise","catch","error","delete","set"],"sourceRoot":""}