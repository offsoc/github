<%# erblint:counter DeprecatedComponentsCounter 1 %>
<% page_title = "#{entry.persisted? ? "Edit" : "New"} IP allow list entry" %>
<% form_url = entry.persisted? ? resolve_ip_allowlist_entry_path(entry) : ip_allowlist_entries_path %>
<% form_method = entry.persisted? ? :patch : :post %>

<% page_info responsive: false, title: page_title, selected_link: :ip_allowlist_entries %>

<% render_layout = \
  case entry.owner
  when Business
    ->(&blk) {
      render(layout: "businesses/layout", locals: {
        business: entry.owner,
        title: "Security",
        container_attributes: "itemscope itemtype='http://schema.org/Business'"
      }, &blk)
    }
  when Organization
    ->(&blk) { render(layout: "orgs/settings/layout", &blk) }
  when Integration
    ->(&blk) { render(layout: "settings/developer_settings", &blk) }
  end
%>

<%= render_layout.call do %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>
      <a href="<%= owner_security_settings_path %>" data-pjax="true">IP allow list</a> /
      <% if entry.persisted? %>
        Edit IP allow list entry
      <% else %>
        New IP allow list entry
      <% end %>
    <% end %>
  <% end %>
  <%= form_for entry, url: form_url, method: form_method do |f| %>
    <%= f.text_group "Allow list value", :allow_list_value,
      value: entry.allow_list_value,
      required: true,
      error: error_for(entry, :allow_list_value),
      placeholder: "192.30.252.0/22",
      hint: "An IP address or range of addresses in CIDR notation",
      type: :text,
      autocomplete: :off %>
    <%= f.text_group "Name", :name,
      value: entry.name,
      required: false,
      error: error_for(entry, :name),
      placeholder: "Allow access from the Amsterdam office.",
      hint: "A name for the allowed IP address or range",
      type: :text,
      autocomplete: :off %>
    <div class="form-checkbox">
      <label>
        <%= f.check_box :active %>
        Enabled?
      </label>
      <span class="note">This entry will be used to restrict access to content when an IP allow list is enabled</span>
    </div>
    <p class="mb-0"><%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary, "data-disable-with": "") do %>Save<% end %></p>
  <% end %>
<% end %>
