# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Support::HelpHub::V1::RepositoryListItem`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Support::HelpHub::V1::RepositoryListItem`.

class MonolithTwirp::Support::HelpHub::V1::RepositoryListItem
  sig do
    params(
      fork: T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryFork),
      id: T.nilable(Integer),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_login: T.nilable(String),
      status: T.nilable(T.any(Symbol, Integer)),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(fork: nil, id: nil, name: nil, owner_id: nil, owner_login: nil, status: nil, visibility: nil); end

  sig { void }
  def clear_fork; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_login; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_visibility; end

  sig { returns(T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryFork)) }
  def fork; end

  sig { params(value: T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryFork)).void }
  def fork=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(String) }
  def owner_login; end

  sig { params(value: String).void }
  def owner_login=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
