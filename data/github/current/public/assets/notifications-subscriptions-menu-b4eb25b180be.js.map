{"version":3,"file":"notifications-subscriptions-menu-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/notifications-subscriptions-menu/services/api.ts","ui/packages/notifications-subscriptions-menu/components/FilterLabels.tsx","ui/packages/notifications-subscriptions-menu/utils/subscriptions.ts","ui/packages/notifications-subscriptions-menu/components/SubscriptionList.tsx","ui/packages/notifications-subscriptions-menu/components/FooterActions.module.css","ui/packages/notifications-subscriptions-menu/components/FooterActions.tsx","ui/packages/notifications-subscriptions-menu/utils/labels.ts","ui/packages/notifications-subscriptions-menu/utils/threads.ts","ui/packages/notifications-subscriptions-menu/components/ThreadList.module.css","ui/packages/notifications-subscriptions-menu/components/ThreadList.tsx","ui/packages/notifications-subscriptions-menu/NotificationsSubscriptionsMenu.module.css","ui/packages/notifications-subscriptions-menu/NotificationsSubscriptionsMenu.tsx","ui/packages/notifications-subscriptions-menu/notifications-subscriptions-menu.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {verifiedFetch} from '@github-ui/verified-fetch'\n\nexport const request = (url: string) => {\n  return async (formData: FormData) => {\n    try {\n      const response = await verifiedFetch(url, {\n        method: 'POST',\n        body: formData,\n      })\n      if (response.ok) {\n        return response\n      } else {\n        return new Error('Failed to update')\n      }\n    } catch (error) {\n      return error\n    }\n  }\n}\n\nexport const updateSettings = request('/notifications/subscribe')\n","import React from 'react'\nimport {type FC, useCallback, useState} from 'react'\nimport {Button, SelectPanel, Tooltip} from '@primer/react'\nimport {TagIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport FooterActions from './FooterActions'\n\ninterface FilterLabelsProps {\n  items: ItemInput[]\n  labelsText: string\n  selectedLabels: ItemInput[]\n  onChangeLabels: (selected: ItemInput[]) => void\n  applyLabels: () => void\n  resetLabels: () => void\n  filterAction: () => void\n}\n\nfunction FilterLabels(props: FilterLabelsProps) {\n  const [open, setOpen] = useState(false)\n  const [filter, setFilter] = useState('')\n  const filteredItems = props.items.filter(item => item?.text?.toLowerCase().startsWith(filter.toLowerCase()))\n\n  const applyLabelsMenu = useCallback(() => {\n    props.applyLabels()\n    setOpen(false)\n  }, [props])\n\n  const cancelLabelsMenu = useCallback(() => {\n    props.resetLabels()\n    setOpen(false)\n  }, [props])\n\n  const ButtonFilter = React.memo(FilterLabelsButton)\n\n  return (\n    <>\n      <SelectPanel\n        title=\"Select labels\"\n        renderAnchor={anchorProps =>\n          props.items.length === 0 ? (\n            <Tooltip text=\"Add labels to this repository to filter on them.\" direction=\"s\">\n              <ButtonFilter anchorProps={anchorProps} itemsLength={props.items.length} labelsText={props.labelsText} />\n            </Tooltip>\n          ) : (\n            <ButtonFilter anchorProps={anchorProps} itemsLength={props.items.length} labelsText={props.labelsText} />\n          )\n        }\n        placeholderText=\"Filter labels\"\n        open={open}\n        onOpenChange={setOpen}\n        items={filteredItems}\n        selected={props.selectedLabels}\n        onSelectedChange={props.onChangeLabels}\n        onFilterChange={setFilter}\n        showItemDividers={true}\n        overlayProps={{\n          width: 'small',\n          height: 'medium',\n          maxHeight: 'medium',\n        }}\n        footer={\n          <div style={{width: '100%'}}>\n            <FooterActions\n              onCancel={cancelLabelsMenu}\n              onApply={applyLabelsMenu}\n              overrideButtonStyles={{padding: 'var(--base-size-8)'}}\n            />\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default FilterLabels\n\nconst FilterLabelsButton: FC<{\n  anchorProps: React.HTMLAttributes<HTMLElement>\n  itemsLength: number\n  labelsText: string\n}> = ({anchorProps, itemsLength, labelsText}) => {\n  return (\n    <Button\n      leadingVisual={TagIcon}\n      trailingAction={TriangleDownIcon}\n      {...anchorProps}\n      aria-label=\"Filter labels\"\n      aria-describedby=\"select-labels\"\n      aria-haspopup=\"dialog\"\n      size=\"small\"\n      disabled={itemsLength === 0}\n    >\n      {itemsLength === 0 ? (\n        'No labels available'\n      ) : (\n        <>\n          <span className=\"color-fg-muted\">Labels: </span>\n          <span id=\"select-labels\">{labelsText}</span>\n        </>\n      )}\n    </Button>\n  )\n}\n\ntry{ FilterLabels.displayName ||= 'FilterLabels' } catch {}\ntry{ ButtonFilter.displayName ||= 'ButtonFilter' } catch {}","import {createElement} from 'react'\nimport {ArrowRightIcon} from '@primer/octicons-react'\n\nexport enum SubscriptionTypeValue {\n  NONE = 'none',\n  WATCHING = 'watching',\n  IGNORING = 'ignoring',\n  CUSTOM = 'custom',\n}\n\nexport type SubscriptionType = {\n  name: string\n  description: string\n  trailingIcon?: JSX.Element\n  subscriptionType: string\n}\n\nexport const SUBSCRIPTION_TYPE_NAMES: Record<SubscriptionTypeValue, string> = {\n  [SubscriptionTypeValue.NONE]: 'Participating and @mentions',\n  [SubscriptionTypeValue.WATCHING]: 'All Activity',\n  [SubscriptionTypeValue.IGNORING]: 'Ignore',\n  [SubscriptionTypeValue.CUSTOM]: 'Custom',\n} as const\n\nexport const SUBSCRIPTION_TYPE_LABELS: Record<SubscriptionTypeValue, string> = {\n  ...SUBSCRIPTION_TYPE_NAMES,\n  [SubscriptionTypeValue.NONE]: 'Participating', // Shortened label for screen readers\n}\n\nexport const SUBSCRIPTION_TYPE_TEXT: Record<SubscriptionTypeValue, string> = {\n  [SubscriptionTypeValue.NONE]: 'Watch',\n  [SubscriptionTypeValue.WATCHING]: 'Unwatch',\n  [SubscriptionTypeValue.IGNORING]: 'Stop ignoring',\n  [SubscriptionTypeValue.CUSTOM]: 'Unwatch',\n} as const\n\nexport const SUBSCRIPTION_TYPES: SubscriptionType[] = [\n  {\n    name: SUBSCRIPTION_TYPE_NAMES[SubscriptionTypeValue.NONE],\n    description: 'Only receive notifications from this repository when participating or @mentioned.',\n    subscriptionType: SubscriptionTypeValue.NONE,\n  },\n  {\n    name: SUBSCRIPTION_TYPE_NAMES[SubscriptionTypeValue.WATCHING],\n    description: 'Notified of all notifications on this repository.',\n    subscriptionType: SubscriptionTypeValue.WATCHING,\n  },\n  {\n    name: SUBSCRIPTION_TYPE_NAMES[SubscriptionTypeValue.IGNORING],\n    description: 'Never be notified.',\n    subscriptionType: SubscriptionTypeValue.IGNORING,\n  },\n  {\n    name: SUBSCRIPTION_TYPE_NAMES[SubscriptionTypeValue.CUSTOM],\n    description: 'Select events you want to be notified of in addition to participating and @mentions.',\n    trailingIcon: createElement(ArrowRightIcon),\n    subscriptionType: SubscriptionTypeValue.CUSTOM,\n  },\n] as const\n\n// Return the text to show in the button based on the selected subscription\nexport const subscriptionTypeText = (subscription: string) => {\n  return subscription in SUBSCRIPTION_TYPE_TEXT ? SUBSCRIPTION_TYPE_TEXT[subscription as SubscriptionTypeValue] : ''\n}\n\n// Return the text to read out loud based on the selected subscription\nexport const subscriptionStateText = (subscription: string) => {\n  return subscription in SUBSCRIPTION_TYPE_NAMES ? SUBSCRIPTION_TYPE_NAMES[subscription as SubscriptionTypeValue] : ''\n}\n\nexport const subscriptionLabelText = (subscription: string, repositoryName: string) => {\n  const buttonText = subscriptionTypeText(subscription) // Accessible label must start with button text\n  const selection = SUBSCRIPTION_TYPE_LABELS[subscription as SubscriptionTypeValue]\n\n  if (subscription === SubscriptionTypeValue.IGNORING) {\n    return `${buttonText} in ${repositoryName}` // Special case to avoid duplicate 'ignore' wording\n  }\n  return `${buttonText}: ${selection} in ${repositoryName}`\n}\n","import {Fragment} from 'react'\nimport {ActionList, Text} from '@primer/react'\n\nimport {SUBSCRIPTION_TYPES} from '../utils/subscriptions'\n\ninterface SubscriptionListProps {\n  selected: string\n  onSelect: (value: string) => void\n}\n\nfunction SubscriptionList(props: SubscriptionListProps) {\n  return (\n    <ActionList selectionVariant=\"single\">\n      {SUBSCRIPTION_TYPES.map((item, index) => (\n        <Fragment key={index}>\n          <ActionList.Item\n            selected={item.subscriptionType === props.selected}\n            onSelect={() => props.onSelect(item.subscriptionType)}\n          >\n            <Text sx={{fontWeight: 'bold'}}>{item.name}</Text>\n            <ActionList.Description variant=\"block\">{item.description}</ActionList.Description>\n            {item.trailingIcon ? <ActionList.TrailingVisual>{item.trailingIcon}</ActionList.TrailingVisual> : null}\n          </ActionList.Item>\n          {index !== SUBSCRIPTION_TYPES.length - 1 ? <ActionList.Divider /> : ''}\n        </Fragment>\n      ))}\n    </ActionList>\n  )\n}\n\nexport default SubscriptionList\n\ntry{ SubscriptionList.displayName ||= 'SubscriptionList' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"footerContainer\":\"FooterActions-module__footerContainer--Z9ixI\",\"buttonsContainer\":\"FooterActions-module__buttonsContainer--lkkwg\"};","import {useCallback, useState} from 'react'\nimport {Button, Spinner, Text} from '@primer/react'\nimport styles from './FooterActions.module.css'\n\ninterface FooterActionsProps {\n  disabled?: boolean\n  onCancel: () => void\n  onApply: () => void\n  checkStatus?: (callback: () => void) => void\n  showError?: boolean\n  nextFocusRef?: React.RefObject<HTMLElement>\n  overrideButtonStyles?: React.CSSProperties\n}\n\nfunction FooterActions(props: FooterActionsProps) {\n  const [showLoading, setShowLoading] = useState(false)\n\n  const onBlur: React.FocusEventHandler<HTMLElement> = useCallback(() => {\n    props.nextFocusRef?.current?.focus()\n    return true\n  }, [props.nextFocusRef])\n\n  const displayLoading = useCallback(() => {\n    setShowLoading(true)\n  }, [])\n\n  const onApply = useCallback(() => {\n    props.onApply()\n\n    setTimeout(() => {\n      props?.checkStatus && props.checkStatus(displayLoading)\n    }, 600)\n  }, [props, displayLoading])\n\n  return (\n    <div className={styles.footerContainer}>\n      {props.showError ? (\n        <Text sx={{py: 3, pl: 3, color: 'var(--fgColor-muted, var(--color-fg-muted))'}}>Error. Please try again.</Text>\n      ) : null}\n      <div className={styles.buttonsContainer} style={props.overrideButtonStyles ?? {padding: 'var(--base-size-16)'}}>\n        {!props.showError && showLoading ? <Spinner size=\"small\" sx={{mr: 2}} /> : null}\n        <Button\n          size=\"small\"\n          onClick={() => props.onCancel()}\n          onBlur={event => {\n            props.disabled ? onBlur(event) : null\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          disabled={props.disabled}\n          variant=\"primary\"\n          size=\"small\"\n          onClick={() => onApply()}\n          onBlur={onBlur}\n          sx={{ml: 2}}\n        >\n          Apply\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FooterActions\n\ntry{ FooterActions.displayName ||= 'FooterActions' } catch {}","import type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\n\nconst MAX_CHARS = 30\nconst MAX_CHARS_ONE_LABEL = 25\n\n// Return the labels name corrected to show in the SelectPanel button\nexport const labelsCounterText = (labels: ItemInput[]) => {\n  const firstTwoLabels = labelsText(labels, 2)\n  if (labels.length >= 2) {\n    if (labels.length === 2) {\n      return twoLabelsText(labels)\n    }\n\n    const firstThreeLabels = labelsText(labels, 3)\n    if (firstThreeLabels.length > MAX_CHARS) {\n      return `${firstTwoLabels.slice(0, 30)}... +${labels.length - 2} more`\n    } else {\n      const more = labels.length > 3 ? ` +${labels.length - 3} more` : ''\n      return `${firstThreeLabels}${more}`\n    }\n  }\n\n  if (labels.length === 1) {\n    const text = labels[0]?.text || ''\n    return text.length > MAX_CHARS ? `${text.slice(0, 30)}...` : text\n  } else {\n    return 'All'\n  }\n}\n\nconst twoLabelsText = (labels: ItemInput[]) => {\n  const firstLabel = labels[0]?.text || ''\n  const firstTwoLabels = labelsText(labels, 2)\n  if (firstTwoLabels.length > MAX_CHARS) {\n    return firstLabel.length > MAX_CHARS_ONE_LABEL\n      ? `${firstLabel.slice(0, 25)}... +1 more`\n      : `${firstTwoLabels.slice(0, 30)}...`\n  } else {\n    return firstTwoLabels\n  }\n}\n\nconst labelsText = (labels: ItemInput[], noLabels: number) => {\n  return labels\n    .slice(0, noLabels)\n    .map(label => label.text)\n    .join(', ')\n}\n","// Return the thread name corrected to show in the menu\nexport const threadNameText = (thread: string) => {\n  switch (thread) {\n    case 'PullRequest':\n      return 'Pull requests'\n    case 'SecurityAlert':\n      return 'Security alerts'\n    default:\n      return `${thread}s`\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"ThreadList-module__filterContainer--eNebD\",\"threadContent\":\"ThreadList-module__threadContent--Ry8II\",\"threadRow\":\"ThreadList-module__threadRow--lx6FW\"};","import {useState, useCallback, useEffect} from 'react'\nimport {Text, Checkbox, FormControl} from '@primer/react'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport FilterLabels from './FilterLabels'\nimport FooterActions from './FooterActions'\nimport {labelsCounterText} from '../utils/labels'\nimport {threadNameText} from '../utils/threads'\nimport styles from './ThreadList.module.css'\n\nexport type ThreadType = {\n  name: string\n  enabled: boolean\n  subscribed: boolean\n}\n\ninterface ThreadListProps {\n  subscribableThreadTypes: ThreadType[]\n  showLabelSubscriptions: boolean\n  repoLabels: ItemInput[]\n  cancelMenuCallback: () => void\n  appliedThreads: string[]\n  appliedLabels: ItemInput[]\n  subscribedThreads: string[]\n  applyThreads: (selectedThreads: string[]) => void\n  saveThreads: (selectedThreads: string[], selectedLabels: ItemInput[]) => Promise<unknown>\n  showError: boolean\n  isSavingThreads?: boolean\n}\n\nfunction ThreadList(props: ThreadListProps) {\n  const [selectedThreads, setSelectedThread] = useState<string[]>(props.appliedThreads)\n  const [previousLabels, setPreviousLabels] = useState<ItemInput[]>(props.appliedLabels)\n  const [selectedLabels, setSelectedLabels] = useState<ItemInput[]>(props.appliedLabels)\n  const [labelsText, setLabelsText] = useState<string>(labelsCounterText(props.appliedLabels))\n\n  useEffect(() => {\n    // On first render, check if there are labels selected to select the Issue thread by default\n    if (props.appliedLabels.length > 0 && !selectedThreads.includes('Issue')) {\n      setSelectedThread([...selectedThreads, 'Issue'])\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // Toggle thread selection menu\n  const toggleThread = useCallback(\n    (optionThread: string) => {\n      if (selectedThreads && selectedThreads.includes(optionThread)) {\n        setSelectedThread(selectedThreads.filter(thread => thread !== optionThread))\n      } else {\n        setSelectedThread([...selectedThreads, optionThread])\n      }\n    },\n    [selectedThreads],\n  )\n\n  const filterAction = useCallback(() => {\n    props.applyThreads(selectedThreads)\n  }, [props, selectedThreads])\n\n  const onChangeLabels = useCallback((selected: ItemInput[]) => {\n    setSelectedLabels(selected)\n    setLabelsText(labelsCounterText(selected))\n  }, [])\n\n  const applyLabels = useCallback(() => {\n    setPreviousLabels(selectedLabels)\n  }, [selectedLabels])\n\n  const resetLabels = useCallback(() => {\n    setSelectedLabels(previousLabels)\n    setLabelsText(labelsCounterText(previousLabels))\n  }, [previousLabels])\n\n  return (\n    <>\n      <div className={styles.threadContent}>\n        {props.subscribableThreadTypes.map((thread, index) => (\n          <div\n            key={index}\n            className={styles.threadRow}\n            style={\n              index === props.subscribableThreadTypes.length - 1\n                ? {}\n                : {\n                    borderBottom: '1px solid var(--borderColor-default, var(--color-border-default))',\n                  }\n            }\n          >\n            <FormControl>\n              <Checkbox checked={selectedThreads.includes(thread.name)} onChange={() => toggleThread(thread.name)} />\n              <FormControl.Label>{threadNameText(thread.name)}</FormControl.Label>\n            </FormControl>\n            {!thread.enabled ? (\n              <Text as=\"p\" sx={{fontSize: '12px', m: 0, color: 'var(--fgColor-muted)', ml: 'var(--base-size-24)'}}>\n                {threadNameText(thread.name)} are not enabled for this repository\n              </Text>\n            ) : null}\n            <div aria-live=\"polite\">\n              {thread.name === 'Issue' && props.showLabelSubscriptions && selectedThreads.includes('Issue') ? (\n                <div className={styles.filterContainer}>\n                  <FilterLabels\n                    filterAction={filterAction}\n                    items={props.repoLabels}\n                    labelsText={labelsText}\n                    onChangeLabels={onChangeLabels}\n                    selectedLabels={selectedLabels}\n                    applyLabels={applyLabels}\n                    resetLabels={resetLabels}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n      <FooterActions\n        onCancel={props.cancelMenuCallback}\n        onApply={() => props.saveThreads(selectedThreads, selectedLabels)}\n        showError={props.showError}\n        disabled={selectedThreads.length === 0 || props.isSavingThreads}\n      />\n    </>\n  )\n}\n\nexport default ThreadList\n\ntry{ ThreadList.displayName ||= 'ThreadList' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"watchCounter\":\"NotificationsSubscriptionsMenu-module__watchCounter--nAbhU\",\"watchButton\":\"NotificationsSubscriptionsMenu-module__watchButton--ifxlS\"};","import {useState, createRef, useCallback, useMemo} from 'react'\nimport {ActionMenu, Dialog} from '@primer/react'\nimport {BellSlashIcon, EyeIcon} from '@primer/octicons-react'\nimport {updateSettings} from './services/api'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport SubscriptionList from './components/SubscriptionList'\nimport ThreadList, {type ThreadType} from './components/ThreadList'\nimport {SubscriptionTypeValue, subscriptionLabelText, subscriptionTypeText} from './utils/subscriptions'\nimport styles from './NotificationsSubscriptionsMenu.module.css'\n\nexport type LabelType = {\n  id: number\n  name: string\n  html: string\n  color: string\n  description?: string\n  subscribed: boolean\n}\n\nexport interface NotificationsSubscriptionsMenuProps {\n  repositoryId: string\n  repositoryName: string\n  watchersCount: number\n  subscriptionType: string\n  subscribableThreadTypes: ThreadType[]\n  repositoryLabels: LabelType[]\n  showLabelSubscriptions: boolean\n}\n\nexport function NotificationsSubscriptionsMenu({\n  repositoryId,\n  repositoryName,\n  watchersCount,\n  subscriptionType,\n  subscribableThreadTypes,\n  repositoryLabels,\n  showLabelSubscriptions,\n}: NotificationsSubscriptionsMenuProps) {\n  const repoLabels = useMemo(() => {\n    return repositoryLabels.map(label => ({id: label.id, text: label.name, selected: label.subscribed}))\n  }, [repositoryLabels])\n  const selectedLabels = repoLabels.filter(item => item.selected)\n\n  const subscribedThreads = useMemo(() => {\n    return subscribableThreadTypes\n      .map(thread =>\n        thread.subscribed || (thread.name === 'Issue' && showLabelSubscriptions && selectedLabels.length > 0)\n          ? thread.name\n          : null,\n      )\n      .filter(t => t !== null)\n  }, [subscribableThreadTypes, showLabelSubscriptions, selectedLabels])\n\n  const [showError, setShowError] = useState(false)\n\n  // dialog\n  const [isOpen, setIsOpen] = useState(false)\n\n  // Subscription menu states\n  const [selectedSubscription, setSelectedSubscription] = useState(\n    subscribedThreads.length > 0 ? SubscriptionTypeValue.CUSTOM : subscriptionType,\n  )\n  const [previousSubscription, setPreviousSubscription] = useState<string>(selectedSubscription)\n\n  // Thread menu states\n  const [appliedThreads, setAppliedThreads] = useState<string[]>(subscribedThreads)\n  const [appliedLabels, setAppliedLabels] = useState<ItemInput[]>(selectedLabels)\n  const [isSavingThreads, setIsSavingThreads] = useState<boolean>(false)\n\n  const anchorRef = createRef<HTMLButtonElement>()\n\n  const onCloseDialog = useCallback(() => {\n    setIsOpen(false)\n    setSelectedSubscription(previousSubscription)\n  }, [previousSubscription])\n\n  const onCancelCustomMenu = onCloseDialog\n\n  const saveThreads = useCallback(\n    async (selectedThreads: string[], selectedRepoLabels: ItemInput[]) => {\n      setIsSavingThreads(true)\n      setAppliedThreads(selectedThreads)\n      setAppliedLabels(selectedRepoLabels)\n      setPreviousSubscription(SubscriptionTypeValue.CUSTOM)\n\n      const formData = new FormData()\n      formData.set('do', 'custom')\n      formData.set('repository_id', repositoryId)\n      // save thread types\n      selectedThreads.map(threadName => {\n        formData.append(`thread_types[]`, threadName)\n      })\n      // save labels\n      selectedRepoLabels.map(label => {\n        label.id ? formData.append(`labels[]`, label.id.toString()) : null\n      })\n\n      const response = await updateSettings(formData)\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      if (response.ok) {\n        setIsOpen(false)\n        setIsSavingThreads(false)\n      } else {\n        setShowError(true)\n      }\n    },\n    [repositoryId],\n  )\n\n  const saveData = useCallback(\n    async (option: string) => {\n      const formData = new FormData()\n      if (option === SubscriptionTypeValue.IGNORING) {\n        formData.set('do', 'ignore')\n      } else if (option === SubscriptionTypeValue.WATCHING) {\n        formData.set('do', 'subscribed')\n      } else if (\n        option === SubscriptionTypeValue.NONE ||\n        (option === SubscriptionTypeValue.CUSTOM && appliedThreads.length === 0)\n      ) {\n        formData.set('do', 'included')\n      }\n\n      formData.append(`thread_types[]`, '')\n\n      formData.set('repository_id', repositoryId)\n      await updateSettings(formData)\n    },\n    [repositoryId, appliedThreads],\n  )\n\n  // Select menu option: Participating and @mentions, All Activity, Ignore, Custom\n  const selectMenuOption = useCallback(\n    (option: string) => {\n      if (option === SubscriptionTypeValue.CUSTOM) {\n        setIsOpen(true)\n        setSelectedSubscription(SubscriptionTypeValue.CUSTOM)\n      } else {\n        setSelectedSubscription(option)\n        setPreviousSubscription(option)\n        saveData(option)\n        setAppliedThreads([])\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [setSelectedSubscription],\n  )\n\n  const applyThreads = useCallback(\n    (selectedThreads: string[]) => {\n      setAppliedThreads(selectedThreads)\n    },\n    [setAppliedThreads],\n  )\n\n  const ariaLabel = useMemo(\n    () => subscriptionLabelText(selectedSubscription, repositoryName),\n    [selectedSubscription, repositoryName],\n  )\n\n  return (\n    <>\n      <div className=\"d-md-none\">\n        <ActionMenu>\n          <ActionMenu.Button\n            data-testid=\"notifications-subscriptions-menu-button-desktop\"\n            leadingVisual={selectedSubscription === SubscriptionTypeValue.IGNORING ? BellSlashIcon : EyeIcon}\n            trailingAction={null}\n            className={styles.watchButton}\n            aria-label={ariaLabel}\n          >\n            <></>\n          </ActionMenu.Button>\n          <ActionMenu.Overlay width=\"medium\">\n            <SubscriptionList selected={selectedSubscription} onSelect={selectMenuOption} />\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </div>\n      <div className=\"d-none d-md-block\">\n        <ActionMenu>\n          <ActionMenu.Button\n            data-testid=\"notifications-subscriptions-menu-button-mobile\"\n            size=\"small\"\n            leadingVisual={selectedSubscription === SubscriptionTypeValue.IGNORING ? BellSlashIcon : EyeIcon}\n            sx={{'&& [data-component=\"leadingVisual\"]': {color: 'var(--fgColor-muted, var(--color-fg-muted))'}}}\n            aria-label={ariaLabel}\n          >\n            {subscriptionTypeText(selectedSubscription)}\n            <span className={`ml-2 Counter rounded-3 ${styles.watchCounter}`}>{watchersCount}</span>\n          </ActionMenu.Button>\n          <ActionMenu.Overlay width=\"medium\">\n            <SubscriptionList selected={selectedSubscription} onSelect={selectMenuOption} />\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </div>\n      <Dialog returnFocusRef={anchorRef} isOpen={isOpen} onDismiss={() => onCloseDialog()} aria-labelledby=\"header\">\n        <div data-testid=\"inner\">\n          <Dialog.Header id=\"header\">Subscribe to events for {repositoryName}</Dialog.Header>\n          <ThreadList\n            subscribableThreadTypes={subscribableThreadTypes}\n            showLabelSubscriptions={showLabelSubscriptions}\n            cancelMenuCallback={onCancelCustomMenu}\n            appliedThreads={appliedThreads}\n            repoLabels={repoLabels}\n            subscribedThreads={subscribedThreads}\n            applyThreads={applyThreads}\n            appliedLabels={appliedLabels}\n            saveThreads={saveThreads}\n            showError={showError}\n            isSavingThreads={isSavingThreads}\n          />\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\ntry{ NotificationsSubscriptionsMenu.displayName ||= 'NotificationsSubscriptionsMenu' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {NotificationsSubscriptionsMenu} from './NotificationsSubscriptionsMenu'\n\nregisterReactPartial('notifications-subscriptions-menu', {\n  Component: NotificationsSubscriptionsMenu,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["url","ButtonFilter","updateSettings","formData","response","verifiedFetch","method","body","ok","error","SubscriptionTypeValue","SUBSCRIPTION_TYPE_NAMES","SUBSCRIPTION_TYPE_LABELS","SUBSCRIPTION_TYPE_TEXT","SUBSCRIPTION_TYPES","name","description","subscriptionType","trailingIcon","createElement","ArrowRightIcon","subscriptionTypeText","subscription","subscriptionLabelText","repositoryName","buttonText","selection","SubscriptionList","props","ActionList","selectionVariant","map","item","index","Fragment","Item","selected","onSelect","Text","sx","fontWeight","Description","variant","TrailingVisual","length","Divider","displayName","FooterActions","showLoading","setShowLoading","useState","onBlur","useCallback","nextFocusRef","current","focus","displayLoading","onApply","setTimeout","checkStatus","div","className","styles","footerContainer","showError","py","pl","color","buttonsContainer","style","overrideButtonStyles","padding","Spinner","size","mr","Button","onClick","onCancel","event","disabled","ml","FilterLabels","open","setOpen","filter","setFilter","filteredItems","items","text","toLowerCase","startsWith","applyLabelsMenu","applyLabels","cancelLabelsMenu","resetLabels","React","FilterLabelsButton","SelectPanel","title","renderAnchor","anchorProps","Tooltip","direction","itemsLength","labelsText","placeholderText","onOpenChange","selectedLabels","onSelectedChange","onChangeLabels","onFilterChange","showItemDividers","overlayProps","width","height","maxHeight","footer","leadingVisual","TagIcon","trailingAction","TriangleDownIcon","aria-label","aria-describedby","aria-haspopup","span","id","labelsCounterText","firstTwoLabels","labels","twoLabelsText","firstThreeLabels","slice","more","firstLabel","noLabels","label","join","threadNameText","thread","ThreadList","selectedThreads","setSelectedThread","appliedThreads","previousLabels","setPreviousLabels","appliedLabels","setSelectedLabels","setLabelsText","useEffect","includes","toggleThread","optionThread","filterAction","applyThreads","threadContent","subscribableThreadTypes","threadRow","borderBottom","FormControl","Checkbox","checked","onChange","Label","enabled","as","fontSize","m","aria-live","showLabelSubscriptions","filterContainer","repoLabels","cancelMenuCallback","saveThreads","isSavingThreads","NotificationsSubscriptionsMenu","repositoryId","watchersCount","repositoryLabels","useMemo","subscribed","subscribedThreads","t","setShowError","isOpen","setIsOpen","selectedSubscription","setSelectedSubscription","CUSTOM","previousSubscription","setPreviousSubscription","setAppliedThreads","setAppliedLabels","setIsSavingThreads","anchorRef","createRef","onCloseDialog","selectedRepoLabels","FormData","set","threadName","append","toString","saveData","option","IGNORING","WATCHING","NONE","selectMenuOption","ariaLabel","ActionMenu","data-testid","BellSlashIcon","EyeIcon","watchButton","Overlay","watchCounter","Dialog","returnFocusRef","onDismiss","aria-labelledby","Header","registerReactPartial","Component","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","path","init","assertRelativePathOrSameOrigin","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","JSON","stringify","undefined","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","querySelector","document","head","appendChild","onRecoverableError","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","type","value","target"],"sourceRoot":""}