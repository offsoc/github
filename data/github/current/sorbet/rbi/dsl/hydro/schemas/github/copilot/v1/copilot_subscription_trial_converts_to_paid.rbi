# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V1::CopilotSubscriptionTrialConvertsToPaid`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V1::CopilotSubscriptionTrialConvertsToPaid`.

class Hydro::Schemas::Github::Copilot::V1::CopilotSubscriptionTrialConvertsToPaid
  sig do
    params(
      copilot_user_details: T.nilable(Hydro::Schemas::Github::Copilot::V1::Entities::CopilotUserDetails),
      subscription_plan: T.nilable(T.any(Symbol, Integer)),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(copilot_user_details: nil, subscription_plan: nil, user: nil); end

  sig { void }
  def clear_copilot_user_details; end

  sig { void }
  def clear_subscription_plan; end

  sig { void }
  def clear_user; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V1::Entities::CopilotUserDetails)) }
  def copilot_user_details; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Copilot::V1::Entities::CopilotUserDetails)).void }
  def copilot_user_details=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def subscription_plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def subscription_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
