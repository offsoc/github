# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::BillingPlanChange`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::BillingPlanChange`.

class Hydro::Schemas::Github::V1::BillingPlanChange
  sig do
    params(
      action: T.nilable(T.any(Symbol, Integer)),
      current_plan: T.nilable(String),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      previous_plan: T.nilable(String),
      user: T.nilable(String)
    ).void
  end
  def initialize(action: nil, current_plan: nil, organization: nil, previous_plan: nil, user: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def action=(value); end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_current_plan; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_previous_plan; end

  sig { void }
  def clear_user; end

  sig { returns(String) }
  def current_plan; end

  sig { params(value: String).void }
  def current_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(String) }
  def previous_plan; end

  sig { params(value: String).void }
  def previous_plan=(value); end

  sig { returns(String) }
  def user; end

  sig { params(value: String).void }
  def user=(value); end
end
