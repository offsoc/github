have_func: checking for rb_hash_clear() in ruby.h... -------------------- yes

LD_LIBRARY_PATH=.:/usr/share/rbenv/versions/3.3.4/lib "gcc -o conftest -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/x86_64-linux -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/ruby/backward -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0 -I. -Wdate-time -D_FORTIFY_SOURCE=2   -g -O2 -fdebug-prefix-map=/tmp/brew2deb/packages/ruby=. -fstack-protector-strong -Wformat -Werror=format-security conftest.c  -L. -L/usr/share/rbenv/versions/3.3.4/lib -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -fstack-protector-strong -rdynamic -Wl,-export-dynamic     -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L/usr/share/rbenv/versions/3.3.4/lib -lruby-static -lz -lrt -lrt -ljemalloc -lgmp -ldl -lcrypt -lm -lpthread   -lm -lpthread  -ljemalloc -lc"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return !!argv[argc];
6: }
/* end */

LD_LIBRARY_PATH=.:/usr/share/rbenv/versions/3.3.4/lib "gcc -o conftest -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/x86_64-linux -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/ruby/backward -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0 -I. -Wdate-time -D_FORTIFY_SOURCE=2   -g -O2 -fdebug-prefix-map=/tmp/brew2deb/packages/ruby=. -fstack-protector-strong -Wformat -Werror=format-security conftest.c  -L. -L/usr/share/rbenv/versions/3.3.4/lib -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -fstack-protector-strong -rdynamic -Wl,-export-dynamic     -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L/usr/share/rbenv/versions/3.3.4/lib -lruby-static -lz -lrt -lrt -ljemalloc -lgmp -ldl -lcrypt -lm -lpthread   -lm -lpthread  -ljemalloc -lc"
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <ruby.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     int (* volatile tp)(void)=(int (*)(void))&t;
11:     printf("%d", (*tp)());
12:   }
13: 
14:   return !!argv[argc];
15: }
16: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_hash_clear; return !p; }
/* end */

--------------------

have_func: checking for epoll_create1() in sys/epoll.h... -------------------- yes

LD_LIBRARY_PATH=.:/usr/share/rbenv/versions/3.3.4/lib "gcc -o conftest -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/x86_64-linux -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0/ruby/backward -I/usr/share/rbenv/versions/3.3.4/include/ruby-3.3.0 -I. -Wdate-time -D_FORTIFY_SOURCE=2   -DSTR_UMINUS_DEDUPE=1  -DHASH_ASET_DEDUPE=1  -g -O2 -fdebug-prefix-map=/tmp/brew2deb/packages/ruby=. -fstack-protector-strong -Wformat -Werror=format-security conftest.c  -L. -L/usr/share/rbenv/versions/3.3.4/lib -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -fstack-protector-strong -rdynamic -Wl,-export-dynamic     -Wl,-rpath,/usr/share/rbenv/versions/3.3.4/lib -L/usr/share/rbenv/versions/3.3.4/lib -lruby-static -lz -lrt -lrt -ljemalloc -lgmp -ldl -lcrypt -lm -lpthread   -lm -lpthread  -ljemalloc -lc"
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <sys/epoll.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     int (* volatile tp)(void)=(int (*)(void))&t;
11:     printf("%d", (*tp)());
12:   }
13: 
14:   return !!argv[argc];
15: }
16: int t(void) { void ((*volatile p)()); p = (void ((*)()))epoll_create1; return !p; }
/* end */

--------------------

