# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::PasswordResetCreate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::PasswordResetCreate`.

class Hydro::Schemas::Github::V1::PasswordResetCreate
  sig do
    params(
      account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      email_address: T.nilable(Google::Protobuf::StringValue),
      error_type: T.nilable(Google::Protobuf::StringValue),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      spamurai_form_signals: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals)
    ).void
  end
  def initialize(account: nil, actor: nil, email_address: nil, error_type: nil, request_context: nil, spamurai_form_signals: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def account=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_account; end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_email_address; end

  sig { void }
  def clear_error_type; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_spamurai_form_signals; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def email_address; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def email_address=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def error_type; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def error_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals)) }
  def spamurai_form_signals; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals)).void }
  def spamurai_form_signals=(value); end
end
