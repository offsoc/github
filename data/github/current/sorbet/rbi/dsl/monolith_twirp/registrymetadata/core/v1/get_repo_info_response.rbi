# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Registrymetadata::Core::V1::GetRepoInfoResponse`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Registrymetadata::Core::V1::GetRepoInfoResponse`.

class MonolithTwirp::Registrymetadata::Core::V1::GetRepoInfoResponse
  sig do
    params(
      owner_id: T.nilable(Integer),
      repo_id: T.nilable(Integer),
      sharing_policy: T.nilable(T.any(Symbol, Integer)),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(owner_id: nil, repo_id: nil, sharing_policy: nil, visibility: nil); end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_sharing_policy; end

  sig { void }
  def clear_visibility; end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def sharing_policy; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def sharing_policy=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
