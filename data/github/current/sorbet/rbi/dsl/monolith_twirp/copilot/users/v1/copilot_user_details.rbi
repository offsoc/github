# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilot::Users::V1::CopilotUserDetails`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilot::Users::V1::CopilotUserDetails`.

class MonolithTwirp::Copilot::Users::V1::CopilotUserDetails
  sig do
    params(
      adminable_organizations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization], T::Array[MonolithTwirp::Copilot::Users::V1::CopilotOrganization])),
      administrative_blocked: T.nilable(T::Boolean),
      analytics_tracking_id: T.nilable(String),
      bing_setting: T.nilable(T.any(Symbol, Integer)),
      cli_setting: T.nilable(T.any(Symbol, Integer)),
      content_exclusion_enabled: T.nilable(T::Boolean),
      copilot_access_type: T.nilable(T.any(Symbol, Integer)),
      copilot_beta_features_opt_in_setting: T.nilable(T.any(Symbol, Integer)),
      copilot_organization_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      copilot_organizations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization], T::Array[MonolithTwirp::Copilot::Users::V1::CopilotOrganization])),
      copilot_plan: T.nilable(T.any(Symbol, Integer)),
      copilot_telemetry_snapshot_id: T.nilable(String),
      custom_model: T.nilable(T.any(Symbol, Integer)),
      dotcom_chat_setting: T.nilable(T.any(Symbol, Integer)),
      editor_chat_setting: T.nilable(T.any(Symbol, Integer)),
      has_cfb_access: T.nilable(T::Boolean),
      has_cfe_access: T.nilable(T::Boolean),
      has_cfi_access: T.nilable(T::Boolean),
      has_free_access: T.nilable(T::Boolean),
      has_paid_access: T.nilable(T::Boolean),
      id: T.nilable(Integer),
      latest_usage_detail: T.nilable(Google::Protobuf::Timestamp),
      latest_usage_detail_editor: T.nilable(String),
      mobile_chat_setting: T.nilable(T.any(Symbol, Integer)),
      pr_summarization: T.nilable(T.any(Symbol, Integer)),
      private_docs: T.nilable(T.any(Symbol, Integer)),
      skuisolation: T.nilable(MonolithTwirp::Copilot::Users::V1::SKUIsolation),
      snippy_setting: T.nilable(T.any(Symbol, Integer)),
      spammy: T.nilable(T::Boolean),
      telemetry_configuration: T.nilable(T.any(Symbol, Integer)),
      trust_tier: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(adminable_organizations: T.unsafe(nil), administrative_blocked: nil, analytics_tracking_id: nil, bing_setting: nil, cli_setting: nil, content_exclusion_enabled: nil, copilot_access_type: nil, copilot_beta_features_opt_in_setting: nil, copilot_organization_ids: T.unsafe(nil), copilot_organizations: T.unsafe(nil), copilot_plan: nil, copilot_telemetry_snapshot_id: nil, custom_model: nil, dotcom_chat_setting: nil, editor_chat_setting: nil, has_cfb_access: nil, has_cfe_access: nil, has_cfi_access: nil, has_free_access: nil, has_paid_access: nil, id: nil, latest_usage_detail: nil, latest_usage_detail_editor: nil, mobile_chat_setting: nil, pr_summarization: nil, private_docs: nil, skuisolation: nil, snippy_setting: nil, spammy: nil, telemetry_configuration: nil, trust_tier: nil); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization]) }
  def adminable_organizations; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization]).void }
  def adminable_organizations=(value); end

  sig { returns(T::Boolean) }
  def administrative_blocked; end

  sig { params(value: T::Boolean).void }
  def administrative_blocked=(value); end

  sig { returns(String) }
  def analytics_tracking_id; end

  sig { params(value: String).void }
  def analytics_tracking_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def bing_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def bing_setting=(value); end

  sig { void }
  def clear_adminable_organizations; end

  sig { void }
  def clear_administrative_blocked; end

  sig { void }
  def clear_analytics_tracking_id; end

  sig { void }
  def clear_bing_setting; end

  sig { void }
  def clear_cli_setting; end

  sig { void }
  def clear_content_exclusion_enabled; end

  sig { void }
  def clear_copilot_access_type; end

  sig { void }
  def clear_copilot_beta_features_opt_in_setting; end

  sig { void }
  def clear_copilot_organization_ids; end

  sig { void }
  def clear_copilot_organizations; end

  sig { void }
  def clear_copilot_plan; end

  sig { void }
  def clear_copilot_telemetry_snapshot_id; end

  sig { void }
  def clear_custom_model; end

  sig { void }
  def clear_dotcom_chat_setting; end

  sig { void }
  def clear_editor_chat_setting; end

  sig { void }
  def clear_has_cfb_access; end

  sig { void }
  def clear_has_cfe_access; end

  sig { void }
  def clear_has_cfi_access; end

  sig { void }
  def clear_has_free_access; end

  sig { void }
  def clear_has_paid_access; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_latest_usage_detail; end

  sig { void }
  def clear_latest_usage_detail_editor; end

  sig { void }
  def clear_mobile_chat_setting; end

  sig { void }
  def clear_pr_summarization; end

  sig { void }
  def clear_private_docs; end

  sig { void }
  def clear_skuisolation; end

  sig { void }
  def clear_snippy_setting; end

  sig { void }
  def clear_spammy; end

  sig { void }
  def clear_telemetry_configuration; end

  sig { void }
  def clear_trust_tier; end

  sig { returns(T.any(Symbol, Integer)) }
  def cli_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def cli_setting=(value); end

  sig { returns(T::Boolean) }
  def content_exclusion_enabled; end

  sig { params(value: T::Boolean).void }
  def content_exclusion_enabled=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def copilot_access_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def copilot_access_type=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def copilot_beta_features_opt_in_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def copilot_beta_features_opt_in_setting=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def copilot_organization_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def copilot_organization_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization]) }
  def copilot_organizations; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilot::Users::V1::CopilotOrganization]).void }
  def copilot_organizations=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def copilot_plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def copilot_plan=(value); end

  sig { returns(String) }
  def copilot_telemetry_snapshot_id; end

  sig { params(value: String).void }
  def copilot_telemetry_snapshot_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def custom_model; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def custom_model=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def dotcom_chat_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def dotcom_chat_setting=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def editor_chat_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def editor_chat_setting=(value); end

  sig { returns(T::Boolean) }
  def has_cfb_access; end

  sig { params(value: T::Boolean).void }
  def has_cfb_access=(value); end

  sig { returns(T::Boolean) }
  def has_cfe_access; end

  sig { params(value: T::Boolean).void }
  def has_cfe_access=(value); end

  sig { returns(T::Boolean) }
  def has_cfi_access; end

  sig { params(value: T::Boolean).void }
  def has_cfi_access=(value); end

  sig { returns(T::Boolean) }
  def has_free_access; end

  sig { params(value: T::Boolean).void }
  def has_free_access=(value); end

  sig { returns(T::Boolean) }
  def has_paid_access; end

  sig { params(value: T::Boolean).void }
  def has_paid_access=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def latest_usage_detail; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def latest_usage_detail=(value); end

  sig { returns(String) }
  def latest_usage_detail_editor; end

  sig { params(value: String).void }
  def latest_usage_detail_editor=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def mobile_chat_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def mobile_chat_setting=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def pr_summarization; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def pr_summarization=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def private_docs; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def private_docs=(value); end

  sig { returns(T.nilable(MonolithTwirp::Copilot::Users::V1::SKUIsolation)) }
  def skuisolation; end

  sig { params(value: T.nilable(MonolithTwirp::Copilot::Users::V1::SKUIsolation)).void }
  def skuisolation=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def snippy_setting; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def snippy_setting=(value); end

  sig { returns(T::Boolean) }
  def spammy; end

  sig { params(value: T::Boolean).void }
  def spammy=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def telemetry_configuration; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def telemetry_configuration=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def trust_tier; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def trust_tier=(value); end
end
