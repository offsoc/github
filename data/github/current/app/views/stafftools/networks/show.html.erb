<%# erblint:counter DeprecatedComponentsCounter 16 %>
<% view = Stafftools::RepositoryViews::NetworkView.new(repository: current_repository, current_user: current_user) %>

<% page_info title: view.page_title %>

<%= render(Primer::Beta::Subhead.new(hide_border: true)) do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Network overview
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new) do |component| %>
  <% component.with_row do %>
    <p>
      <div class="summary">
        <dl>
          <dt>Repository type</dt>
          <dd><%= current_repository.fork? ? "fork" : "root" %></dd>
        </dl>
        <dl>
          <dt>Network visibility</dt>
          <dd><%= current_repository.network.visibility %></dd>
        </dl>
        <dl>
          <dt>Network size</dt>
          <dd>
            <%= pluralize(current_repository.network.repositories.size, "repository") %>
            &ndash;
            <%= link_to "View tree", stafftools_repository_network_tree_path %>
          </dd>
        </dl>
        <% if current_repository.fork? %>
          <dl>
            <dt>Root repository</dt>
            <dd>
              <%= link_to current_repository.root.name_with_owner,
                    gh_stafftools_repository_path(current_repository.root) %>
            </dd>
          </dl>
          <dl>
            <dt>Parent repository</dt>
            <dd>
              <%= link_to current_repository.parent.name_with_owner,
                    gh_stafftools_repository_path(current_repository.parent) %>
            </dd>
          </dl>
          <dl>
            <dt>Siblings</dt>
            <dd>
              <%= link_to siblings_stafftools_repository_network_path do %>
                <%= pluralize((current_repository.parent.children.size - 1), "repository") %>
              <% end %>
            </dd>
          </dl>
        <% end %>
        <dl>
          <dt>Children</dt>
          <dd>
            <%= link_to children_stafftools_repository_network_path do %>
              <%= pluralize current_repository.children.size, "repository" %>
            <% end %>
          </dd>
        </dl>
        <dl>
          <dt>Successful maintenance</dt>
          <dd><%= current_repository.network.last_maintenance_at || "Never" %></dd>
        </dl>
        <dl>
          <dt>Attempted maintenance</dt>
          <dd><%= current_repository.network.last_maintenance_attempted_at || "Never" %></dd>
        </dl>
        <dl>
          <dt>Maintenance status</dt>
          <dd><%= current_repository.network.maintenance_status&.capitalize %></dd>
        </dl>
      </div>
    </p>
  <% end %>
  <% component.with_row do %>
    <%= form_tag rebuild_network_graph_stafftools_repository_network_path do %>
      <%= render Primer::ButtonComponent.new(type: :submit, float: :right) do %>Rebuild graph<% end %>
    <% end %>
    <h4>Rebuild graph</h4>
    <p>
      Rebuild the data used by the network graph.
    </p>
  <% end %>
  <% component.with_row do %>
    <%= form_tag increment_git_cache_stafftools_repository_network_path do %>
      <%= render Primer::ButtonComponent.new(type: :submit, float: :right) do %>
        Invalidate Git cache
      <% end %>
    <% end %>
    <h4>Invalidate Git cache</h4>
    <p>
      Invalidate the Git cache for this network.
      <br>
      Once sensitive data is removed from the repository itself, this will drop it from the cache.
    </p>
  <% end %>
<% end %>

<%= render(Primer::Beta::Subhead.new(hide_border: true, spacious: true)) do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Network admin
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new) do |component| %>
  <% component.with_row do %>
    <%= form_tag schedule_maintenance_stafftools_repository_network_path do %>
      <%= render Primer::ButtonComponent.new(type: :submit, float: :right) do %>
        Schedule
      <% end %>
    <% end %>
    <h4>Schedule network maintenance</h4>
    <p>
      Run a network maintenance job on this network and update its status
    </p>
  <% end %>

  <% component.with_row do %>
    <% if stafftools_action_authorized?(controller: Stafftools::NetworksController, action: :mark_as_broken) %>
      <% if view.network.maintenance_status == 'broken' %>
        <%= form_tag({}, method: :get) do %>
          <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
            Mark as broken
          <% end %>
        <% end %>
        <h4>Mark as broken</h4>
        <p>
          This network is already marked as broken. Schedule a maintenance job
          to attempt to fix it.
        </p>
      <% else %>
        <%= form_tag mark_as_broken_stafftools_repository_network_path do %>
          <%= render Primer::ButtonComponent.new(type: :submit, float: :right) do %>
            Mark as broken
          <% end %>
        <% end %>
        <h4>Mark as broken</h4>
        <p>
          Set the status of this network to broken.
        </p>
      <% end %>
    <% else %>
      <h4>Mark as broken</h4>
      <p><%= stafftools_not_authorized_html %></p>
    <% end %>
  <% end %>

  <% component.with_row do %>
    <% if stafftools_action_authorized?(controller: Stafftools::NetworksController, action: :block_archive_download) %>
      <% if current_repository.network.archive_resource_blocked? %>
        <%= form_tag unblock_archive_download_stafftools_repository_network_path(current_repository.owner, current_repository) do %>
          <%= render Primer::Beta::Button.new(type: :submit, float: :right) do %>
            Unblock
          <% end %>
        <% end %>
      <% else %>
        <%= form_tag block_archive_download_stafftools_repository_network_path(current_repository.owner, current_repository) do %>
          <%= render Primer::Beta::Button.new(type: :submit, float: :right) do %>
            Block
          <% end %>
        <% end %>
      <% end %>
      <h4>Block archive download</h4>
      <p>
          Block/unblock archive download for this network.
      </p>
    <% end %>
  <% end %>
<% end %>

<%= render(Primer::Beta::Subhead.new(hide_border: true, spacious: true)) do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Network structure
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new) do |component| %>
  <% component.with_row do %>
    <% if view.is_root? %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
           Make root
        <% end %>
      <% end %>
      <h4>Root repository</h4>
      <p>
        This repository is already the root of its network.
      </p>
    <% elsif view.rooting_violates_repo_limit? %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
           Make root
        <% end %>
      <% end %>
      <h4>Root repository</h4>
      <p>
        Making this repository the network root would put
        <%= link_to current_repository.owner.login,
            billing_stafftools_user_path(current_repository.owner),
            class: "Link--inTextBlock" %>
        over their private repository limit.
      </p>
    <% else %>
      <%= render layout: "shared/details_dialog", locals: {
        button_text: "Make root",
        button_class: "btn",
        details_class: "float-right",
        title: "Make root repository"
      } do %>
        <div class="Box-body">
          <p>
            Are you sure you want to convert this fork into the root repository of
            its network? The current root repository and all its forks will become
            forks of this new root repository. If this is a private fork, it will
            become a private repository with a new owner.
          </p>
        </div>
        <div class="Box-footer">
          <%= form_tag change_root_stafftools_repository_network_path do %>
            <%= render Primer::ButtonComponent.new(type: :submit, block: true, scheme: :danger) do %>Make root<% end %>
          <% end %>
        </div>
      <% end %>

      <h4>Root repository</h4>
      <p>
        Make this repository the root of its network. The current root is
        <%= link_to view.root.name_with_owner, gh_stafftools_repository_path(view.root), class: "Link--inTextBlock" %>.
        <% unless GitHub.enterprise? %>
          Look for errors or failures in
          <a class="Link--inTextBlock" href="<%= view.root_repository_sentry_link %>">Sentry</a>.
        <% end %>
      </p>
    <% end %>
  <% end %>

  <% component.with_row do %>
    <%= render layout: "shared/details_dialog", locals: {
      button_text: "Change parent",
      button_class: "btn",
      details_class: "float-right",
      title: "Change parent repository"
    } do %>
      <div class="Box-body">
        <%= form_tag reparent_stafftools_repository_network_path do %>
          <dl class="form-group mt-0">
            <dt><%= label_tag :new_parent, "New parent" %></dt>
            <dd>
              <%= text_field_tag :new_parent, nil, placeholder: "username/repository", autofocus: true %>
            </dd>
          </dl>
          <%= render Primer::ButtonComponent.new(type: :submit, block: true) do %>Change parent<% end %>
        <% end %>
      </div>
    <% end %>

    <h4>Change Parent</h4>
    <p>
      Make this a fork of another repository within its current network.
      <br>
      Cross-network reparenting isnâ€™t possible at this time.
    </p>
  <% end %>

  <% component.with_row do %>
    <% if view.allow_detach? %>
      <%= render layout: "shared/details_dialog", locals: {
        button_text: "Detach",
        button_class: "btn",
        details_class: "float-right",
        title: "Detach repository from network"
      } do %>
        <div class="Box-body">
          <p>
            Are you sure that you want to detach this repository from its network?
            If this is a private repository, one of its forks will become a private
            repository with a new owner.
          </p>
        </div>
        <div class="Box-footer">
          <%= form_tag detach_stafftools_repository_network_path do %>
            <%= render Primer::ButtonComponent.new(type: :submit, block: true, scheme: :danger) do %>Detach<% end %>
          <% end %>
        </div>
      <% end %>

      <h4>Detach from network</h4>
      <p>
        Detach this repository from its current network. The repository will
        become the sole repository in a new network. All forks of this
        repository will be reparented within their current network.
        <br>
        <% unless GitHub.enterprise? %>
          Look for errors or failures in
          <%= link_to "Sentry", "https://sentry.io/organizations/github/issues/?environment=production&project=1885898&query=is%3Aunresolved+job%3ARepositoryNetworkOperationsJob&statsPeriod=1h", class: "Link--inTextBlock" %>.
        <% end %>
      </p>
    <% else %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
          Detach
        <% end %>
      <% end %>
      <h4>Detach from network</h4>
      <p>
        There is not enough available space on the filesystem to detach this
        repository from its current network.
      </p>
    <% end %>
  <% end %>


  <% if view.is_root? %>
    <% component.with_row do %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
          Extract
        <% end %>
      <% end %>
      <h4>Extract from network</h4>
      <p>
        This repository is the root of its network.
      </p>
    <% end %>
  <% elsif view.allow_extract? %>
    <% component.with_row do %>
      <%= render layout: "shared/details_dialog", locals: {
        button_text: "Extract",
        button_class: "btn",
        details_class: "float-right",
        title: "Extract from network"
      } do %>
        <div class="Box-body">
          <p>
            Are you sure that you want to extract this repository and all its
            forks from the current network into a new network?
          </p>
        </div>
        <div class="Box-footer">
          <%= form_tag extract_stafftools_repository_network_path do %>
            <%= render Primer::ButtonComponent.new(type: :submit, block: true, scheme: :danger) do %>Extract<% end %>
          <% end %>
        </div>
      <% end %>

      <h4>Extract from network</h4>
      <p>
        Extract this repository <em>and all its forks</em> from the current
        network into a new network.
        <br>
        <% unless GitHub.enterprise? %>
          Look for errors or failures in
          <%= link_to "Sentry", "https://sentry.io/organizations/github/issues/?environment=production&project=1885898&query=is%3Aunresolved+job%3ARepositoryNetworkOperationsJob&statsPeriod=1h", class: "Link--inTextBlock" %>.
        <% end %>
      </p>
    <% end %>
  <% else %>
    <% component.with_row do %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
          Extract
        <% end %>
      <% end %>
      <h4>Extract from network</h4>
      <p>
        There is not enough available space on the filesystem to extract this
        repository <em>and all its forks</em> from the current network into a
        new network using the current extraction methods.
      </p>
    <% end %>

    <% component.with_row do %>
      <%= render layout: "shared/details_dialog", locals: {
        button_text: "New extract",
        button_class: "btn",
        details_class: "float-right",
        title: "Extract from network"
      } do %>
        <div class="Box-body">
          <p>
            Are you sure that you want to extract this repository and all its
            forks from the current network into a new network?
          </p>
        </div>
        <div class="Box-footer">
          <%= form_tag new_extract_stafftools_repository_network_path do %>
            <%= render Primer::ButtonComponent.new(type: :submit, block: true, scheme: :danger) do %>New extract<% end %>
          <% end %>
        </div>
      <% end %>

      <p>
        If thereâ€™s not enough space on the filesystem to extract this repository
        and all of its forks, you can try this new method of extraction. It is
        safe to use and requires less space, but still may not work for some
        edge cases. If it fails, the repository and its forks will be cleaned up
        and returned to their original state.
        <br>
        <% unless GitHub.enterprise? %>
          Look for errors or failures in
          <%= link_to "Sentry", "https://sentry.io/organizations/github/issues/?environment=production&project=1885898&query=is%3Aunresolved+job%3ARepositoryNetworkOperationsJob&statsPeriod=1h", class: "Link--inTextBlock" %>.
        <% end %>
      </p>
    <% end %>
  <% end %>

  <% component.with_row do %>
    <% if view.allow_attach? %>
      <%= render layout: "shared/details_dialog", locals: {
        button_text: view.attach_button_text,
        button_class: "btn",
        details_class: "float-right",
        title: view.attach_header_text
      } do %>
        <%= render partial: "stafftools/networks/family_attach_selection", locals: { view: view } %>
      <% end %>

      <h4><%= view.attach_header_text %></h4>
      <p>
        <%= raw view.attach_description_text %>
        <br>
        <% unless GitHub.enterprise? %>
          Look for errors or failures in
          <%= link_to "Sentry", "https://sentry.io/organizations/github/issues/?environment=production&project=1885898&query=is%3Aunresolved+job%3ARepositoryNetworkOperationsJob&statsPeriod=1h", class: "Link--inTextBlock" %>.
        <% end %>
      </p>
    <% else %>
      <%= form_tag({}, method: :get) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, float: :right, classes: "disabled", disabled: true) do %>
          <%= view.attach_button_text %>
        <% end %>
      <% end %>
      <h4><%= view.attach_header_text %></h4>
      <p>
          <%= raw view.attach_description_text %>
      </p>
    <% end %>
  <% end %>
<% end %>
