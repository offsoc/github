{"version":3,"file":"ui_packages_bypass-actors_components_bypassDialog_BypassDialog_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/bypass-actors/bypass-actors-types.ts","ui/packages/bypass-actors/components/bypassDialog/alreadyAdded.ts","ui/packages/bypass-actors/services/api.ts","ui/packages/bypass-actors/components/ActorType.tsx","ui/packages/bypass-actors/components/BypassAvatar.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialog.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogRow.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogBody.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogHeader.tsx","ui/packages/dismissible-flash/DismissibleFlash.tsx"],"sourcesContent":["export type BypassActor = {\n  id?: number\n  _id?: number\n  actorId: number | string | null\n  actorType: BypassActorType\n  name: string\n  _enabled: boolean\n  _dirty: boolean\n  bypassMode: ActorBypassMode\n  owner?: string\n}\n\nexport type BypassActorType =\n  | 'RepositoryRole'\n  | 'Team'\n  | 'Integration'\n  | 'OrganizationAdmin'\n  | 'DeployKey'\n  | 'EnterpriseTeam'\n  | 'EnterpriseOwner'\n\nexport enum ActorBypassMode {\n  ALWAYS = 0,\n  PRS_ONLY = 1,\n}\n\nexport const enum OrgAdminBypassMode {\n  NoOrgBypass = 'no_org_bypass',\n  OrgBypassPRsOnly = 'org_bypass_prs_only',\n  OrgBypassAny = 'org_bypass_any',\n}\n","import type {BypassActor} from '../../bypass-actors-types'\n\nexport function alreadyAdded(actorId: number | string | null, actorType: string, enabledBypassActors: BypassActor[]) {\n  return enabledBypassActors.some(\n    ({actorId: matchingActorId, actorType: matchingActorType}) =>\n      matchingActorId === actorId && matchingActorType === actorType,\n  )\n}\n\nexport function getEnabledBypassActor(\n  actorId: number | string | null,\n  actorType: string,\n  enabledBypassActors: BypassActor[],\n) {\n  return enabledBypassActors.find(\n    ({actorId: matchingActorId, actorType: matchingActorType}) =>\n      matchingActorId === actorId && matchingActorType === actorType,\n  )\n}\n","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {BypassActor} from '../bypass-actors-types'\n\nconst request = (url: string, method: string, error = 'Unexpected error') => {\n  return async (body?: object) => {\n    const response = await verifiedFetchJSON(url, {\n      body,\n      method,\n    })\n    if (response.ok) {\n      try {\n        return await response.json()\n      } catch (e) {\n        throw new Error('Failed to read response')\n      }\n    } else {\n      throw new Error(error)\n    }\n  }\n}\n\nexport const getBypassSuggestions = (url: string, query: string): Promise<BypassActor[]> => {\n  return request(`${url}?q=${encodeURIComponent(query)}`, 'GET')()\n}\n","import type {FC} from 'react'\n\nexport const ActorType: FC<{\n  actorType: string\n}> = ({actorType}) => {\n  if (actorType === 'RepositoryRole' || actorType === 'OrganizationAdmin') {\n    return <span className=\"note ml-2\">Role</span>\n  }\n  if (actorType === 'Integration') {\n    return <span className=\"note ml-2\">App</span>\n  }\n  if (actorType === 'DeployKey') {\n    return null\n  }\n  if (actorType === 'EnterpriseTeam') {\n    return <span className=\"note ml-2\">Enterprise team</span>\n  }\n  if (actorType === 'EnterpriseOwner') {\n    return <span className=\"note ml-2\">Role</span>\n  }\n  return <span className=\"note ml-2\">{actorType}</span>\n}\n\nexport function actorTypeString(actorType: string) {\n  switch (actorType) {\n    case 'RepositoryRole':\n    case 'OrganizationAdmin':\n      return 'Role'\n    case 'Integration':\n      return 'App'\n    case 'DeployKey':\n      return ''\n    case 'EnterpriseTeam':\n      return 'Enterprise team'\n    case 'EnterpriseOwner':\n      return 'Role'\n    default:\n      return actorType\n  }\n}\n","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {FC} from 'react'\nimport {Octicon} from '@primer/react'\nimport {EyeIcon, PencilIcon, PersonIcon, PeopleIcon, ToolsIcon, type Icon, KeyIcon} from '@primer/octicons-react'\nimport type {BypassActorType} from '../bypass-actors-types'\n\nconst roleIconMap: {[key: string]: Icon} = {\n  Write: PencilIcon,\n  Maintain: ToolsIcon,\n  'Repository admin': EyeIcon,\n  'Organization admin': EyeIcon,\n}\n\nexport const BypassAvatar: FC<{\n  baseUrl: string\n  id: string | number | null\n  name: string\n  type: BypassActorType\n  size?: number\n}> = ({baseUrl, id, type, name, size = 16}) => {\n  if (type === 'Team') {\n    return <GitHubAvatar alt={name} src={`${baseUrl}/t/${id}`} size={size} />\n  }\n  if (type === 'Integration') {\n    return <GitHubAvatar alt={name} src={`${baseUrl}/in/${id}`} size={size} />\n  }\n  if (type === 'RepositoryRole' || type === 'OrganizationAdmin') {\n    return <Octicon icon={roleIconMap[name] || PersonIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'DeployKey') {\n    return <Octicon icon={KeyIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'EnterpriseTeam') {\n    return <Octicon icon={PeopleIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'EnterpriseOwner') {\n    return <Octicon icon={PeopleIcon} sx={{color: 'fg.muted'}} />\n  }\n  return null\n}\n","import {useState, useEffect, useCallback, useRef} from 'react'\nimport {Blankslate, Dialog, type DialogButtonProps} from '@primer/react/experimental'\nimport {debounce} from '@github/mini-throttle'\nimport {getBypassSuggestions} from '../../services/api'\nimport type {BypassActor} from '../../bypass-actors-types'\nimport {ActorBypassMode} from '../../bypass-actors-types'\nimport {BypassDialogBody} from './BypassDialogBody'\nimport {BypassDialogHeader} from './BypassDialogHeader'\nimport {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\nimport {Box, FormControl, Text, TextInput, CheckboxGroup} from '@primer/react'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {BypassDialogRow} from './BypassDialogRow'\nimport {alreadyAdded} from './alreadyAdded'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nconst inputPlaceholder = `Search`\n\nexport type BypassDialogProps = {\n  onClose: () => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n  addBypassActor: (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n  ) => void\n  initialSuggestions: BypassActor[]\n  suggestionsUrl: string\n  addReviewerSubtitle: string\n}\n\nexport const BypassDialog = ({\n  onClose,\n  baseAvatarUrl,\n  enabledBypassActors,\n  addBypassActor,\n  initialSuggestions,\n  suggestionsUrl,\n  addReviewerSubtitle,\n}: BypassDialogProps) => {\n  const [bypassListFilter, setBypassListFilter] = useState<string>('')\n  const [suggestions, setSuggestions] = useState<BypassActor[]>(initialSuggestions)\n  const [selected, setSelected] = useState<BypassActor[]>([])\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceBypassSuggestions = useCallback(\n    debounce(async (newFilter: string) => {\n      if (newFilter === '') {\n        setSuggestions(initialSuggestions)\n      } else {\n        try {\n          const response = await getBypassSuggestions(suggestionsUrl, newFilter)\n          setSuggestions(response)\n        } catch (e) {\n          setFlashAlert({\n            variant: 'danger',\n            message: 'Failed to fetch suggestions',\n          })\n        }\n      }\n    }, 200),\n    [suggestionsUrl, setSuggestions],\n  )\n\n  useEffect(() => {\n    debounceBypassSuggestions(bypassListFilter)\n  }, [bypassListFilter, debounceBypassSuggestions])\n\n  const onBypassListSelected = () => {\n    for (const item of selected) {\n      if (\n        enabledBypassActors.some(({actorId, actorType}) => actorId === item.actorId && actorType === item.actorType)\n      ) {\n        setFlashAlert({\n          variant: 'danger',\n          message: 'Actor is already added',\n        })\n        return\n      }\n      if (item.actorId !== 'Organization admin') {\n        addBypassActor(item.actorId, item.actorType, item.name, ActorBypassMode.ALWAYS, item.owner)\n      }\n    }\n    onClose()\n  }\n\n  const footerButtons: DialogButtonProps[] = [\n    {content: 'Cancel', onClick: onClose, buttonType: 'normal'},\n    {\n      content: 'Add selected',\n      onClick: onBypassListSelected,\n      buttonType: 'primary',\n    },\n  ]\n\n  function DialogHeader(dialogLabelId: string) {\n    return (\n      <BypassDialogHeader\n        onClose={onClose}\n        bypassListFilter={bypassListFilter}\n        setBypassListFilter={setBypassListFilter}\n        dialogLabelId={dialogLabelId}\n        flashAlert={flashAlert}\n        setFlashAlert={setFlashAlert}\n        addReviewerSubtitle={addReviewerSubtitle}\n      />\n    )\n  }\n\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  const newSuggestions = suggestions.filter(s => !alreadyAdded(s.actorId, s.actorType, enabledBypassActors))\n\n  const a11yAddBypassDialog = useFeatureFlag('a11y_add_bypass_dialog')\n\n  if (a11yAddBypassDialog) {\n    return (\n      <Dialog title=\"Add bypass\" height=\"auto\" width=\"xlarge\" footerButtons={footerButtons} onClose={onClose}>\n        <Dialog.Body sx={{padding: 0}}>\n          <Box sx={{marginBottom: 3, display: 'flex', flexDirection: 'column'}}>\n            <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n            <FormControl sx={{marginTop: 1}}>\n              <FormControl.Label sx={{fontWeight: 'normal'}}>{addReviewerSubtitle}</FormControl.Label>\n              <TextInput\n                block={false}\n                sx={{width: '100%', fontWeight: 'normal'}}\n                leadingVisual={SearchIcon}\n                placeholder={inputPlaceholder}\n                onChange={e => setBypassListFilter(e.target.value)}\n                value={bypassListFilter}\n              />\n            </FormControl>\n          </Box>\n          <Box sx={{display: 'flex', marginBottom: 1}}>\n            <Text id=\"suggestionsHeading\" sx={{fontWeight: 'semibold'}}>\n              Suggestions\n            </Text>\n          </Box>\n          <Box sx={{height: 175}}>\n            {newSuggestions.length > 0 ? (\n              <CheckboxGroup aria-labelledby=\"suggestionsHeading\" sx={{paddingBottom: 4}}>\n                {newSuggestions.map(s => {\n                  return (\n                    <BypassDialogRow\n                      key={`${s.actorId}-${s.actorType}`}\n                      actorId={s.actorId}\n                      actorType={s.actorType}\n                      name={s.name}\n                      owner={s.owner}\n                      selected={selected}\n                      setSelected={setSelected}\n                      baseAvatarUrl={baseAvatarUrl}\n                      enabledBypassActors={enabledBypassActors}\n                    />\n                  )\n                })}\n              </CheckboxGroup>\n            ) : (\n              <Blankslate>\n                <Blankslate.Heading>No suggestions</Blankslate.Heading>\n              </Blankslate>\n            )}\n          </Box>\n        </Dialog.Body>\n      </Dialog>\n    )\n  } else {\n    return (\n      <Dialog\n        renderHeader={({dialogLabelId}) => DialogHeader(dialogLabelId)}\n        height=\"auto\"\n        width=\"xlarge\"\n        footerButtons={footerButtons}\n        onClose={onClose}\n      >\n        <BypassDialogBody\n          suggestions={suggestions}\n          selected={selected}\n          setSelected={setSelected}\n          baseAvatarUrl={baseAvatarUrl}\n          enabledBypassActors={enabledBypassActors}\n        />\n      </Dialog>\n    )\n  }\n}\n\ntry{ BypassDialog.displayName ||= 'BypassDialog' } catch {}\ntry{ DialogHeader.displayName ||= 'DialogHeader' } catch {}","import {Fragment} from 'react'\nimport {Box, Checkbox, FormControl, Text, Truncate} from '@primer/react'\nimport type {BypassActor, BypassActorType} from '../../bypass-actors-types'\nimport {ActorBypassMode} from '../../bypass-actors-types'\nimport {BypassAvatar} from '../BypassAvatar'\nimport {ActorType} from '../ActorType'\nimport {alreadyAdded} from './alreadyAdded'\n\ntype BypassDialogRowProps = {\n  actorId: number | string | null\n  actorType: BypassActorType\n  name: string\n  owner?: string\n  selected: BypassActor[]\n  setSelected: (selected: BypassActor[]) => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n}\n\nexport function BypassDialogRow({\n  actorId,\n  actorType,\n  name,\n  owner,\n  selected,\n  setSelected,\n  baseAvatarUrl,\n  enabledBypassActors,\n}: BypassDialogRowProps) {\n  const isChecked = selected.some(item => item.actorId === actorId && item.actorType === actorType)\n  return (\n    <FormControl>\n      <Checkbox\n        data-testid=\"bypass-dialog-checkbox\"\n        value=\"actorId\"\n        checked={isChecked || alreadyAdded(actorId, actorType, enabledBypassActors)}\n        onChange={() => {\n          if (isChecked) {\n            const index = selected.findIndex(\n              bypassActor => bypassActor?.actorId === actorId && bypassActor?.actorType === actorType,\n            )\n            if (index > -1) setSelected([...selected.slice(0, index), ...selected.slice(index + 1)])\n          } else {\n            setSelected([\n              ...selected,\n              {actorId, actorType, name, _enabled: true, _dirty: true, bypassMode: ActorBypassMode.ALWAYS, owner},\n            ])\n          }\n        }}\n      />\n      <FormControl.LeadingVisual>\n        <BypassAvatar baseUrl={baseAvatarUrl} id={actorId} name={name} type={actorType} />\n      </FormControl.LeadingVisual>\n      <FormControl.Label>\n        <Box sx={{display: 'flex', alignItems: 'center', fontWeight: 'normal'}}>\n          <Truncate title={name} maxWidth={250}>\n            <Text sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{name}</Text>\n          </Truncate>\n          <ActorType actorType={actorType} />\n          {actorType === 'Team' ? (\n            <Fragment>\n              <Text className=\"note\" sx={{marginLeft: 1, marginRight: 1}}>\n                &bull;\n              </Text>\n              <Truncate title={`@${name}`} maxWidth={250}>\n                <Text\n                  className=\"note\"\n                  sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}\n                >{`@${name}`}</Text>\n              </Truncate>\n            </Fragment>\n          ) : null}\n          {actorType === 'Integration' && owner ? (\n            <Fragment>\n              <Text className=\"note\" sx={{marginLeft: 1, marginRight: 1}}>\n                &bull;\n              </Text>\n              <Truncate title={owner} maxWidth={250}>\n                <Text className=\"note\" sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>\n                  {owner}\n                </Text>\n              </Truncate>\n            </Fragment>\n          ) : null}\n        </Box>\n      </FormControl.Label>\n    </FormControl>\n  )\n}\n\ntry{ BypassDialogRow.displayName ||= 'BypassDialogRow' } catch {}","import {Box, CheckboxGroup} from '@primer/react'\nimport {Blankslate} from '@primer/react/experimental'\nimport type {BypassActor} from '../../bypass-actors-types'\nimport {BypassDialogRow} from './BypassDialogRow'\nimport {alreadyAdded} from './alreadyAdded'\n\ntype DialogBodyProps = {\n  suggestions: BypassActor[]\n  selected: BypassActor[]\n  setSelected: (selected: BypassActor[]) => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n}\n\nexport function BypassDialogBody({\n  suggestions,\n  selected,\n  setSelected,\n  baseAvatarUrl,\n  enabledBypassActors,\n}: DialogBodyProps) {\n  const newSuggestions = suggestions.filter(s => !alreadyAdded(s.actorId, s.actorType, enabledBypassActors))\n  return (\n    <Box sx={{height: 175}}>\n      {newSuggestions.length > 0 ? (\n        <CheckboxGroup aria-labelledby=\"suggestionsHeading\" sx={{paddingBottom: 4}}>\n          <ul className=\"list-style-none\">\n            {newSuggestions.map(s => {\n              return (\n                <li key={`${s.actorId}-${s.actorType}`}>\n                  <BypassDialogRow\n                    actorId={s.actorId}\n                    actorType={s.actorType}\n                    name={s.name}\n                    owner={s.owner}\n                    selected={selected}\n                    setSelected={setSelected}\n                    baseAvatarUrl={baseAvatarUrl}\n                    enabledBypassActors={enabledBypassActors}\n                  />\n                </li>\n              )\n            })}\n          </ul>\n        </CheckboxGroup>\n      ) : (\n        <Box sx={{py: '6%'}}>\n          <Box sx={{textAlign: 'center'}}>\n            <Blankslate>\n              <Blankslate.Heading as=\"h3\">No suggestions</Blankslate.Heading>\n            </Blankslate>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\ntry{ BypassDialogBody.displayName ||= 'BypassDialogBody' } catch {}","import {Fragment, useEffect, useRef} from 'react'\nimport {Box, FormControl, IconButton, Text, TextInput} from '@primer/react'\nimport {SearchIcon, XIcon} from '@primer/octicons-react'\nimport {Dialog} from '@primer/react/experimental'\nimport {type FlashAlert, DismissibleFlashOrToast} from '@github-ui/dismissible-flash'\n\nconst inputPlaceholder = `Search`\n\ntype BypassDialogHeaderProps = {\n  onClose: () => void\n  bypassListFilter: string\n  setBypassListFilter: (bypassListFilter: string) => void\n  dialogLabelId: string\n  flashAlert: FlashAlert\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  addReviewerSubtitle: string\n}\n\nexport function BypassDialogHeader({\n  onClose,\n  bypassListFilter,\n  setBypassListFilter,\n  dialogLabelId,\n  flashAlert,\n  setFlashAlert,\n  addReviewerSubtitle,\n}: BypassDialogHeaderProps) {\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  return (\n    <Fragment>\n      <Box sx={{padding: 3, display: 'flex', flexDirection: 'column'}}>\n        <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n        <Box sx={{display: 'flex', alignItems: 'center'}}>\n          <Dialog.Title id={dialogLabelId} sx={{fontWeight: 'bold', flex: 1}}>\n            Add bypass\n          </Dialog.Title>\n          <IconButton variant=\"invisible\" aria-label=\"Close Dialog\" icon={XIcon} onClick={onClose} />\n        </Box>\n        <Text sx={{fontWeight: 'normal', color: 'fg.subtle'}}>{addReviewerSubtitle}</Text>\n        <FormControl sx={{marginTop: 1}}>\n          <FormControl.Label visuallyHidden>Search for bypass actors</FormControl.Label>\n          <TextInput\n            block={false}\n            sx={{width: '100%', fontWeight: 'normal'}}\n            leadingVisual={SearchIcon}\n            placeholder={inputPlaceholder}\n            onChange={e => setBypassListFilter(e.target.value)}\n            value={bypassListFilter}\n          />\n        </FormControl>\n      </Box>\n      <Box\n        className=\"color-bg-subtle color-border-default\"\n        sx={{\n          display: 'flex',\n          paddingLeft: 3,\n          paddingTop: 1,\n          paddingBottom: 1,\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderStyle: 'solid',\n        }}\n      >\n        <Text id=\"suggestionsHeading\" className=\"text-small\" sx={{fontWeight: 'bold', color: 'fg.muted'}}>\n          Suggestions\n        </Text>\n      </Box>\n    </Fragment>\n  )\n}\n\ntry{ BypassDialogHeader.displayName ||= 'BypassDialogHeader' } catch {}","import {XIcon} from '@primer/octicons-react'\nimport {Flash, IconButton} from '@primer/react'\nimport {forwardRef, type ComponentProps, type ForwardedRef, type PropsWithChildren, type ReactNode} from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\ninterface DismissibleFlashProps {\n  variant: ComponentProps<typeof Flash>['variant']\n  onClose(): void\n}\n\nfunction DismissibleFlashWithRef(\n  {variant, onClose, children}: PropsWithChildren<DismissibleFlashProps>,\n  ref: ForwardedRef<HTMLDivElement>,\n): JSX.Element | null {\n  return (\n    <Flash\n      sx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', pl: 3, pr: 2, py: 2, mb: 4}}\n      variant={variant}\n      tabIndex={0}\n      ref={ref}\n    >\n      {children}\n      {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n      <IconButton\n        unsafeDisableTooltip={true}\n        variant=\"invisible\"\n        icon={XIcon}\n        aria-label=\"Dismiss message\"\n        sx={{'>svg': {m: 0, color: 'fg.muted'}}}\n        onClick={onClose}\n        size=\"small\"\n      />\n    </Flash>\n  )\n}\n\n// switch to new Primer React \"Banner\" component when it's ready: https://github.com/github/primer/issues/2807\nexport const DismissibleFlash = forwardRef(DismissibleFlashWithRef)\n\nexport type FlashAlert = {message: string; icon?: ReactNode; variant: ComponentProps<typeof Flash>['variant']}\n\nfunction resetFlashAlert(setFlashAlert: (flashAlert: FlashAlert) => void) {\n  setFlashAlert({message: '', variant: 'default'})\n}\n\nfunction convertFlashVariantToToastType(flashVariant: ComponentProps<typeof Flash>['variant']) {\n  switch (flashVariant) {\n    case 'success':\n      return 'success'\n    case 'danger':\n      return 'error'\n    case 'warning':\n    case 'default':\n    default:\n      return 'info'\n  }\n}\n\ninterface DismissibleFlashOrToastProps {\n  flashAlert: FlashAlert\n  setFlashAlert: (flashAlert: FlashAlert) => void\n}\n\nfunction DismissibleFlashOrToastWithRef(\n  {flashAlert, setFlashAlert}: DismissibleFlashOrToastProps,\n  ref: ForwardedRef<HTMLDivElement>,\n): JSX.Element | null {\n  const {addToast} = useToastContext()\n  const convertToastsToFlashes = useFeatureFlag('convert_toasts_to_flashes')\n\n  if (flashAlert.message) {\n    if (convertToastsToFlashes) {\n      return (\n        <DismissibleFlash variant={flashAlert.variant} onClose={() => resetFlashAlert(setFlashAlert)} ref={ref}>\n          {flashAlert.message}\n        </DismissibleFlash>\n      )\n    } else {\n      // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n      addToast({\n        type: convertFlashVariantToToastType(flashAlert.variant),\n        message: flashAlert.message,\n      })\n      resetFlashAlert(setFlashAlert)\n    }\n  }\n  return null\n}\n\nexport const DismissibleFlashOrToast = forwardRef(DismissibleFlashOrToastWithRef)\n\ntry{ DismissibleFlashWithRef.displayName ||= 'DismissibleFlashWithRef' } catch {}\ntry{ DismissibleFlash.displayName ||= 'DismissibleFlash' } catch {}\ntry{ DismissibleFlashOrToastWithRef.displayName ||= 'DismissibleFlashOrToastWithRef' } catch {}\ntry{ DismissibleFlashOrToast.displayName ||= 'DismissibleFlashOrToast' } catch {}"],"names":["ActorBypassMode","OrgAdminBypassMode","alreadyAdded","actorId","actorType","enabledBypassActors","some","matchingActorId","matchingActorType","getEnabledBypassActor","find","request","url","method","error","body","response","verifiedFetchJSON","ok","json","e","getBypassSuggestions","query","encodeURIComponent","ActorType","span","className","actorTypeString","roleIconMap","Write","PencilIcon","Maintain","ToolsIcon","EyeIcon","BypassAvatar","baseUrl","id","type","name","size","GitHubAvatar","alt","src","Octicon","icon","PersonIcon","sx","color","KeyIcon","PeopleIcon","DialogHeader","BypassDialogRow","owner","selected","setSelected","baseAvatarUrl","isChecked","item","FormControl","Checkbox","data-testid","value","checked","onChange","index","findIndex","bypassActor","slice","_enabled","_dirty","bypassMode","ALWAYS","LeadingVisual","Label","Box","display","alignItems","fontWeight","Truncate","title","maxWidth","Text","whiteSpace","overflow","textOverflow","Fragment","marginLeft","marginRight","displayName","BypassDialogBody","suggestions","newSuggestions","filter","s","height","length","CheckboxGroup","aria-labelledby","paddingBottom","ul","map","li","py","textAlign","Blankslate","Heading","as","BypassDialogHeader","onClose","bypassListFilter","setBypassListFilter","dialogLabelId","flashAlert","setFlashAlert","addReviewerSubtitle","flashRef","useRef","useEffect","current","focus","padding","flexDirection","DismissibleFlashOrToast","ref","Dialog","Title","flex","IconButton","variant","aria-label","XIcon","onClick","marginTop","visuallyHidden","TextInput","block","width","leadingVisual","SearchIcon","placeholder","target","paddingLeft","paddingTop","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderStyle","BypassDialog","addBypassActor","initialSuggestions","suggestionsUrl","useState","setSuggestions","message","debounceBypassSuggestions","useCallback","debounce","newFilter","footerButtons","content","buttonType","useFeatureFlag","Body","marginBottom","renderHeader","DismissibleFlashWithRef","children","Flash","justifyContent","pl","pr","mb","tabIndex","unsafeDisableTooltip","m","DismissibleFlash","forwardRef","resetFlashAlert","DismissibleFlashOrToastWithRef","addToast","useToastContext","convertToastsToFlashes","convertFlashVariantToToastType","flashVariant"],"sourceRoot":""}