---
summary: 'Update an organization repository ruleset'
description: |-
  Update a ruleset for an organization.
tags:
  - repos
operationId: repos/update-org-ruleset
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/orgs/rules#update-an-organization-repository-ruleset'
x-github-internal:
  path: /orgs/{org}/rulesets/{ruleset_id}
  http-method: put
  published: true
  owner: '@github/branch-protections'
x-github-releases:
  - api.github.com
  - ghec
  - ghes: '>= 3.11'
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true
  category: orgs
  subcategory: rules
parameters:
  - $ref: '../../components/parameters/org.yaml'
  - name: ruleset_id
    description: The ID of the ruleset.
    in: path
    required: true
    schema:
      type: integer
requestBody:
  description: 'Request body'
  required: false
  content:
    application/json:
      schema:
        type: object
        properties:
          name:
            type: string
            description: "The name of the ruleset."
          target:
            type: string
            # Remove the note below once push_rulesets feature flag is removed
            description: |-
              The target of the ruleset

              > [!NOTE]
              > The `push` target is in beta and is subject to change.
            x-graceful-enum: true
            # Remove the x-graceful-enum once member_privilege_rulesets is in beta
            enum:
              - branch
              - tag
              - push
          enforcement:
            $ref: '../../components/schemas/repository-rule-enforcement.yaml'
          bypass_actors:
            type: array
            description: The actors that can bypass the rules in this ruleset
            items:
              $ref: '../../components/schemas/repository-ruleset-bypass-actor.yaml'
          conditions:
            $ref: '../../components/schemas/org-ruleset-conditions.yaml'
          rules:
            description: An array of rules within the ruleset.
            type: array
            items:
              $ref: '../../components/schemas/repository-rule.yaml'
      examples:
        default:
          value:
            name: super cool ruleset
            target: branch
            enforcement: active
            bypass_actors:
              - actor_id: 234
                actor_type: Team
                bypass_mode: always
            conditions:
              ref_name:
                include:
                  - refs/heads/main
                  - refs/heads/master
                exclude:
                  - refs/heads/dev*
              repository_name:
                include:
                  - important_repository
                  - another_important_repository
                exclude:
                  - unimportant_repository
                protected: true
            rules:
              - type: commit_author_email_pattern
                parameters:
                  operator: contains
                  pattern: github
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/repository-ruleset.yaml'
        examples:
          default:
            $ref: '../../components/examples/org-ruleset.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
  '500':
        $ref: '../../components/responses/internal_error.yaml'
x-githubEnterpriseOverlays:
  '< 3.13':
    requestBody:
      content:
        application/json:
          schema:
            properties:
              target:
                type: string
                description: "The target of the ruleset."
                enum:
                  - branch
                  - tag
