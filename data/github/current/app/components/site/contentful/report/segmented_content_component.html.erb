<div <%= test_selector "contentful-diversity-report-segmented-content-component" %>>
  <% component_class = @is_sub_nav ? Primer::Alpha::TabPanels : Primer::Alpha::UnderlinePanels %>
  <% button_args = @is_sub_nav ? {classes: "subnav-item", px: [nil, nil, 2], py: [nil, nil, 1], border_radius: 0, border: true} : {} %>

  <%= render component_class.new(
    label: "Graphics for #{@label}",
    mb: 4,
    body_arguments: {classes: class_names({"SegmentedNav": @is_sub_nav})},
    **(@is_sub_nav ? { border_bottom: 0 } : {}),
  ) do |component| %>
    <% @segments.each_with_index do |segment, i| %>
      <% component.with_tab(
        panel_id: segment.fields[:id],
        id: segment.fields[:id],
        selected: i.zero?,
        **button_args,
      ) do |tab| %>

        <% tab.with_text { segment.fields[:label] } %>

          <% tab.with_panel(id: segment.fields[:id]) do %>
          <% if segment.graph.present? && segment.graph.content_type.id == "component_diversity_report_bar_graph" %>
            <%= render Site::Contentful::Report::BarGraphComponent.new(**segment.graph.fields.slice(:label, :image, :image_svg)) %>
          <% elsif segment.graph.present? && segment.graph.content_type.id == "component_diversity_report_pie_graph" %>
            <%= render Site::Contentful::Report::PieGraphComponent.new(**segment.graph.fields.slice(:image, :legend, :image_svg)) %>
          <% elsif segment.segmented_content.present? %>
            <%= render Site::Contentful::Report::SegmentedContentComponent.new(segments: segment.segmented_content, is_sub_nav: true, label: "#{strip_tags(segment.fields[:label])} content for #{@label}") %>
          <% end %>
        <% end %>
      <% end %>

    <% end %>
  <% end %>
</div>
